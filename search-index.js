antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component","keyword"],"fieldVectors":[["title/1",[0,8.353,1,12.518,2,12.256]],["name/1",[3,1.272]],["text/1",[0,1.104,2,1.619,4,4.492,5,4.216,6,3.54,7,2.957,8,5.061,9,5.061,10,5.061,11,5.061,12,5.061,13,5.061,14,3.436,15,8.48,16,3.162,17,2.388,18,4.656,19,3.475,20,3.279,21,2.587,22,3.219,23,3.794,24,2.699,25,4.656,26,2.419,27,2.551,28,2.822,29,2.66,30,3.005,31,3.498,32,5.289,33,3.651,34,2.739,35,5.323,36,2.91,37,4.216,38,3.341,39,5.652,40,3.548,41,2.551,42,4.347,43,2.957,44,3.005,45,4.216,46,2.162,47,3.056,48,4.216,49,4.492,50,4.656,51,3.005,52,3.279]],["component/1",[0,0.293,1,0.439]],["keyword/1",[]],["title/2-1",[24,20.427,26,18.308,53,38.304]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["keyword/2-1",[]],["title/2-2",[6,18.758,54,14.908,55,18.758,56,24.098]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["keyword/2-2",[]],["title/2-3",[24,23.709,57,20.976]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["keyword/2-3",[]],["title/2-4",[24,23.709,58,35.988]],["name/2-4",[]],["text/2-4",[]],["component/2-4",[]],["keyword/2-4",[]],["title/2-5",[24,23.709,59,38.182]],["name/2-5",[]],["text/2-5",[]],["component/2-5",[]],["keyword/2-5",[]],["title/2-6",[24,23.709,60,42.541]],["name/2-6",[]],["text/2-6",[]],["component/2-6",[]],["keyword/2-6",[]],["title/2-7",[24,23.709,61,42.541]],["name/2-7",[]],["text/2-7",[]],["component/2-7",[]],["keyword/2-7",[]],["title/2-8",[62,26.401,63,40.897]],["name/2-8",[]],["text/2-8",[]],["component/2-8",[]],["keyword/2-8",[]],["title/2-9",[64,25.565,65,25.975]],["name/2-9",[]],["text/2-9",[]],["component/2-9",[]],["keyword/2-9",[]],["title/2-10",[66,32.897,67,19.578,68,28.713]],["name/2-10",[]],["text/2-10",[]],["component/2-10",[]],["keyword/2-10",[]],["title/2-11",[46,16.366,67,19.578,68,28.713]],["name/2-11",[]],["text/2-11",[]],["component/2-11",[]],["keyword/2-11",[]],["title/2",[18,30.951,54,14.908,64,19.348,69,20.662]],["name/2",[3,1.272]],["text/2",[0,0.443,1,1.698,2,0.649,4,2.91,6,3.183,7,0.537,14,1.098,16,0.72,17,3.173,20,1.315,21,1.39,22,1.291,23,0.864,24,3.519,26,2.656,31,1.371,33,1.167,37,0.96,41,0.581,44,1.205,46,1.597,47,1.642,51,0.684,54,1.205,55,2.897,56,3.721,57,0.958,58,1.643,59,3.541,60,1.102,61,2.603,64,3.832,65,3.336,66,0.989,67,3.11,68,3.337,69,3.667,70,1.699,71,4.971,72,2.489,73,3.571,74,1.3,75,0.47,76,1.567,77,0.775,78,0.885,79,1.287,80,3.608,81,2.489,82,2.449,83,2.199,84,1.287,85,0.673,86,0.72,87,2.266,88,1.067,89,2.802,90,0.684,91,0.844,92,3.091,93,0.989,94,1.885,95,0.775,96,1.454,97,1.06,98,1.287,99,3.183,100,1.152,101,1.102,102,1.885,103,1.212,104,1.287,105,3.978,106,2.267,107,1.494,108,2.089,109,1.287,110,1.287,111,1.287,112,1.494,113,3.038,114,0.933,115,2.267,116,2.695,117,0.652,118,0.72,119,2.03,120,0.908,121,1.023,122,1.642,123,1.743,124,1.642,125,2.603,126,2.518,127,2.295,128,0.844,129,0.775,130,0.652,131,1.287,132,1.472,133,1.564,134,2.819,135,2.048,136,3.603,137,3.823,138,1.225,139,1.287,140,1.564,141,1.167,142,1.615,143,1.564,144,2.267,145,1.743,146,2.267,147,1.287,148,0.761,149,0.989,150,1.023,151,1.287,152,1.102,153,1.287,154,1.287,155,3.038,156,1.454,157,1.287,158,1.152,159,2.267,160,4.174,161,1.023,162,1.615,163,0.72,164,2.603,165,2.6,166,1.212,167,1.115,168,0.933,169,1.102,170,0.844,171,1.394,172,2.149,173,0.761,174,0.696,175,0.606,176,0.908,177,2.884,178,1.486,179,0.761,180,1.102,181,1.992,182,0.844,183,1.102,184,1.948,185,1.212,186,1.942,187,3.137,188,1.152,189,1.102,190,2.266,191,1.06,192,0.633,193,1.152,194,1.315,195,2.567,196,1.287,197,1.115,198,2.518,199,2.116,200,1.023,201,1.023,202,1.102,203,0.696,204,0.642,205,1.671,206,1.268,207,0.746,208,2.048,209,1.942,210,1.559,211,0.989,212,1.287,213,1.599,214,1.212,215,1.186,216,1.287,217,1.152,218,1.508,219,1.741,220,1.205,221,1.052,222,0.864,223,1.287,224,1.023,225,0.885,226,4.98,227,1.287,228,1.102,229,0.825,230,1.102,231,0.864,232,3.114,233,1.287,234,2.776,235,1.287,236,1.287,237,1.942,238,1.454,239,1.287,240,1.287,241,1.287,242,2.267,243,0.908,244,0.761,245,1.287,246,1.287,247,2.143,248,1.287,249,1.315,250,1.671,251,0.844,252,1.915,253,1.589,254,2.039,255,0.864,256,0.761,257,1.287,258,1.102,259,0.808,260,2.22,261,1.315,262,1.023,263,1.06,264,0.864,265,1.287,266,0.652,267,1.394,268,2.502,269,1.423,270,0.775,271,2.267,272,1.942,273,0.808,274,1.486,275,0.72,276,0.696,277,1.132,278,1.102,279,0.808,280,0.825,281,1.867,282,1.212,283,1.559,284,1.287,285,1.152,286,0.96,287,0.642,288,1.287,289,1.486,290,0.96,291,1.907,292,1.762,293,0.989,294,0.96,295,0.825,296,0.885,297,0.696,298,0.791,299,0.989,300,3.038,301,1.06,302,1.06,303,1.691,304,1.268,305,0.696,306,0.96,307,0.933,308,2.267,309,2.267,310,2.731,311,2.267,312,1.559,313,2.267,314,1.287,315,2.336,316,3.435,317,1.423,318,1.186,319,1.287,320,1.132,321,1.743,322,1.743,323,1.023,324,0.696,325,1.743,326,1.287,327,1.287,328,3.038,329,1.287,330,0.908,331,1.287,332,4.174,333,0.642,334,1.102,335,0.933,336,0.746,337,1.287,338,1.287,339,0.761,340,1.287,341,1.287,342,0.761,343,1.291,344,1.315,345,1.486,346,1.287,347,0.791,348,1.287,349,0.663,350,1.287,351,0.614,352,0.908,353,2.184,354,1.06,355,1.287,356,0.808,357,1.743,358,1.287,359,2.267,360,1.287,361,1.287,362,1.287,363,1.287,364,1.287,365,0.885,366,1.287,367,1.287,368,0.623,369,0.761,370,1.867,371,0.864,372,0.933,373,3.448,374,1.023,375,1.06,376,0.864,377,0.989,378,0.96,379,2.654,380,0.642,381,0.933,382,1.942,383,1.102,384,1.287,385,1.287,386,1.06]],["component/2",[0,0.293,1,0.439]],["keyword/2",[]],["title/3",[7,17.842,29,20.136,380,21.355]],["name/3",[3,1.272]],["text/3",[0,1.27,2,1.864,7,2.713,16,3.64,19,3.999,29,3.879,34,3.152,41,2.936,75,2.374,142,3.459,380,3.857,387,3.517,388,3.743,389,5.358,390,4.266,391,5.573,392,5.573,393,5.002,394,2.679,395,4.474,396,3.92]],["component/3",[0,0.293,1,0.439]],["keyword/3",[]],["title/4-1",[54,14.908,397,22.646,398,32.195,399,22.646]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["keyword/4-1",[]],["title/4-2",[400,28.713,401,26.302,402,29.42]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["keyword/4-2",[]],["title/4-3",[0,8.353,218,17.617,403,30.181]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["keyword/4-3",[]],["title/4-4",[0,8.353,1,12.518,404,25.781]],["name/4-4",[]],["text/4-4",[]],["component/4-4",[]],["keyword/4-4",[]],["title/4-5",[0,8.353,27,19.311,75,15.611]],["name/4-5",[]],["text/4-5",[]],["component/4-5",[]],["keyword/4-5",[]],["title/4-6",[218,20.448,353,25.975]],["name/4-6",[]],["text/4-6",[]],["component/4-6",[]],["keyword/4-6",[]],["title/4-7",[0,9.695,405,33.326]],["name/4-7",[]],["text/4-7",[]],["component/4-7",[]],["keyword/4-7",[]],["title/4",[76,21.249,406,26.401]],["name/4",[29,0.44,76,0.4,406,0.497]],["text/4",[0,1.218,1,1.503,2,1.471,6,1.756,7,2.078,14,0.59,17,2.23,20,0.995,21,1.944,22,0.693,26,2.132,27,1.707,28,0.856,29,2.096,30,0.647,31,1.152,32,0.485,33,0.883,34,0.831,36,1.947,38,0.384,40,0.408,41,0.549,44,0.912,46,0.466,47,0.658,51,0.647,52,0.706,54,0.258,55,1.274,56,1.637,57,2.105,62,0.912,63,0.535,64,1.662,65,0.34,67,1.944,69,2.08,70,0.796,72,1.999,73,1.704,74,0.734,75,2.771,76,3.49,77,0.733,78,2.768,80,2.153,81,1.999,82,1.147,83,0.31,86,0.681,87,1.28,88,1.78,90,1.87,92,1.151,94,0.883,95,0.733,96,0.417,99,2.12,101,1.043,102,0.883,105,4.249,107,0.844,108,0.447,112,1.429,116,3.201,117,1.474,118,0.364,122,1.166,124,1.166,127,0.357,128,0.426,129,0.392,130,0.87,132,2.157,133,0.335,134,2.443,135,1.207,136,1.85,137,2.909,138,0.351,140,0.883,141,1.111,142,1.546,143,1.811,148,0.384,149,0.936,156,0.417,162,1.147,163,1.207,165,0.598,167,0.844,170,1.125,171,0.4,172,1.314,173,0.384,174,0.927,175,1.78,177,1.872,178,1.125,179,0.719,180,0.557,181,0.426,182,0.798,183,0.557,184,0.78,186,0.557,187,0.557,190,0.485,192,1.587,194,0.995,195,0.4,197,0.32,199,1.636,202,0.557,203,0.351,204,0.856,205,0.357,206,0.681,207,0.377,208,0.681,209,1.043,211,0.5,215,0.34,218,1.749,219,0.508,220,0.912,221,1.185,230,1.043,231,1.713,232,0.908,234,2.318,238,1.637,243,0.859,244,1.275,247,1.21,249,1.252,250,1.403,252,2.222,253,0.637,254,0.436,256,0.384,259,0.764,260,2.011,261,0.377,264,0.817,266,0.617,269,2.666,270,0.392,272,0.557,273,0.408,274,0.426,275,0.364,276,0.658,277,1.274,278,0.557,279,0.408,280,0.417,283,0.837,287,1.888,289,0.798,295,1.1,297,0.927,298,1.569,299,0.936,305,1.38,310,0.485,312,0.837,318,0.637,320,1.756,324,0.927,330,0.859,333,1.451,336,0.706,339,0.384,343,0.977,344,1.686,345,0.426,347,1.327,351,1.219,353,2.106,356,0.408,365,0.447,368,0.831,369,0.719,376,0.817,387,2.296,388,1.408,390,0.426,394,2.329,395,0.447,397,1.752,398,1.043,399,1.945,400,1.951,401,3.836,402,3.89,403,1.522,404,0.392,405,1.713,406,3.547,407,2.407,408,3.818,409,0.908,410,0.817,411,0.517,412,0.927,413,1.3,414,0.65,415,2.235,416,1.801,417,0.557,418,0.4,419,2.705,420,0.5,421,0.65,422,0.912,423,0.612,424,1.656,425,0.627,426,0.882,427,0.777,428,0.65,429,1.043,430,2.701,431,0.557,432,1.319,433,0.417,434,3.006,435,0.5,436,2.856,437,2.765,438,0.988,439,1.455,440,2.032,441,1.716,442,0.777,443,2.464,444,0.392,445,1.043,446,1.043,447,0.748,448,0.535,449,1.186,450,0.459,451,0.557,452,0.535,453,0.557,454,1.85,455,0.65,456,0.612,457,2.658,458,0.557,459,3.266,460,1.217,461,0.977,462,0.65,463,3.709,464,2.168,465,1.713,466,1.999,467,2.187,468,2.552,469,2.552,470,2.235,471,1.217,472,1.217,473,0.485,474,1.602,475,1.28,476,0.557,477,0.777,478,1.002,479,2.361,480,0.5,481,0.485,482,0.65,483,0.557,484,1.217,485,0.517,486,0.65,487,0.65,488,1.716,489,1.217,490,0.65,491,0.777,492,0.557,493,0.817,494,0.967,495,0.612,496,2.107,497,0.517,498,0.65,499,0.65,500,0.557,501,0.417,502,0.557,503,1.043,504,0.535,505,0.459,506,2.482,507,0.364,508,0.65,509,0.557,510,1.28,511,0.535,512,0.65,513,0.65,514,1.217,515,1.217,516,1.47,517,0.447,518,2.051,519,2.158,520,0.557,521,0.65,522,0.706,523,2.668,524,0.733,525,0.557,526,0.777,527,1.448,528,1.448,529,0.777,530,0.517,531,0.557,532,0.65,533,0.65,534,0.777,535,0.777,536,0.517,537,0.459,538,1.413,539,1.716,540,0.777,541,1.09,542,0.471,543,1.609,544,0.65,545,1.849,546,0.859,547,1.564,548,1.363,549,1.47,550,1.47,551,1.616,552,0.764,553,1.616,554,1.47,555,2.404,556,1.616,557,3.052,558,0.777,559,0.777,560,0.777,561,1.564,562,1.686,563,0.612,564,1.968,565,0.65,566,0.557,567,0.777,568,0.557,569,0.65,570,0.65,571,1.656,572,0.557,573,1.602,574,1.674,575,0.447,576,0.837,577,0.5,578,0.535,579,0.557,580,0.485,581,0.417,582,0.459,583,0.459,584,2.116,585,0.436,586,0.557,587,0.557,588,0.557,589,0.557,590,0.557,591,0.535,592,0.557,593,0.517,594,1.3,595,0.535,596,0.517,597,0.485,598,0.557,599,1.484,600,0.859,601,1.043,602,1.002,603,0.612,604,0.65,605,1.252,606,1.217,607,0.377,608,0.517,609,0.936,610,0.612,611,0.777,612,0.777,613,0.777,614,0.65,615,0.557,616,1.002,617,0.582,618,0.37,619,0.447,620,1.146,621,1.043,622,0.612,623,1.146,624,0.37,625,0.65,626,2.279,627,0.471,628,0.557,629,0.37,630,0.557,631,0.777,632,0.557,633,2.487,634,2.256,635,0.557,636,0.447,637,0.384,638,0.408,639,0.535,640,0.535,641,0.471,642,0.557,643,0.557,644,0.798,645,0.557,646,0.557,647,1.455,648,3.014,649,0.557,650,0.582,651,0.65,652,0.535,653,0.4,654,0.377,655,0.65,656,2.235,657,0.798,658,0.436,659,0.748,660,1.043,661,0.817,662,1.47,663,1.146,664,3.594,665,0.607,666,1.043,667,1.043,668,1.002,669,1.043,670,1.002,671,0.612,672,0.65,673,0.417,674,0.936,675,1.09,676,0.459,677,0.447,678,1.217,679,0.612,680,0.65,681,0.65,682,0.5,683,0.612,684,0.557,685,0.612,686,0.612,687,0.612,688,0.485,689,0.408,690,1.319,691,0.65,692,0.557,693,0.65,694,0.65,695,0.612,696,0.5,697,0.557,698,0.557,699,0.485,700,0.436,701,0.517,702,0.459,703,2.491,704,0.517,705,0.65,706,1.217,707,0.65,708,1.413,709,1.146,710,1.849,711,1.125,712,1.616,713,2.187,714,1.47,715,1.716,716,1.47,717,1.043,718,0.777,719,0.936,720,1.043,721,0.936,722,0.557,723,0.65,724,0.485,725,0.436,726,0.459,727,0.557,728,1.47,729,0.65,730,1.47,731,0.557,732,0.65,733,0.65,734,0.535,735,1.47,736,0.65,737,0.471,738,0.436,739,0.535,740,1.043,741,0.557,742,0.5,743,0.557,744,0.777,745,0.408,746,0.65,747,0.612,748,0.65,749,0.882,750,0.908,751,0.612,752,1.002,753,0.5,754,0.447,755,1.043,756,0.557,757,0.65,758,0.65]],["component/4",[0,0.293,1,0.439]],["keyword/4",[]],["title/5-1",[27,19.311,57,18.072,175,20.136]],["name/5-1",[]],["text/5-1",[]],["component/5-1",[]],["keyword/5-1",[]],["title/5-2",[54,16.972,394,17.617,406,22.746]],["name/5-2",[]],["text/5-2",[]],["component/5-2",[]],["keyword/5-2",[]],["title/5-3",[43,22.38,425,22.026,759,28.713]],["name/5-3",[]],["text/5-3",[]],["component/5-3",[]],["keyword/5-3",[]],["title/5-4",[317,23.587,425,19.348,760,25.221,761,28.896]],["name/5-4",[]],["text/5-4",[]],["component/5-4",[]],["keyword/5-4",[]],["title/5-5",[0,9.695,77,29.924]],["name/5-5",[]],["text/5-5",[]],["component/5-5",[]],["keyword/5-5",[]],["title/5",[406,31.455]],["name/5",[29,0.62,406,0.701]],["text/5",[0,0.712,1,0.554,2,1.774,5,0.784,6,0.525,7,2.45,14,0.917,17,0.8,19,1.164,21,1.445,23,1.734,26,2.763,27,2.727,28,0.945,29,2.979,30,0.559,31,1.426,36,1.877,37,1.412,38,0.621,40,0.66,41,0.475,43,2.627,44,0.559,46,2.368,48,0.784,52,0.61,57,1.54,65,0.55,67,1.668,70,1.199,72,2.481,73,0.917,74,2.437,75,0.691,76,1.739,80,2.978,81,2.586,82,1.007,83,1.94,85,0.55,88,1.716,90,1.679,91,1.242,94,0.975,95,0.634,99,2.842,102,1.877,105,3.985,107,1.792,112,1.998,114,0.762,116,3.414,117,1.309,118,0.588,122,1.024,123,1.456,126,1.302,127,0.578,129,0.634,130,2.404,132,0.509,133,0.541,134,2.06,135,1.059,138,0.568,140,1.877,142,1.679,143,0.541,148,1.119,156,0.674,162,0.559,163,1.445,165,0.517,167,0.931,172,2.442,173,0.621,174,0.568,175,2.083,178,0.689,192,1.792,195,1.164,197,1.553,198,2.507,199,2.243,203,1.396,204,0.945,205,0.578,207,0.61,208,1.445,215,0.55,218,1.064,219,1.077,220,0.559,221,2.054,228,0.901,229,0.674,232,1.412,234,2.507,247,0.742,249,1.498,252,1.351,253,0.55,256,0.621,259,0.66,260,0.559,261,0.61,266,0.533,267,2.916,269,0.66,270,0.634,274,0.689,275,1.059,276,0.568,277,1.577,279,1.621,283,1.776,287,1.289,292,1.098,297,1.971,298,1.588,304,0.588,316,0.784,317,1.189,318,0.991,320,1.82,324,1.024,325,0.809,333,0.945,339,0.621,342,0.621,344,1.498,345,0.689,347,1.942,349,0.975,352,2.572,368,1.53,371,0.706,379,0.762,380,0.525,381,1.372,387,1.396,388,0.917,394,2.606,395,0.723,396,0.634,399,1.903,404,1.141,405,0.706,406,3.606,408,0.559,412,0.568,415,0.809,418,2.241,422,0.559,424,0.599,425,3.11,429,1.622,430,4.615,432,2.803,433,0.674,434,1.799,435,0.809,436,3.22,437,4.516,438,1.859,443,1.498,444,0.634,445,5.034,446,3.123,447,3.377,448,0.866,449,0.578,450,0.742,453,0.901,454,0.762,457,3.002,459,3.647,461,1.471,463,1.141,464,2.356,470,1.986,474,1.982,478,0.866,492,3.123,493,0.706,496,0.762,501,0.674,503,2.706,504,1.56,517,2.507,518,0.742,520,0.901,522,0.61,527,1.271,547,0.762,552,0.66,564,1.445,568,1.622,571,2.076,573,0.66,576,0.723,581,0.674,582,0.742,583,0.742,594,0.634,597,0.784,598,0.901,599,0.723,600,0.742,605,1.098,618,1.078,619,0.723,624,1.471,626,1.903,629,1.471,630,0.901,632,0.901,633,3.336,634,1.657,635,1.622,636,1.302,637,1.119,638,2.288,639,1.56,640,1.56,641,1.872,642,1.622,653,1.164,654,1.498,657,0.689,658,1.271,659,0.646,661,0.706,673,0.674,700,1.734,702,0.742,711,2.071,722,0.901,726,0.742,734,0.866,745,1.982,749,0.762,752,0.866,753,0.809,754,0.723,759,3.943,760,3.371,761,4.224,762,1.051,763,2.507,764,0.941,765,0.866,766,0.901,767,2.12,768,1.051,769,1.051,770,1.051,771,0.723,772,0.941,773,1.051,774,1.051,775,1.051,776,1.412,777,1.372,778,0.901,779,1.051,780,1.051,781,1.051,782,2.289,783,0.706,784,0.706,785,0.866,786,0.866,787,0.836,788,0.99,789,1.051,790,1.051,791,1.657,792,0.762,793,1.051,794,1.893,795,0.836,796,1.893,797,1.051,798,1.505,799,0.901,800,1.051,801,0.621,802,0.762,803,1.051,804,0.941,805,0.809,806,1.051,807,1.051,808,4.425,809,0.941,810,1.051,811,1.051,812,1.695,813,1.893,814,0.866,815,1.257,816,1.257,817,1.257,818,1.257,819,1.257,820,1.257,821,1.257,822,0.809,823,1.257,824,1.893,825,0.723,826,0.809,827,0.866,828,1.242,829,0.99,830,0.941,831,1.051,832,1.051,833,0.99,834,0.809,835,1.351,836,0.809,837,1.051,838,1.051,839,1.051,840,3.002,841,2.213,842,0.784,843,1.622,844,0.762,845,1.051,846,1.051,847,1.051,848,1.051,849,1.051,850,0.901,851,0.866,852,3.123,853,2.719,854,1.872,855,1.051,856,0.809,857,0.941,858,1.051,859,0.901,860,2.583,861,0.941,862,1.051,863,1.051,864,1.051,865,0.809,866,1.695,867,1.051,868,0.901,869,1.051,870,1.051,871,1.257,872,1.257,873,0.901,874,0.941,875,1.051,876,1.051,877,1.783,878,1.051,879,2.128,880,0.784,881,1.051,882,0.866,883,0.901,884,0.762,885,1.051,886,1.051,887,5.27,888,0.99,889,1.893,890,0.901,891,1.051,892,1.051,893,1.051,894,1.051,895,1.257,896,1.051,897,1.051,898,1.893,899,1.783,900,1.893,901,1.051,902,1.051,903,1.051,904,0.901,905,0.836,906,0.866,907,0.941,908,1.051,909,0.809,910,1.622,911,1.456,912,0.901,913,0.836,914,0.901,915,0.901,916,0.866,917,1.051,918,1.051,919,0.901,920,1.271,921,1.051,922,0.99,923,1.051,924,1.051,925,1.051,926,0.866,927,0.836,928,1.051,929,2.583,930,3.158,931,1.051,932,1.051,933,1.051,934,1.893,935,1.051,936,0.99,937,0.99,938,1.051,939,1.051,940,1.505,941,0.784,942,1.051,943,0.866,944,0.866,945,0.99,946,2.433,947,0.784,948,1.051,949,1.051,950,1.893,951,1.051,952,1.051,953,1.051,954,0.706,955,0.723,956,1.051,957,1.051,958,0.901]],["component/5",[0,0.293,1,0.439]],["keyword/5",[]],["title/6-1",[26,16.081,54,14.908,85,19.658,959,32.195]],["name/6-1",[]],["text/6-1",[]],["component/6-1",[]],["keyword/6-1",[]],["title/6-2",[54,16.972,85,22.38,394,17.617]],["name/6-2",[]],["text/6-2",[]],["component/6-2",[]],["keyword/6-2",[]],["title/6-3",[57,20.976,835,25.975]],["name/6-3",[]],["text/6-3",[]],["component/6-3",[]],["keyword/6-3",[]],["title/6-4",[118,23.935,394,17.617,835,22.38]],["name/6-4",[]],["text/6-4",[]],["component/6-4",[]],["keyword/6-4",[]],["title/6-5",[75,15.611,394,17.617,618,24.365]],["name/6-5",[]],["text/6-5",[]],["component/6-5",[]],["keyword/6-5",[]],["title/6-6",[75,13.713,324,20.314,444,22.646,618,21.402]],["name/6-6",[]],["text/6-6",[]],["component/6-6",[]],["keyword/6-6",[]],["title/6-7",[0,8.353,21,19.578,251,28.053]],["name/6-7",[]],["text/6-7",[]],["component/6-7",[]],["keyword/6-7",[]],["title/6-8",[0,6.541,55,16.724,130,16.983,199,16.983,960,25.763]],["name/6-8",[]],["text/6-8",[]],["component/6-8",[]],["keyword/6-8",[]],["title/6-9",[0,6.541,55,16.724,73,16.232,218,13.797,443,19.434]],["name/6-9",[]],["text/6-9",[]],["component/6-9",[]],["keyword/6-9",[]],["title/6-10",[0,7.337,2,10.766,251,24.641,333,18.758]],["name/6-10",[]],["text/6-10",[]],["component/6-10",[]],["keyword/6-10",[]],["title/6",[287,24.786,438,22.724]],["name/6",[156,0.845,452,1.085]],["text/6",[0,1.305,1,0.512,2,2.25,14,3.086,17,2.31,20,1.394,21,3.015,22,0.548,24,0.46,26,2.557,27,0.435,28,0.481,29,2.478,30,0.512,31,1.334,34,0.847,36,1.237,38,1.034,41,1.085,44,0.512,46,0.919,51,0.93,52,0.559,54,0.382,55,3.426,57,1.448,59,0.741,62,2.397,64,0.901,65,0.915,67,2.306,70,0.447,72,1.974,73,2.82,74,1.264,75,2.473,76,2.9,77,1.054,80,3.229,81,1.806,82,2.23,83,0.46,85,0.915,86,0.539,88,0.453,89,1.613,93,0.741,94,1.765,99,2.628,102,2.321,105,4.136,107,0.474,112,0.474,116,3.283,117,1.218,118,1.917,122,0.521,124,1.299,127,0.962,128,2.516,129,0.58,130,0.887,132,1.164,133,0.496,134,2.554,135,0.539,140,1.765,141,2.466,148,1.746,150,1.39,162,0.512,163,1.653,165,2.688,167,1.685,171,1.075,172,2.466,173,0.569,174,2.074,175,1.613,177,0.559,181,0.632,184,1.122,189,0.825,190,0.718,191,0.793,192,1.685,194,0.559,197,0.474,198,0.662,199,2.554,203,0.521,204,1.475,205,0.53,206,1.653,207,1.394,208,1.653,210,1.652,213,0.679,215,1.257,218,1.727,220,0.512,221,1.371,222,0.646,225,0.662,229,0.618,234,1.475,244,1.42,249,0.559,250,1.321,251,3.706,252,2.505,253,0.504,254,0.646,255,1.174,256,0.569,260,0.512,262,0.765,266,0.887,267,1.817,269,1.098,270,0.58,275,0.539,276,1.853,277,1.199,279,0.604,287,0.481,291,1.508,292,1.394,297,1.299,298,0.592,303,0.718,304,0.539,305,1.853,312,0.662,318,0.504,320,1.475,324,0.945,330,0.679,333,0.481,336,1.015,342,0.569,343,0.996,349,0.496,351,0.835,368,1.432,369,2.026,370,0.793,371,0.646,372,0.698,374,0.765,375,1.979,378,0.718,383,0.825,387,0.945,394,2.713,396,0.58,397,1.054,399,1.781,400,1.174,401,0.592,408,1.822,409,0.718,410,0.646,412,0.521,416,1.234,418,0.592,422,0.512,424,1.368,430,3.794,433,0.618,434,2.727,436,0.618,438,0.8,440,3.613,443,2.225,449,0.53,461,0.996,464,2.556,465,0.646,466,0.662,474,0.604,476,2.531,485,1.39,497,0.765,501,0.618,505,1.695,506,0.679,507,0.979,509,1.498,510,1.304,511,1.441,522,1.714,524,2.312,528,0.646,531,1.498,536,1.39,537,0.679,542,0.698,546,1.234,562,1.015,564,0.979,571,3.909,574,1.575,575,0.662,580,0.718,581,1.122,594,0.58,605,0.559,618,2.87,619,1.203,624,0.548,626,2.065,629,0.996,634,2.689,637,0.569,644,0.632,653,0.592,654,0.559,659,1.075,664,2.204,673,1.541,682,1.848,689,0.604,711,0.632,719,0.741,724,0.718,738,0.646,750,0.718,771,0.662,776,0.718,778,1.498,783,0.646,784,0.646,791,1.122,801,3.111,822,1.345,825,0.662,827,1.441,835,3.126,836,1.848,842,2.204,844,0.698,854,1.741,859,1.498,882,0.793,883,0.825,920,1.613,941,0.718,947,0.718,954,2.575,959,1.498,960,3.225,961,0.963,962,3.039,963,1.749,964,0.963,965,0.963,966,2.402,967,0.963,968,0.698,969,1.477,970,1.749,971,1.566,972,0.963,973,1.304,974,0.793,975,1.749,976,1.749,977,3.714,978,2.954,979,1.749,980,1.749,981,1.566,982,1.749,983,1.749,984,1.749,985,0.963,986,1.749,987,2.638,988,1.749,989,1.749,990,1.749,991,1.749,992,1.749,993,1.749,994,1.749,995,1.749,996,1.749,997,1.749,998,2.402,999,0.963,1000,1.498,1001,0.963,1002,0.825,1003,0.646,1004,0.963,1005,0.963,1006,1.979,1007,3.069,1008,2.402,1009,1.566,1010,0.793,1011,0.793,1012,0.963,1013,0.825,1014,3.128,1015,0.963,1016,0.963,1017,0.963,1018,2.402,1019,1.749,1020,0.907,1021,1.749,1022,0.963,1023,2.936,1024,0.963,1025,0.963,1026,0.963,1027,0.963,1028,3.836,1029,0.825,1030,1.345,1031,0.963,1032,2.531,1033,1.749,1034,1.749,1035,1.979,1036,2.954,1037,0.963,1038,0.963,1039,0.963,1040,0.963,1041,2.402,1042,0.963,1043,0.963,1044,0.963,1045,0.907,1046,1.741,1047,0.963,1048,1.749,1049,0.662,1050,0.907,1051,0.963,1052,0.963,1053,0.907,1054,0.963,1055,0.963,1056,0.963,1057,0.963,1058,0.963,1059,0.963,1060,0.963,1061,0.825,1062,0.963,1063,0.963,1064,0.862,1065,0.963,1066,0.963,1067,0.793,1068,0.963,1069,0.963,1070,0.718,1071,0.907,1072,0.963,1073,0.963,1074,0.825,1075,0.963,1076,0.963,1077,0.963,1078,0.963,1079,0.963,1080,0.963,1081,0.963,1082,0.862,1083,0.963,1084,0.963,1085,0.963,1086,0.963,1087,0.825,1088,1.498,1089,0.825,1090,1.749,1091,0.963,1092,0.862,1093,0.963,1094,1.498,1095,0.825,1096,0.963,1097,0.963,1098,0.862,1099,0.825,1100,1.749,1101,1.498,1102,1.979,1103,0.963,1104,0.963,1105,0.963,1106,0.963,1107,0.963,1108,1.345,1109,0.741,1110,0.963,1111,0.963,1112,0.862,1113,0.963,1114,0.963,1115,0.793,1116,1.749,1117,0.907,1118,0.963,1119,0.963,1120,0.963,1121,0.793,1122,2.263,1123,1.749,1124,1.749,1125,1.304,1126,0.963,1127,2.151,1128,2.263,1129,0.741,1130,2.646,1131,0.963,1132,1.749,1133,0.862,1134,0.862,1135,1.749,1136,0.765,1137,0.907,1138,0.963,1139,0.963,1140,0.862,1141,0.963,1142,0.963,1143,0.963,1144,0.963,1145,1.749,1146,0.963,1147,0.825]],["component/6",[0,0.293,1,0.439]],["keyword/6",[]],["title/7",[2,12.256,132,20.727,287,21.355]],["name/7",[3,1.272]],["text/7",[0,1.401,2,2.24,16,3.225,17,2.435,26,3.345,28,2.877,31,3.24,46,2.205,70,2.675,73,3.478,74,3.072,75,2.103,76,2.466,86,3.225,88,2.713,91,3.779,94,2.967,95,3.473,138,3.116,171,3.544,174,3.116,204,2.877,238,3.696,281,4.747,286,4.299,287,3.583,307,4.177,320,2.877,349,2.967,351,2.752,368,2.792,388,2.792,394,2.373,438,2.638,530,4.58,763,3.964,777,4.177,785,4.747,955,3.964,1148,4.432,1149,7.177,1150,5.763,1151,5.763,1152,5.763]],["component/7",[0,0.293,1,0.439]],["keyword/7",[]],["title/8-1",[2,12.256,27,19.311,75,15.611]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["keyword/8-1",[]],["title/8-2",[69,20.662,218,15.475,401,23.104,402,25.842]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["keyword/8-2",[]],["title/8-3",[2,12.256,57,18.072,75,15.611]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["keyword/8-3",[]],["title/8-4",[2,12.256,46,16.366,422,22.746]],["name/8-4",[]],["text/8-4",[]],["component/8-4",[]],["keyword/8-4",[]],["title/8-5",[74,18.308,447,26.302,1153,29.42]],["name/8-5",[]],["text/8-5",[]],["component/8-5",[]],["keyword/8-5",[]],["title/8-6",[2,12.256,46,16.366,624,24.365]],["name/8-6",[]],["text/8-6",[]],["component/8-6",[]],["keyword/8-6",[]],["title/8",[2,12.256,46,16.366,74,18.308]],["name/8",[2,0.378,74,0.564]],["text/8",[1,0.818,2,2.313,14,1.354,17,2.23,21,2.416,23,1.099,30,2.807,31,1.649,33,1.438,34,0.793,36,0.843,41,0.739,44,0.871,46,2.157,51,2.296,52,0.95,55,0.817,57,0.692,62,1.943,64,1.438,65,0.857,67,2.719,68,1.875,69,2.375,70,1.297,72,0.771,73,2.558,74,3.282,75,2.739,76,3.553,80,3.442,81,1.72,82,1.943,83,0.782,88,1.72,90,1.485,96,2.343,99,1.824,102,2.718,105,3.828,107,0.805,112,0.805,116,3.43,117,2.189,122,0.885,124,1.51,127,0.9,130,1.852,132,1.77,133,0.843,134,0.83,138,0.885,140,2.224,141,0.843,143,0.843,148,0.968,162,1.943,165,1.374,167,3.158,168,2.025,170,2.396,172,0.843,174,2.621,175,0.771,177,1.621,179,0.968,181,1.074,182,1.074,184,1.05,192,1.374,194,0.95,197,0.805,200,1.301,201,1.301,203,0.885,204,1.395,205,0.9,207,0.95,208,2.416,210,1.126,215,1.462,218,1.505,219,1.524,220,0.871,221,0.76,222,1.099,225,1.921,229,1.05,231,1.099,234,2.965,238,1.792,247,1.155,250,1.536,251,1.074,252,2.259,253,0.857,256,0.968,260,0.871,264,1.875,266,0.83,270,0.987,274,1.074,277,1.395,280,1.05,283,1.126,290,1.221,291,1.028,292,0.95,296,1.126,298,1.007,304,0.916,305,1.51,306,1.221,310,1.221,315,1.259,316,1.221,318,0.857,320,1.824,324,0.885,333,1.824,336,0.95,339,0.968,342,0.968,344,2.812,345,1.832,349,0.843,351,0.782,352,2.578,353,1.462,356,1.754,368,0.793,369,1.651,380,1.824,387,2.335,388,0.793,394,0.674,397,2.603,401,1.718,402,2.513,404,2.202,408,3.692,409,2.725,412,1.51,419,2.81,422,0.871,424,2.081,430,2.453,434,2.761,438,1.672,447,4.175,449,0.9,458,1.403,463,3.182,479,1.099,480,1.259,501,1.05,505,1.971,507,0.916,518,2.578,524,1.684,528,1.099,543,2.084,546,1.155,562,1.621,564,0.916,571,2.46,573,1.028,574,3.697,575,1.126,576,2.513,577,2.148,578,2.301,579,1.403,580,2.725,581,1.792,582,1.155,584,1.832,594,1.684,600,1.155,601,2.394,607,0.95,616,1.349,617,1.466,624,0.933,637,0.968,649,1.403,653,1.718,654,1.621,673,1.05,674,2.81,676,1.155,677,1.921,696,2.148,756,1.403,763,2.513,777,1.187,805,1.259,822,2.148,825,1.921,828,1.074,842,1.221,852,1.403,853,1.221,905,1.301,910,1.403,911,1.259,941,1.221,947,1.221,954,1.099,955,2.513,962,3.13,1003,1.099,1013,1.403,1014,2.084,1023,1.403,1032,1.403,1035,2.301,1046,2.025,1049,2.97,1101,1.403,1102,2.301,1115,1.349,1125,1.221,1153,1.126,1154,2.631,1155,1.637,1156,1.301,1157,2.794,1158,1.637,1159,1.637,1160,1.637,1161,1.637,1162,1.542,1163,1.403,1164,1.637,1165,1.637,1166,1.637,1167,1.542,1168,1.637,1169,5.319,1170,2.502,1171,1.542,1172,1.259,1173,1.542,1174,2.631,1175,1.542,1176,1.542,1177,1.542,1178,1.542,1179,2.631,1180,2.631,1181,2.394,1182,1.542,1183,2.631,1184,1.542,1185,1.542,1186,1.542,1187,1.542,1188,2.631,1189,1.301,1190,1.126,1191,3.441,1192,3.441,1193,1.542,1194,1.542,1195,4.068,1196,1.637,1197,1.637,1198,2.794,1199,2.794,1200,4.068,1201,2.394,1202,1.466,1203,1.466,1204,1.637,1205,1.637,1206,1.637,1207,1.301,1208,3.131,1209,1.637,1210,2.794,1211,1.155,1212,1.637,1213,3.01,1214,1.221]],["component/8",[0,0.293,1,0.439]],["keyword/8",[]],["title/9",[7,20.709,1215,30.528]],["name/9",[3,1.272]],["text/9",[0,1.27,2,1.864,7,2.713,16,3.64,19,3.999,28,3.247,34,3.152,41,2.936,75,2.374,142,3.459,380,3.247,387,3.517,388,3.743,389,5.358,390,4.266,391,5.573,392,5.573,393,5.002,394,2.679,395,4.474,396,3.92,1215,5.067]],["component/9",[0,0.293,1,0.439]],["keyword/9",[]],["title/10-1",[54,19.699,397,29.924]],["name/10-1",[]],["text/10-1",[]],["component/10-1",[]],["keyword/10-1",[]],["title/10-2",[218,17.617,353,22.38,408,22.746]],["name/10-2",[]],["text/10-2",[]],["component/10-2",[]],["keyword/10-2",[]],["title/10-3",[0,9.695,77,29.924]],["name/10-3",[]],["text/10-3",[]],["component/10-3",[]],["keyword/10-3",[]],["title/10-4",[0,7.337,1,10.996,2,10.766,404,22.646]],["name/10-4",[]],["text/10-4",[]],["component/10-4",[]],["keyword/10-4",[]],["title/10",[76,16.081,1215,23.104,1216,25.842,1217,25.842]],["name/10",[76,0.4,835,0.489,969,0.575]],["text/10",[0,1.211,1,1.07,2,1.514,6,0.528,7,2.1,14,0.922,17,1.875,20,1.505,21,2.176,22,0.602,26,1.744,27,0.859,28,1.295,29,1.492,30,1.686,31,1.431,33,0.979,36,1.336,40,0.663,41,0.477,44,1.011,46,1.213,47,0.571,51,0.562,57,1.545,62,1.011,64,0.544,65,0.553,67,1.865,69,1.046,70,0.883,72,2.089,73,1.975,74,1.357,75,2.904,76,3.528,78,0.727,80,1.854,81,2.238,82,0.562,86,0.591,88,1.722,90,1.945,92,1.277,93,0.813,94,0.544,95,1.146,96,0.678,99,2.035,102,0.979,105,4.406,107,0.935,108,1.308,112,1.559,116,3.337,117,1.315,120,0.746,121,0.84,124,1.714,129,0.637,130,0.964,132,2.15,134,2.678,135,0.591,136,1.379,137,3.134,140,0.979,141,1.336,142,1.945,143,1.336,149,1.463,152,0.905,162,1.011,163,0.591,165,1.275,167,0.935,170,1.247,172,2.099,173,0.625,174,1.028,175,2.238,182,0.693,184,0.678,192,2.183,194,1.505,197,0.52,199,2.066,204,0.528,206,0.591,211,0.813,215,0.553,218,2.268,219,0.441,220,0.562,221,1.471,224,0.84,234,1.826,238,2.033,243,1.342,244,1.533,249,1.103,250,2.615,252,1.357,253,0.553,259,0.663,260,1.379,261,0.613,264,1.277,266,0.536,269,3.161,273,0.663,275,0.591,276,0.571,277,0.528,280,0.678,287,1.826,289,1.247,295,1.22,296,0.727,297,1.028,304,1.064,305,0.571,312,0.727,320,1.583,333,1.295,336,1.103,343,1.477,344,1.103,347,1.595,349,0.544,351,0.908,353,2.881,365,0.727,376,2.455,380,0.95,387,1.714,388,0.922,390,0.693,394,2.35,397,2.205,399,1.563,400,2.128,401,3.814,402,3.925,403,1.342,405,1.741,406,0.562,407,1.419,408,4.138,410,1.277,411,0.84,412,1.028,419,2.813,422,0.562,424,0.602,425,0.544,431,0.905,432,0.813,434,2.322,436,2.033,438,1.674,443,2.122,447,0.65,449,0.581,450,0.746,451,0.905,459,0.813,461,1.083,463,3.821,466,0.727,473,0.788,474,0.663,475,1.935,479,2.455,480,0.813,481,0.788,483,0.905,493,0.709,494,0.84,506,2.581,507,0.591,518,2.581,522,1.103,523,2.876,524,0.637,525,0.905,527,1.277,528,1.741,542,0.766,543,0.788,545,0.905,546,0.746,547,3.447,548,0.84,549,0.905,550,0.905,551,1.791,552,1.194,553,2.443,554,0.905,555,2.443,556,0.995,561,1.379,562,2.122,564,2.047,566,0.905,571,1.806,572,0.905,573,2.296,583,0.746,584,2.673,585,0.709,586,0.905,587,0.905,588,0.905,589,0.905,590,0.905,591,0.87,592,0.905,593,0.84,594,1.911,595,1.567,596,0.84,599,1.784,600,1.342,602,0.87,605,1.505,607,1.505,609,0.813,618,0.602,619,0.727,620,1.791,621,1.63,622,0.995,623,1.791,624,1.083,626,3.184,627,1.379,628,0.905,629,1.083,633,2.749,634,3.229,636,0.727,637,0.625,638,0.663,643,0.905,644,1.247,645,0.905,646,0.905,648,3.492,653,0.65,654,0.613,656,3.134,657,1.247,658,1.741,659,0.65,660,0.905,661,1.277,662,1.63,663,1.791,664,4.514,665,0.95,666,1.63,667,1.63,668,1.567,669,1.63,670,1.567,676,0.746,684,0.905,685,0.995,686,0.995,687,0.995,688,2.728,689,0.663,690,1.463,696,0.813,697,0.905,698,0.905,699,0.788,700,0.709,701,0.84,702,0.746,703,2.716,708,0.87,710,0.905,711,1.701,712,2.443,713,2.222,714,2.222,716,2.222,717,1.63,719,0.813,720,0.905,721,0.813,726,0.746,727,0.905,728,0.905,730,1.63,731,0.905,735,1.63,737,0.766,738,0.709,739,0.87,740,1.63,741,0.905,742,0.813,743,0.905,745,0.663,755,0.905,766,1.63,801,0.625,835,0.995,969,1.169,1156,0.84,1190,0.727,1215,2.729,1216,0.727,1217,0.727,1218,1.057,1219,0.766,1220,0.84,1221,1.057,1222,1.057,1223,1.057,1224,1.057,1225,0.87,1226,1.057,1227,1.057,1228,1.057,1229,3.239,1230,1.057,1231,1.057,1232,0.87,1233,0.905,1234,0.84,1235,1.057,1236,1.057,1237,1.057,1238,2.594,1239,1.902,1240,0.905,1241,0.905,1242,1.057,1243,1.057,1244,3.17,1245,5.223,1246,2.594,1247,1.057,1248,0.946,1249,0.905,1250,0.905,1251,0.905,1252,1.902,1253,1.057,1254,2.594,1255,1.057,1256,1.057,1257,1.902,1258,0.946,1259,0.995,1260,0.995,1261,1.902,1262,1.057,1263,1.057,1264,1.057,1265,1.057,1266,1.057]],["component/10",[0,0.293,1,0.439]],["keyword/10",[]],["title/11-1",[27,19.311,57,18.072,175,20.136]],["name/11-1",[]],["text/11-1",[]],["component/11-1",[]],["keyword/11-1",[]],["title/11-2",[2,12.256,54,16.972,394,17.617]],["name/11-2",[]],["text/11-2",[]],["component/11-2",[]],["keyword/11-2",[]],["title/11-3",[27,19.311,412,23.127,1267,36.652]],["name/11-3",[]],["text/11-3",[]],["component/11-3",[]],["keyword/11-3",[]],["title/11-4",[43,25.975,759,33.326]],["name/11-4",[]],["text/11-4",[]],["component/11-4",[]],["keyword/11-4",[]],["title/11-5",[317,26.852,425,22.026,760,28.713]],["name/11-5",[]],["text/11-5",[]],["component/11-5",[]],["keyword/11-5",[]],["title/11-6",[0,9.695,77,29.924]],["name/11-6",[]],["text/11-6",[]],["component/11-6",[]],["keyword/11-6",[]],["title/11",[1215,26.302,1216,29.42,1217,29.42]],["name/11",[835,0.689,969,0.81]],["text/11",[0,0.933,1,0.876,2,2.064,6,1.025,7,1.993,14,0.387,17,0.868,19,0.492,21,0.366,22,0.455,26,1.723,27,0.927,28,0.399,29,0.967,30,2.141,31,0.927,33,0.76,34,0.387,36,0.76,38,0.872,41,0.361,43,2.798,46,1.828,47,1.11,51,0.784,55,0.736,56,0.513,57,1.427,58,1.069,62,0.784,65,0.418,67,1.703,70,0.685,72,1.896,73,1.637,74,2.289,80,2.711,81,2.593,82,0.425,83,2.174,85,1.074,86,1.674,87,1.532,88,1.59,89,1.378,90,0.425,91,0.524,94,1.057,97,3.544,99,2.75,102,1.916,105,4.479,107,1.01,108,0.55,112,1.471,114,1.069,116,2.507,118,0.825,120,1.041,122,1.618,123,0.615,124,0.432,125,0.685,126,0.55,127,1.405,128,0.967,129,0.482,130,2.308,132,0.995,133,0.412,134,1.295,135,0.447,138,0.432,140,1.739,141,1.057,142,0.784,148,0.473,162,0.425,163,0.447,165,1.661,167,0.725,168,1.069,171,0.907,172,1.541,175,1.408,176,0.564,177,0.464,178,0.967,179,1.214,192,0.393,195,0.492,197,0.393,199,2.422,203,0.432,204,0.736,205,0.44,206,0.447,207,0.464,208,1.429,213,0.564,215,0.418,218,1.232,219,1.065,220,0.425,221,2.113,234,2.272,244,0.872,249,0.856,250,1.129,253,1.074,254,0.537,255,0.537,256,0.473,258,0.685,260,1.796,261,0.856,266,0.405,267,2.476,269,0.502,270,0.482,275,0.447,276,1.381,277,0.399,279,0.502,280,0.946,287,0.399,289,0.524,291,0.926,292,0.856,293,2.598,294,1.1,295,0.513,296,0.55,297,0.798,298,0.492,299,0.615,305,0.798,317,0.926,318,2.107,320,1.275,323,0.635,324,0.432,333,0.399,335,1.069,336,0.464,339,0.473,342,0.473,343,0.455,344,0.856,347,0.907,351,1.429,356,0.926,365,0.55,368,0.995,369,1.214,371,0.537,372,0.58,376,2.267,377,0.615,379,0.58,381,0.58,388,0.715,390,0.967,394,2.131,396,0.482,399,0.482,404,0.889,410,0.537,412,1.11,413,1.238,418,0.907,420,0.615,422,0.425,424,1.17,425,1.916,426,1.488,433,0.513,434,1.704,436,2.759,438,0.94,443,0.856,444,0.889,447,2.077,449,0.44,450,0.564,461,2.839,463,2.242,465,0.537,466,0.55,467,1.759,475,2.775,478,1.692,479,0.537,481,3.209,493,0.99,496,0.58,501,0.946,502,1.264,507,0.447,510,0.596,517,0.55,522,1.482,523,1.041,524,0.482,527,0.99,537,0.564,538,0.659,552,0.502,561,0.58,562,1.482,564,1.674,571,1.704,573,0.502,574,0.524,576,0.55,581,0.513,584,0.967,597,0.596,599,1.015,605,1.482,609,0.615,615,0.685,618,0.455,624,1.17,626,2.242,627,1.069,629,1.924,633,3.621,634,2.166,636,1.757,637,0.872,638,2.857,641,1.851,644,3.613,652,0.659,654,0.464,656,0.615,657,2.215,661,0.99,670,0.659,674,0.615,676,1.041,677,0.55,689,0.926,700,0.537,702,0.564,704,1.172,711,1.675,725,0.537,726,0.564,737,0.58,742,0.615,745,0.502,749,0.58,750,0.596,753,0.615,759,3.798,760,1.378,761,1.579,765,1.692,767,0.99,771,0.55,776,0.596,782,0.58,783,0.537,786,0.659,787,1.172,791,1.317,792,1.851,795,1.632,799,1.264,801,0.473,802,1.851,805,0.615,814,0.659,826,1.579,828,0.524,834,0.615,835,1.946,836,0.615,840,2.104,841,0.685,843,0.685,844,0.58,850,1.264,851,0.659,853,3.395,854,1.851,856,1.579,865,1.134,868,0.685,873,0.685,874,1.839,879,0.659,880,0.596,904,1.264,906,0.659,911,0.615,912,0.685,913,0.635,914,0.685,915,0.685,916,0.659,920,0.537,926,0.659,940,0.635,943,1.215,944,0.659,945,0.753,946,2.406,954,0.99,968,0.58,969,3.289,973,0.596,974,0.659,1049,0.55,1061,0.685,1067,0.659,1070,1.532,1074,0.685,1108,0.615,1109,0.615,1125,0.596,1129,0.615,1136,0.635,1153,0.55,1172,0.615,1189,0.635,1190,0.55,1201,0.685,1213,0.659,1214,0.596,1215,1.571,1216,1.015,1217,1.015,1225,3.936,1229,4.607,1232,1.215,1234,0.635,1240,0.685,1241,0.685,1245,2.782,1248,0.716,1249,0.685,1250,1.759,1251,1.264,1267,2.894,1268,0.716,1269,2.406,1270,1.1,1271,0.753,1272,0.8,1273,0.8,1274,2.03,1275,0.8,1276,0.716,1277,2.992,1278,4.874,1279,0.8,1280,1.475,1281,0.8,1282,2.054,1283,0.8,1284,0.8,1285,0.8,1286,0.8,1287,2.054,1288,1.934,1289,1.475,1290,0.8,1291,0.8,1292,0.8,1293,0.8,1294,2.054,1295,1.475,1296,1.475,1297,0.753,1298,0.753,1299,0.753,1300,2.818,1301,0.753,1302,0.8,1303,0.8,1304,1.475,1305,0.8,1306,0.8,1307,0.8,1308,1.475,1309,1.389,1310,1.475,1311,4.027,1312,0.8,1313,0.8,1314,0.8,1315,1.475,1316,1.475,1317,0.8,1318,0.8,1319,0.8,1320,0.8,1321,2.054,1322,2.054,1323,1.475,1324,1.475,1325,0.8,1326,1.475,1327,2.054,1328,2.554,1329,1.389,1330,0.8,1331,1.475,1332,0.8,1333,0.8,1334,1.475,1335,0.8,1336,0.8,1337,0.8,1338,4.552,1339,0.8,1340,2.054,1341,0.8,1342,0.8,1343,1.475,1344,1.475,1345,1.475,1346,1.475,1347,2.554,1348,0.8,1349,0.8,1350,0.8,1351,0.685,1352,0.8,1353,0.8,1354,0.8,1355,0.8,1356,3.097,1357,1.475,1358,1.475,1359,0.8,1360,0.8,1361,0.753,1362,0.8,1363,0.8,1364,0.659,1365,0.753,1366,0.8,1367,0.8,1368,1.321,1369,0.8,1370,0.8,1371,1.475,1372,0.8,1373,0.8,1374,0.8,1375,0.8,1376,0.685,1377,0.753,1378,0.716,1379,1.321,1380,1.389,1381,0.8,1382,0.8,1383,0.8,1384,0.8,1385,0.8,1386,0.659,1387,0.8,1388,1.934,1389,0.8,1390,0.8,1391,0.8,1392,0.8,1393,0.8,1394,0.8,1395,0.8,1396,0.8,1397,0.8,1398,0.8,1399,0.8,1400,0.58,1401,0.8,1402,0.8,1403,0.8,1404,0.8,1405,1.475,1406,0.8,1407,0.8,1408,0.8,1409,0.8,1410,0.615,1411,0.753,1412,0.716,1413,0.685,1414,1.389,1415,1.389,1416,1.389,1417,0.753,1418,0.685,1419,0.753,1420,3.793,1421,0.753,1422,0.753,1423,0.753,1424,0.716,1425,0.716,1426,0.753,1427,0.753,1428,0.753,1429,5.693,1430,1.475,1431,0.659,1432,0.753,1433,0.8,1434,1.475,1435,0.8,1436,0.8,1437,0.753,1438,0.8,1439,0.8,1440,1.475,1441,0.8,1442,0.8,1443,0.8,1444,0.8,1445,0.8,1446,0.8,1447,0.8,1448,0.753,1449,0.8,1450,0.8,1451,0.8,1452,3.793,1453,0.753,1454,1.389,1455,2.054,1456,0.956,1457,0.956,1458,0.956,1459,0.956,1460,0.8,1461,0.753,1462,0.8,1463,1.475,1464,1.475,1465,0.8,1466,0.8,1467,0.716,1468,0.716,1469,0.615,1470,0.685,1471,0.753,1472,0.862,1473,0.956,1474,0.956,1475,0.956,1476,0.753,1477,1.215,1478,0.659,1479,1.389,1480,3.793,1481,0.753,1482,0.8,1483,0.8,1484,0.8,1485,0.8]],["component/11",[0,0.293,1,0.439]],["keyword/11",[]],["title/12-1",[81,20.136,143,22.026,767,28.713]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["keyword/12-1",[]],["title/12-2",[64,17.25,69,18.422,72,15.769,1486,28.704,1487,25.763]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["keyword/12-2",[]],["title/12-3",[24,23.709,112,24.416]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["keyword/12-3",[]],["title/12-4",[20,21.797,107,18.478,1488,37.575,1489,32.195]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["keyword/12-4",[]],["title/12-5",[197,16.474,219,13.973,321,25.763,322,25.763,1487,25.763]],["name/12-5",[]],["text/12-5",[]],["component/12-5",[]],["keyword/12-5",[]],["title/12",[1477,48.727]],["name/12",[3,1.272]],["text/12",[1,1.244,6,1.008,7,0.842,14,0.978,17,2.084,20,3.408,21,2.258,22,1.15,24,3.102,26,1.819,31,0.911,33,2.189,34,0.978,36,1.039,43,1.056,45,2.484,46,0.772,47,1.091,48,1.505,54,0.801,55,3.103,56,3.501,62,2.623,64,3.571,65,1.056,66,2.561,67,1.945,69,3.001,70,0.937,72,1.567,73,0.978,74,3.166,75,0.737,76,0.864,80,1.023,81,2.001,82,3.124,85,2.224,88,1.567,90,2.26,94,2.189,96,1.294,99,2.122,102,2.189,105,2.933,116,2.39,117,1.023,128,1.324,130,1.688,133,1.039,134,2.767,138,1.8,140,1.039,141,1.715,143,1.715,161,1.604,162,1.073,163,1.129,164,1.729,165,2.09,167,2.684,169,2.853,170,2.788,173,1.193,174,1.091,175,2.322,176,2.349,179,1.193,181,2.788,192,2.09,194,1.171,195,1.241,198,1.388,199,3.516,206,1.129,210,3.392,215,1.742,218,0.831,219,1.773,220,2.26,221,1.545,222,2.235,225,1.388,231,2.235,234,3.243,237,5.034,243,1.424,244,1.193,250,1.11,252,1.056,253,1.056,259,1.267,261,1.171,266,1.023,273,1.267,275,1.129,276,1.8,277,1.008,286,1.505,290,1.505,291,2.09,292,1.932,293,1.552,297,1.8,301,1.662,302,2.743,304,2.378,305,1.091,307,3.575,315,1.552,318,1.056,321,2.561,322,3.269,325,1.552,330,1.424,334,1.729,339,1.193,342,1.193,345,1.324,349,1.039,351,0.964,357,1.552,368,0.978,369,1.968,380,1.662,382,1.729,386,4.063,407,1.505,413,2.562,415,3.793,416,2.999,417,2.853,422,1.073,433,1.294,438,0.924,444,2.973,449,2.337,454,2.414,461,1.15,465,1.355,473,1.505,474,1.267,500,1.729,505,3.851,506,1.424,507,1.129,517,1.388,524,3.541,552,1.267,571,3.7,574,2.184,577,1.552,585,2.235,605,1.171,608,1.604,629,1.897,658,1.355,673,2.136,682,5.178,688,1.505,689,1.267,724,2.484,745,1.267,763,3.392,767,1.355,783,2.235,784,2.235,791,2.136,798,1.604,801,1.193,825,1.388,828,2.184,884,1.463,890,1.729,909,1.552,919,1.729,920,1.355,927,1.604,958,1.729,960,4.198,962,2.414,973,2.484,1003,1.355,1029,2.853,1046,1.463,1049,2.29,1087,1.729,1088,1.729,1089,1.729,1094,4.226,1095,1.729,1129,1.552,1148,1.552,1153,1.388,1207,3.378,1211,1.424,1214,2.484,1233,2.853,1364,1.662,1400,3.081,1410,1.552,1469,1.552,1478,1.662,1486,4.677,1487,3.269,1489,1.729,1490,1.807,1491,1.807,1492,2.018,1493,2.018,1494,2.018,1495,5.875,1496,2.018,1497,3.33,1498,2.018,1499,2.018,1500,2.018,1501,2.018,1502,1.901,1503,2.018,1504,1.901,1505,2.018,1506,2.018,1507,2.018,1508,2.018,1509,3.33,1510,1.901,1511,2.018,1512,1.662,1513,1.807,1514,3.33,1515,2.018,1516,2.018,1517,2.018,1518,2.018,1519,4.677,1520,2.018,1521,4.251,1522,2.018,1523,4.251,1524,2.018,1525,2.018,1526,2.018,1527,2.018,1528,2.018,1529,3.33,1530,4.004,1531,2.018,1532,3.33,1533,2.018,1534,3.33,1535,2.018,1536,1.662,1537,4.251,1538,3.33,1539,2.018,1540,2.018,1541,2.018,1542,2.018,1543,2.018,1544,1.604]],["component/12",[0,0.293,1,0.439]],["keyword/12",[]],["title/13",[0,8.353,1,12.518,2,12.256]],["name/13",[3,1.272]],["text/13",[0,1.104,2,1.619,4,4.492,5,4.216,6,3.54,7,2.957,8,5.061,9,5.061,10,5.061,11,5.061,12,5.061,13,5.061,14,3.436,16,3.162,17,2.388,18,4.656,19,3.475,20,3.279,21,2.587,22,3.219,23,3.794,24,2.699,25,4.656,26,2.419,27,2.551,28,2.822,29,2.66,30,3.005,31,3.498,32,5.289,33,3.651,34,2.739,35,5.323,36,2.91,37,4.216,38,3.341,39,5.652,40,3.548,41,2.551,42,4.347,43,2.957,44,3.005,45,4.216,46,2.162,47,3.056,48,4.216,49,4.492,50,4.656,51,3.005,52,3.279,1545,8.48]],["component/13",[0,0.293,1,0.439]],["keyword/13",[]],["title/14-1",[24,20.427,26,18.308,53,38.304]],["name/14-1",[]],["text/14-1",[]],["component/14-1",[]],["keyword/14-1",[]],["title/14-2",[6,18.758,54,14.908,55,18.758,56,24.098]],["name/14-2",[]],["text/14-2",[]],["component/14-2",[]],["keyword/14-2",[]],["title/14-3",[24,23.709,57,20.976]],["name/14-3",[]],["text/14-3",[]],["component/14-3",[]],["keyword/14-3",[]],["title/14-4",[24,23.709,58,35.988]],["name/14-4",[]],["text/14-4",[]],["component/14-4",[]],["keyword/14-4",[]],["title/14-5",[24,23.709,59,38.182]],["name/14-5",[]],["text/14-5",[]],["component/14-5",[]],["keyword/14-5",[]],["title/14-6",[24,23.709,60,42.541]],["name/14-6",[]],["text/14-6",[]],["component/14-6",[]],["keyword/14-6",[]],["title/14-7",[24,23.709,61,42.541]],["name/14-7",[]],["text/14-7",[]],["component/14-7",[]],["keyword/14-7",[]],["title/14-8",[62,26.401,63,40.897]],["name/14-8",[]],["text/14-8",[]],["component/14-8",[]],["keyword/14-8",[]],["title/14-9",[64,25.565,65,25.975]],["name/14-9",[]],["text/14-9",[]],["component/14-9",[]],["keyword/14-9",[]],["title/14-10",[66,32.897,67,19.578,68,28.713]],["name/14-10",[]],["text/14-10",[]],["component/14-10",[]],["keyword/14-10",[]],["title/14-11",[46,16.366,67,19.578,68,28.713]],["name/14-11",[]],["text/14-11",[]],["component/14-11",[]],["keyword/14-11",[]],["title/14",[18,30.951,54,14.908,64,19.348,69,20.662]],["name/14",[3,1.272]],["text/14",[0,0.443,1,1.698,2,0.649,4,2.91,6,3.183,7,0.537,14,1.098,16,0.72,17,3.173,20,1.315,21,1.39,22,1.291,23,0.864,24,3.519,26,2.656,31,1.371,33,1.167,37,0.96,41,0.581,44,1.205,46,1.597,47,1.642,51,0.684,54,1.205,55,2.897,56,3.721,57,0.958,58,1.643,59,3.541,60,1.102,61,2.603,64,3.832,65,3.336,66,0.989,67,3.11,68,3.337,69,3.667,70,1.699,71,4.971,72,2.489,73,3.571,74,1.3,75,0.47,76,1.567,77,0.775,78,0.885,79,1.287,80,3.608,81,2.489,82,2.449,83,2.199,84,1.287,85,0.673,86,0.72,87,2.266,88,1.067,89,2.802,90,0.684,91,0.844,92,3.091,93,0.989,94,1.885,95,0.775,96,1.454,97,1.06,98,1.287,99,3.183,100,1.152,101,1.102,102,1.885,103,1.212,104,1.287,105,3.978,106,2.267,107,1.494,108,2.089,109,1.287,110,1.287,111,1.287,112,1.494,113,3.038,114,0.933,115,2.267,116,2.695,117,0.652,118,0.72,119,2.03,120,0.908,121,1.023,122,1.642,123,1.743,124,1.642,125,2.603,126,2.518,127,2.295,128,0.844,129,0.775,130,0.652,131,1.287,132,1.472,133,1.564,134,2.819,135,2.048,136,3.603,137,3.823,138,1.225,139,1.287,140,1.564,141,1.167,142,1.615,143,1.564,144,2.267,145,1.743,146,2.267,147,1.287,148,0.761,149,0.989,150,1.023,151,1.287,152,1.102,153,1.287,154,1.287,155,3.038,156,1.454,157,1.287,158,1.152,159,2.267,160,4.174,161,1.023,162,1.615,163,0.72,164,2.603,165,2.6,166,1.212,167,1.115,168,0.933,169,1.102,170,0.844,171,1.394,172,2.149,173,0.761,174,0.696,175,0.606,176,0.908,177,2.884,178,1.486,179,0.761,180,1.102,181,1.992,182,0.844,183,1.102,184,1.948,185,1.212,186,1.942,187,3.137,188,1.152,189,1.102,190,2.266,191,1.06,192,0.633,193,1.152,194,1.315,195,2.567,196,1.287,197,1.115,198,2.518,199,2.116,200,1.023,201,1.023,202,1.102,203,0.696,204,0.642,205,1.671,206,1.268,207,0.746,208,2.048,209,1.942,210,1.559,211,0.989,212,1.287,213,1.599,214,1.212,215,1.186,216,1.287,217,1.152,218,1.508,219,1.741,220,1.205,221,1.052,222,0.864,223,1.287,224,1.023,225,0.885,226,4.98,227,1.287,228,1.102,229,0.825,230,1.102,231,0.864,232,3.114,233,1.287,234,2.776,235,1.287,236,1.287,237,1.942,238,1.454,239,1.287,240,1.287,241,1.287,242,2.267,243,0.908,244,0.761,245,1.287,246,1.287,247,2.143,248,1.287,249,1.315,250,1.671,251,0.844,252,1.915,253,1.589,254,2.039,255,0.864,256,0.761,257,1.287,258,1.102,259,0.808,260,2.22,261,1.315,262,1.023,263,1.06,264,0.864,265,1.287,266,0.652,267,1.394,268,2.502,269,1.423,270,0.775,271,2.267,272,1.942,273,0.808,274,1.486,275,0.72,276,0.696,277,1.132,278,1.102,279,0.808,280,0.825,281,1.867,282,1.212,283,1.559,284,1.287,285,1.152,286,0.96,287,0.642,288,1.287,289,1.486,290,0.96,291,1.907,292,1.762,293,0.989,294,0.96,295,0.825,296,0.885,297,0.696,298,0.791,299,0.989,300,3.038,301,1.06,302,1.06,303,1.691,304,1.268,305,0.696,306,0.96,307,0.933,308,2.267,309,2.267,310,2.731,311,2.267,312,1.559,313,2.267,314,1.287,315,2.336,316,3.435,317,1.423,318,1.186,319,1.287,320,1.132,321,1.743,322,1.743,323,1.023,324,0.696,325,1.743,326,1.287,327,1.287,328,3.038,329,1.287,330,0.908,331,1.287,332,4.174,333,0.642,334,1.102,335,0.933,336,0.746,337,1.287,338,1.287,339,0.761,340,1.287,341,1.287,342,0.761,343,1.291,344,1.315,345,1.486,346,1.287,347,0.791,348,1.287,349,0.663,350,1.287,351,0.614,352,0.908,353,2.184,354,1.06,355,1.287,356,0.808,357,1.743,358,1.287,359,2.267,360,1.287,361,1.287,362,1.287,363,1.287,364,1.287,365,0.885,366,1.287,367,1.287,368,0.623,369,0.761,370,1.867,371,0.864,372,0.933,373,3.448,374,1.023,375,1.06,376,0.864,377,0.989,378,0.96,379,2.654,380,0.642,381,0.933,382,1.942,383,1.102,384,1.287,385,1.287,386,1.06]],["component/14",[0,0.293,1,0.439]],["keyword/14",[]],["title/15",[7,17.842,29,20.136,380,21.355]],["name/15",[3,1.272]],["text/15",[0,1.27,2,1.864,7,2.713,16,3.64,19,3.999,29,3.879,34,3.152,41,2.936,75,2.374,142,3.459,380,3.857,387,3.517,388,3.743,389,5.358,390,4.266,391,5.573,392,5.573,393,5.002,394,2.679,395,4.474,396,3.92]],["component/15",[0,0.293,1,0.439]],["keyword/15",[]],["title/16-1",[27,19.311,57,18.072,175,20.136]],["name/16-1",[]],["text/16-1",[]],["component/16-1",[]],["keyword/16-1",[]],["title/16-2",[54,16.972,394,17.617,406,22.746]],["name/16-2",[]],["text/16-2",[]],["component/16-2",[]],["keyword/16-2",[]],["title/16-3",[43,22.38,425,22.026,759,28.713]],["name/16-3",[]],["text/16-3",[]],["component/16-3",[]],["keyword/16-3",[]],["title/16-4",[317,23.587,425,19.348,760,25.221,761,28.896]],["name/16-4",[]],["text/16-4",[]],["component/16-4",[]],["keyword/16-4",[]],["title/16-5",[0,9.695,77,29.924]],["name/16-5",[]],["text/16-5",[]],["component/16-5",[]],["keyword/16-5",[]],["title/16",[406,31.455]],["name/16",[29,0.62,406,0.701]],["text/16",[0,0.711,1,0.477,2,1.657,5,0.665,6,0.445,7,2.347,14,0.79,17,0.952,19,1.002,21,1.484,23,1.512,26,2.828,27,2.737,28,0.814,29,2.913,30,0.474,31,1.256,36,1.875,37,1.216,38,0.527,40,0.56,41,0.402,43,2.399,44,0.474,46,2.213,48,0.665,52,0.517,54,0.354,57,1.539,65,0.466,67,1.667,70,1.292,72,2.276,73,0.79,74,2.166,75,1.458,76,2.166,80,2.852,81,2.567,82,0.474,83,2.056,85,0.466,86,0.499,88,1.88,90,1.724,91,1.069,94,0.839,95,0.537,99,2.723,102,1.875,105,4.157,107,1.594,112,1.791,114,0.646,116,3.323,117,1.411,118,1.26,122,0.881,123,1.254,124,0.482,126,1.121,127,0.49,129,0.537,130,2.183,132,0.432,133,0.459,134,1.846,135,1.26,138,0.482,140,1.875,141,0.839,142,1.48,143,1.16,148,0.964,156,1.444,162,0.474,163,1.26,165,0.438,167,1.108,172,2.361,173,0.527,174,0.482,175,1.88,177,0.517,178,0.585,182,0.585,192,1.594,195,1.002,197,1.369,198,2.23,199,2.025,203,1.218,204,0.814,205,1.239,207,0.517,208,1.26,215,0.466,218,0.928,219,0.939,220,0.474,221,1.854,228,0.764,229,0.572,234,2.63,247,0.629,249,1.307,252,1.178,253,0.466,256,0.527,259,1.023,260,0.474,261,0.517,266,0.452,267,2.819,269,0.56,270,0.537,274,0.585,275,0.912,276,0.881,277,1.39,279,1.414,283,2.23,287,1.124,292,0.946,295,0.572,297,1.969,298,1.002,304,0.499,305,0.482,316,0.665,317,1.023,318,0.466,320,1.618,324,0.881,325,0.686,333,0.814,335,0.646,339,0.964,342,0.527,344,1.615,345,0.585,347,1.711,349,0.839,351,0.426,352,2.57,368,1.349,371,0.598,372,0.646,378,1.68,379,0.646,380,0.445,381,1.182,387,1.505,388,0.79,394,2.596,395,0.613,396,0.537,399,1.954,401,1.002,404,1.678,405,0.598,406,3.605,408,1.724,411,0.709,412,0.482,413,0.537,415,0.686,416,0.629,418,2.239,422,0.474,424,0.508,425,2.897,429,1.93,430,4.654,432,2.493,433,0.572,434,1.585,435,0.686,436,2.941,437,4.337,438,1.667,443,1.307,444,0.537,445,4.82,446,2.778,447,2.973,448,0.734,449,0.49,450,0.629,453,0.764,454,1.182,457,2.67,459,4.051,461,1.283,463,1.678,464,2.418,470,2.493,474,2.035,479,0.598,485,0.709,492,3.121,493,0.598,501,0.572,503,2.778,504,1.343,507,0.912,517,2.505,518,0.629,520,0.764,522,0.517,527,1.094,528,0.598,547,0.646,552,0.56,562,0.517,564,1.26,568,1.397,571,1.847,573,0.56,576,0.613,581,0.572,582,0.629,583,0.629,584,0.585,594,0.537,597,0.665,598,0.764,599,0.613,600,0.629,605,0.946,607,0.946,618,2.075,624,1.283,626,2.195,629,1.585,630,1.397,632,1.397,633,3.461,634,1.785,635,1.93,636,1.549,637,1.331,638,2.286,639,1.855,640,1.855,641,2.017,642,1.93,653,1.002,654,1.307,657,1.477,658,1.094,659,0.548,661,0.598,673,0.572,700,1.512,702,0.629,711,1.825,722,0.764,726,0.629,734,0.734,745,1.747,752,0.734,753,0.686,754,0.613,759,3.661,760,3.078,761,4.051,762,0.892,763,2.23,764,0.798,765,0.734,766,0.764,767,2.176,768,0.892,769,0.892,770,0.892,771,0.613,772,0.798,773,0.892,774,0.892,775,0.892,776,1.68,777,1.182,778,0.764,779,0.892,780,0.892,781,0.892,782,2.35,783,0.598,784,0.598,785,0.734,786,0.734,787,0.709,788,0.84,789,0.892,790,0.892,791,1.444,792,0.646,793,0.892,794,2.252,795,0.709,796,1.63,797,0.892,798,1.296,799,0.764,800,0.892,801,0.527,802,0.646,803,0.892,804,0.798,805,0.686,806,0.892,807,1.63,808,4.306,809,0.798,810,0.892,811,0.892,812,1.46,813,1.63,814,0.734,822,0.686,824,1.63,825,0.613,826,0.686,827,0.734,828,1.069,829,1.535,830,1.46,831,1.63,832,1.63,833,1.535,834,1.254,835,1.456,837,0.892,838,0.892,839,0.892,840,2.67,841,1.93,842,0.665,843,2.385,844,0.646,845,0.892,846,0.892,847,0.892,848,0.892,849,0.892,850,0.764,851,0.734,852,3.69,853,2.418,854,1.633,855,0.892,856,0.686,857,0.798,858,0.892,859,0.764,860,2.252,861,0.798,862,0.892,863,0.892,864,0.892,865,1.254,866,1.46,867,0.892,868,0.764,869,0.892,870,0.892,873,0.764,875,0.892,876,0.892,877,1.535,878,0.892,879,1.855,880,0.665,881,0.892,882,0.734,883,0.764,884,0.646,885,0.892,886,0.892,887,4.836,888,0.84,889,1.63,890,0.764,891,0.892,892,0.892,893,0.892,894,0.892,896,0.892,897,0.892,898,1.63,899,1.535,900,1.63,901,0.892,902,0.892,903,0.892,904,0.764,905,0.709,906,0.734,907,0.798,908,0.892,909,0.686,910,1.397,911,1.254,912,0.764,913,0.709,914,0.764,915,0.764,916,0.734,917,0.892,918,0.892,919,0.764,920,1.094,921,0.892,922,0.84,923,0.892,924,0.892,925,0.892,926,0.734,927,0.709,928,0.892,929,2.252,930,2.783,931,0.892,932,0.892,933,0.892,934,1.63,935,0.892,936,0.84,937,0.84,938,0.892,939,0.892,940,1.296,941,0.665,942,0.892,943,0.734,944,0.734,945,0.84,946,2.121,947,0.665,948,0.892,949,0.892,950,1.63,951,0.892,952,0.892,953,0.892,954,0.598,955,0.613,956,0.892,957,0.892,958,0.764,962,0.646,968,0.646,971,0.798,977,1.343,987,1.121,1000,1.397,1003,0.598,1006,1.343,1007,0.798,1009,0.798,1011,0.734,1030,0.686,1098,0.798,1112,0.798,1211,0.629,1219,1.633,1220,1.296,1270,0.665,1386,0.734,1400,1.182,1431,1.343,1467,0.798,1468,1.46,1470,0.764,1512,0.734,1513,0.798,1536,0.734,1546,0.892,1547,0.84,1548,3.494,1549,0.961,1550,0.961,1551,2.121,1552,0.961,1553,0.961,1554,1.757,1555,0.961,1556,0.84,1557,0.961,1558,0.961,1559,0.961,1560,1.757,1561,1.757,1562,1.757,1563,0.961,1564,0.961,1565,0.961,1566,0.961,1567,0.961]],["component/16",[0,0.293,1,0.439]],["keyword/16",[]],["title/17-1",[54,14.908,397,22.646,398,32.195,399,22.646]],["name/17-1",[]],["text/17-1",[]],["component/17-1",[]],["keyword/17-1",[]],["title/17-2",[400,28.713,402,29.42,754,29.42]],["name/17-2",[]],["text/17-2",[]],["component/17-2",[]],["keyword/17-2",[]],["title/17-3",[33,19.348,54,14.908,83,17.943,232,28.026]],["name/17-3",[]],["text/17-3",[]],["component/17-3",[]],["keyword/17-3",[]],["title/17-4",[83,20.427,218,17.617,408,22.746]],["name/17-4",[]],["text/17-4",[]],["component/17-4",[]],["keyword/17-4",[]],["title/17-5",[0,8.353,75,15.611,403,30.181]],["name/17-5",[]],["text/17-5",[]],["component/17-5",[]],["keyword/17-5",[]],["title/17-6",[2,12.256,76,18.308,406,22.746]],["name/17-6",[]],["text/17-6",[]],["component/17-6",[]],["keyword/17-6",[]],["title/17-7",[0,8.353,27,19.311,75,15.611]],["name/17-7",[]],["text/17-7",[]],["component/17-7",[]],["keyword/17-7",[]],["title/17-8",[218,20.448,353,25.975]],["name/17-8",[]],["text/17-8",[]],["component/17-8",[]],["keyword/17-8",[]],["title/17-9",[0,9.695,405,33.326]],["name/17-9",[]],["text/17-9",[]],["component/17-9",[]],["keyword/17-9",[]],["title/17-10",[1568,63.759]],["name/17-10",[]],["text/17-10",[]],["component/17-10",[]],["keyword/17-10",[]],["title/17",[76,21.249,406,26.401]],["name/17",[29,0.44,76,0.4,406,0.497]],["text/17",[0,1.152,1,1.299,2,1.433,6,2.293,7,2.136,14,0.482,17,2.458,20,1.044,21,1.793,22,0.566,26,2.14,27,1.582,28,0.707,29,2.013,30,0.529,31,0.97,32,0.391,33,0.927,34,0.687,36,2.017,38,0.588,40,0.329,41,0.449,42,0.403,43,0.274,44,0.753,46,0.542,47,0.537,51,0.529,52,0.577,55,1.856,56,2.1,57,1.807,62,0.957,63,0.432,64,1.686,65,0.52,67,2.168,69,2.256,70,0.997,72,1.844,73,1.587,74,0.224,75,2.756,76,3.499,77,0.599,78,2.557,80,2.08,81,2.23,82,1.312,83,2.327,86,0.556,87,1.343,88,1.65,90,1.467,92,0.951,94,1.42,95,0.599,96,0.336,99,1.956,101,1.214,102,0.73,105,4.18,107,0.697,108,0.361,112,1.056,116,3.122,117,1.777,118,0.293,119,0.47,120,0.37,121,1.126,122,0.973,124,0.973,127,0.288,128,0.344,129,0.316,130,1.089,132,1.898,133,0.27,134,2.597,135,1.202,136,1.557,137,3.012,138,0.537,140,0.927,141,0.927,142,1.312,143,1.42,148,0.31,149,0.764,150,0.79,156,0.638,158,1.269,162,1.142,163,1.007,165,0.489,167,0.885,170,0.652,171,0.322,172,1.686,173,0.838,174,0.766,175,1.65,177,1.756,178,0.344,179,0.838,180,0.449,181,1.18,182,0.344,183,0.449,184,0.638,186,0.449,187,0.449,190,1.057,192,1.356,194,0.822,195,1.107,197,0.258,199,1.535,202,1.214,203,0.284,204,1.072,205,0.288,206,0.556,207,0.304,208,0.556,209,0.852,211,0.403,215,0.52,218,1.613,219,0.591,220,0.753,221,0.997,222,0.352,230,0.449,231,0.951,232,1.343,234,2.615,238,0.909,243,0.701,244,1.458,247,0.701,249,1.044,250,1.356,252,2.237,253,0.52,254,0.667,255,0.352,256,0.31,259,0.624,260,1.864,261,0.304,264,0.667,266,0.504,268,0.432,269,2.575,270,0.316,272,0.449,273,0.329,274,0.344,276,0.973,277,1.072,278,0.449,279,0.329,280,0.336,283,0.684,287,1.635,289,0.652,291,0.889,292,0.822,295,0.909,297,0.766,298,0.322,299,1.09,303,0.741,304,0.293,305,1.334,306,0.391,310,0.391,312,0.684,318,0.741,320,1.635,324,1.161,330,1,333,1.231,335,0.38,336,0.577,339,1.27,342,0.31,343,0.566,344,1.431,345,0.344,347,1.107,351,1.445,352,0.37,353,2.146,354,0.432,356,0.329,365,0.361,368,0.687,369,0.838,371,0.352,376,1.208,378,1.602,387,2.312,388,1.587,390,0.344,394,2.245,395,0.361,397,1.974,398,0.852,399,1.662,400,2.198,401,3.15,402,4.163,403,1.27,404,0.316,405,1.442,406,3.592,407,2.258,408,3.962,409,0.741,410,0.951,411,0.417,412,0.766,413,0.854,414,0.524,415,1.652,416,1.516,417,0.449,418,0.611,419,2.519,420,0.403,421,0.524,422,0.753,423,0.494,424,1.724,425,0.73,426,1.305,428,0.524,429,0.852,430,2.496,431,0.449,432,0.764,433,0.638,434,2.918,435,0.764,436,3.038,437,2.113,438,1.129,441,0.994,443,2.272,444,0.316,445,0.852,446,0.852,447,0.322,448,0.432,449,1.181,450,0.701,451,0.449,452,0.432,453,0.449,454,1.999,455,0.524,456,0.494,457,2.272,458,0.449,459,3.155,460,0.994,461,0.807,462,0.524,463,3.455,464,2.057,465,1.442,466,1.696,467,1.841,468,2.148,469,2.148,470,2.121,471,0.994,472,0.994,473,0.391,474,1.548,475,1.343,476,0.449,478,1.167,479,2.353,480,0.403,481,0.391,482,0.524,483,0.449,484,0.994,485,0.417,486,0.524,487,0.524,488,1.417,489,0.994,490,0.524,492,0.449,493,0.667,494,0.79,495,0.494,496,1.788,497,0.79,498,0.524,499,0.524,500,0.449,501,0.638,502,0.449,503,0.852,504,0.432,505,0.37,506,2.136,507,0.293,508,0.524,509,0.449,510,1.057,511,0.819,512,0.524,513,0.524,514,0.994,515,0.994,516,1.214,517,0.361,518,1.74,519,1.8,520,0.449,521,0.524,522,1.044,523,2.764,524,0.599,525,0.449,527,1.852,528,1.656,530,1.431,531,0.449,532,0.524,533,0.524,536,1.431,537,0.701,538,0.432,539,0.524,541,1.612,542,0.38,543,1.343,544,0.524,545,1.214,546,1,547,1.305,548,1.126,549,1.214,550,1.214,552,0.329,554,0.449,561,1.999,562,1.756,563,0.494,564,1.833,565,0.524,566,0.449,568,0.449,569,0.524,570,0.524,571,1.571,572,0.449,573,1.349,574,1.409,575,0.684,576,0.684,577,0.403,578,0.432,579,0.449,580,0.391,581,0.336,582,0.37,583,0.37,584,2.299,585,0.352,586,0.449,587,0.449,588,0.449,589,1.214,590,0.852,591,0.432,592,0.852,593,0.417,594,1.974,595,0.819,596,0.417,597,0.391,598,0.449,599,1.238,600,1,601,0.852,602,1.167,603,0.494,604,0.524,605,1.431,606,0.994,607,0.577,608,0.417,609,0.403,610,0.494,614,0.524,615,0.449,616,0.819,618,0.299,619,0.684,621,0.449,624,0.299,625,0.524,626,1.974,627,0.721,628,0.449,629,0.299,630,0.449,632,0.449,633,2.293,634,2.743,635,0.449,636,0.361,637,0.31,638,0.329,639,0.432,640,0.432,641,0.38,642,0.449,643,0.449,644,0.344,645,0.449,646,0.449,648,2.594,649,0.449,650,0.47,651,0.524,652,0.432,653,0.322,654,0.304,655,0.524,656,1.897,657,0.652,658,0.667,659,0.871,660,0.852,661,0.667,662,1.214,664,3.19,665,0.496,666,0.852,667,0.852,668,0.819,669,0.852,670,0.819,671,0.494,672,0.524,673,0.336,674,0.403,675,0.89,676,0.37,677,0.361,678,0.524,679,0.494,680,0.524,681,0.524,682,0.403,683,0.494,684,0.449,688,2.443,689,0.624,690,1.09,691,0.524,692,0.449,693,0.524,694,0.524,695,1.335,696,0.403,697,0.449,698,0.449,699,0.391,700,0.352,701,0.79,702,0.37,703,2.113,704,0.417,705,0.524,706,0.994,707,0.524,708,1.167,709,0.936,710,1.542,711,0.929,713,1.841,714,1.214,715,1.417,716,1.214,717,0.852,719,0.764,720,0.852,721,0.764,722,0.449,723,0.524,724,0.391,725,0.352,726,0.701,727,0.449,728,1.214,729,0.524,730,1.542,731,0.449,732,0.524,733,0.524,734,0.432,735,1.214,736,0.524,737,0.38,738,0.352,739,0.432,740,0.852,741,0.449,742,0.403,743,0.449,745,0.329,746,0.524,747,0.494,748,1.417,749,0.721,750,0.741,751,0.494,752,0.819,753,0.403,754,3.439,755,0.852,756,0.449,757,0.994,758,0.524,772,0.47,782,0.38,791,0.909,792,0.38,802,0.38,804,0.47,812,0.89,828,0.344,834,0.403,861,0.47,884,0.38,920,0.667,977,1.167,987,0.975,1002,0.852,1006,0.819,1010,0.819,1014,0.391,1030,0.403,1064,0.47,1082,0.47,1092,1.924,1099,0.449,1109,0.403,1121,0.432,1134,0.47,1140,0.47,1172,0.403,1190,0.684,1219,1.557,1270,0.391,1356,0.403,1400,0.38,1418,0.449,1431,0.432,1536,0.432,1544,0.79,1551,0.494,1569,0.565,1570,0.565,1571,1.071,1572,0.565,1573,0.565,1574,0.524,1575,0.565,1576,0.565,1577,0.565,1578,0.565,1579,0.565,1580,0.565,1581,0.565,1582,2.316,1583,0.994,1584,0.565,1585,4.609,1586,0.565,1587,0.565,1588,0.565,1589,1.841,1590,0.565,1591,2.316,1592,3.53,1593,0.565,1594,0.565,1595,0.524,1596,0.565,1597,0.89,1598,0.565,1599,0.565,1600,1.527,1601,0.565,1602,0.565,1603,0.565,1604,0.565,1605,0.565,1606,1.071,1607,0.565,1608,0.565,1609,1.071,1610,0.565,1611,0.565,1612,0.565,1613,2.316,1614,0.565,1615,0.565,1616,0.565,1617,1.071,1618,0.565,1619,0.565,1620,0.565,1621,0.565,1622,0.565,1623,0.565,1624,0.565,1625,0.565,1626,0.565,1627,1.071,1628,1.071,1629,1.94,1630,0.565,1631,0.565,1632,0.494,1633,1.335,1634,0.565,1635,0.565,1636,0.565,1637,0.565,1638,0.565,1639,0.565]],["component/17",[0,0.293,1,0.439]],["keyword/17",[]],["title/18-1",[26,16.081,54,14.908,85,19.658,959,32.195]],["name/18-1",[]],["text/18-1",[]],["component/18-1",[]],["keyword/18-1",[]],["title/18-2",[54,16.972,85,22.38,394,17.617]],["name/18-2",[]],["text/18-2",[]],["component/18-2",[]],["keyword/18-2",[]],["title/18-3",[57,20.976,835,25.975]],["name/18-3",[]],["text/18-3",[]],["component/18-3",[]],["keyword/18-3",[]],["title/18-4",[118,23.935,394,17.617,835,22.38]],["name/18-4",[]],["text/18-4",[]],["component/18-4",[]],["keyword/18-4",[]],["title/18-5",[75,15.611,394,17.617,618,24.365]],["name/18-5",[]],["text/18-5",[]],["component/18-5",[]],["keyword/18-5",[]],["title/18-6",[75,13.713,324,20.314,444,22.646,618,21.402]],["name/18-6",[]],["text/18-6",[]],["component/18-6",[]],["keyword/18-6",[]],["title/18-7",[0,8.353,21,19.578,251,28.053]],["name/18-7",[]],["text/18-7",[]],["component/18-7",[]],["keyword/18-7",[]],["title/18-8",[0,6.541,55,16.724,130,16.983,199,16.983,960,25.763]],["name/18-8",[]],["text/18-8",[]],["component/18-8",[]],["keyword/18-8",[]],["title/18-9",[0,6.541,55,16.724,73,16.232,218,13.797,443,19.434]],["name/18-9",[]],["text/18-9",[]],["component/18-9",[]],["keyword/18-9",[]],["title/18-10",[0,7.337,2,10.766,251,24.641,333,18.758]],["name/18-10",[]],["text/18-10",[]],["component/18-10",[]],["keyword/18-10",[]],["title/18",[287,24.786,438,22.724]],["name/18",[156,0.845,452,1.085]],["text/18",[0,1.305,1,0.512,2,2.25,14,3.086,17,2.31,20,1.394,21,3.015,22,0.548,24,0.46,26,2.557,27,0.435,28,0.481,29,2.478,30,0.512,31,1.334,34,0.847,36,1.237,38,1.034,41,1.085,44,0.512,46,0.919,51,0.93,52,0.559,54,0.382,55,3.426,57,1.448,59,0.741,62,2.397,64,0.901,65,0.915,67,2.306,70,0.447,72,1.974,73,2.82,74,1.264,75,2.473,76,2.9,77,1.054,80,3.229,81,1.806,82,2.23,83,0.46,85,0.915,86,0.539,88,0.453,89,1.613,93,0.741,94,1.765,99,2.628,102,2.321,105,4.136,107,0.474,112,0.474,116,3.283,117,1.218,118,1.917,122,0.521,124,1.299,127,0.962,128,2.516,129,0.58,130,0.887,132,1.164,133,0.496,134,2.554,135,0.539,140,1.765,141,2.466,148,1.746,150,1.39,162,0.512,163,1.653,165,2.688,167,1.685,171,1.075,172,2.466,173,0.569,174,2.074,175,1.613,177,0.559,181,0.632,184,1.122,189,0.825,190,0.718,191,0.793,192,1.685,194,0.559,197,0.474,198,0.662,199,2.554,203,0.521,204,1.475,205,0.53,206,1.653,207,1.394,208,1.653,210,1.652,213,0.679,215,1.257,218,1.727,220,0.512,221,1.371,222,0.646,225,0.662,229,0.618,234,1.475,244,1.42,249,0.559,250,1.321,251,3.706,252,2.505,253,0.504,254,0.646,255,1.174,256,0.569,260,0.512,262,0.765,266,0.887,267,1.817,269,1.098,270,0.58,275,0.539,276,1.853,277,1.199,279,0.604,287,0.481,291,1.508,292,1.394,297,1.299,298,0.592,303,0.718,304,0.539,305,1.853,312,0.662,318,0.504,320,1.475,324,0.945,330,0.679,333,0.481,336,1.015,342,0.569,343,0.996,349,0.496,351,0.835,368,1.432,369,2.026,370,0.793,371,0.646,372,0.698,374,0.765,375,1.979,378,0.718,383,0.825,387,0.945,394,2.713,396,0.58,397,1.054,399,1.781,400,1.174,401,0.592,408,1.822,409,0.718,410,0.646,412,0.521,416,1.234,418,0.592,422,0.512,424,1.368,430,3.794,433,0.618,434,2.727,436,0.618,438,0.8,440,3.613,443,2.225,449,0.53,461,0.996,464,2.556,465,0.646,466,0.662,474,0.604,476,2.531,485,1.39,497,0.765,501,0.618,505,1.695,506,0.679,507,0.979,509,1.498,510,1.304,511,1.441,522,1.714,524,2.312,528,0.646,531,1.498,536,1.39,537,0.679,542,0.698,546,1.234,562,1.015,564,0.979,571,3.909,574,1.575,575,0.662,580,0.718,581,1.122,594,0.58,605,0.559,618,2.87,619,1.203,624,0.548,626,2.065,629,0.996,634,2.689,637,0.569,644,0.632,653,0.592,654,0.559,659,1.075,664,2.204,673,1.541,682,1.848,689,0.604,711,0.632,719,0.741,724,0.718,738,0.646,750,0.718,771,0.662,776,0.718,778,1.498,783,0.646,784,0.646,791,1.122,801,3.111,822,1.345,825,0.662,827,1.441,835,3.126,836,1.848,842,2.204,844,0.698,854,1.741,859,1.498,882,0.793,883,0.825,920,1.613,941,0.718,947,0.718,954,2.575,959,1.498,960,3.225,961,0.963,962,3.039,963,1.749,964,0.963,965,0.963,966,2.402,967,0.963,968,0.698,969,1.477,970,1.749,971,1.566,972,0.963,973,1.304,974,0.793,975,1.749,976,1.749,977,3.714,978,2.954,979,1.749,980,1.749,981,1.566,982,1.749,983,1.749,984,1.749,985,0.963,986,1.749,987,2.638,988,1.749,989,1.749,990,1.749,991,1.749,992,1.749,993,1.749,994,1.749,995,1.749,996,1.749,997,1.749,998,2.402,999,0.963,1000,1.498,1001,0.963,1002,0.825,1003,0.646,1004,0.963,1005,0.963,1006,1.979,1007,3.069,1008,0.963,1009,1.566,1010,0.793,1011,0.793,1012,0.963,1013,0.825,1014,3.128,1015,0.963,1016,0.963,1017,0.963,1018,2.402,1019,1.749,1020,0.907,1021,1.749,1022,0.963,1023,2.936,1024,0.963,1025,0.963,1026,0.963,1027,0.963,1028,3.836,1029,0.825,1030,1.345,1031,0.963,1032,2.531,1033,1.749,1034,1.749,1035,1.979,1036,2.954,1037,0.963,1038,0.963,1039,0.963,1040,0.963,1041,2.402,1042,0.963,1043,0.963,1044,0.963,1045,0.907,1046,1.741,1047,0.963,1048,1.749,1049,0.662,1050,0.907,1051,0.963,1052,0.963,1053,0.907,1054,0.963,1055,0.963,1056,0.963,1057,0.963,1058,0.963,1059,0.963,1060,0.963,1061,0.825,1062,0.963,1063,0.963,1064,0.862,1065,0.963,1066,0.963,1067,0.793,1068,0.963,1069,0.963,1070,0.718,1071,0.907,1072,0.963,1073,0.963,1074,0.825,1075,0.963,1076,0.963,1077,0.963,1078,0.963,1079,0.963,1080,0.963,1081,0.963,1082,0.862,1083,0.963,1084,0.963,1085,0.963,1086,0.963,1087,0.825,1088,1.498,1089,0.825,1090,1.749,1091,0.963,1092,0.862,1093,0.963,1094,1.498,1095,0.825,1096,0.963,1097,0.963,1098,0.862,1099,0.825,1100,1.749,1101,1.498,1102,1.979,1103,0.963,1104,0.963,1105,0.963,1106,0.963,1107,0.963,1108,1.345,1109,0.741,1110,0.963,1111,0.963,1112,0.862,1113,0.963,1114,0.963,1115,0.793,1116,1.749,1117,0.907,1118,0.963,1119,0.963,1120,0.963,1121,0.793,1122,2.263,1123,1.749,1124,1.749,1125,1.304,1126,0.963,1127,2.151,1128,2.263,1129,0.741,1130,2.646,1131,0.963,1132,1.749,1133,0.862,1134,0.862,1135,1.749,1136,0.765,1137,0.907,1138,0.963,1139,0.963,1140,0.862,1141,0.963,1142,0.963,1143,0.963,1144,0.963,1145,1.749,1146,0.963,1147,0.825,1219,1.268]],["component/18",[0,0.293,1,0.439]],["keyword/18",[]],["title/19",[2,12.256,132,20.727,287,21.355]],["name/19",[3,1.272]],["text/19",[0,1.401,2,2.24,16,3.225,17,2.435,26,3.345,28,2.877,31,3.24,46,2.205,70,2.675,73,3.478,74,3.072,75,2.103,76,2.466,86,3.225,88,2.713,91,3.779,94,2.967,95,3.473,138,3.116,171,3.544,174,3.116,204,2.877,238,3.696,281,4.747,286,4.299,287,3.583,307,4.177,320,2.877,349,2.967,351,2.752,368,2.792,388,2.792,394,2.373,438,2.638,530,4.58,763,3.964,777,4.177,785,4.747,955,3.964,1148,4.432,1149,7.177,1150,5.763,1151,5.763,1152,5.763]],["component/19",[0,0.293,1,0.439]],["keyword/19",[]],["title/20-1",[2,12.256,27,19.311,75,15.611]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["keyword/20-1",[]],["title/20-2",[75,13.713,218,15.475,353,19.658,408,19.98]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["keyword/20-2",[]],["title/20-3",[2,12.256,57,18.072,75,15.611]],["name/20-3",[]],["text/20-3",[]],["component/20-3",[]],["keyword/20-3",[]],["title/20-4",[2,12.256,46,16.366,422,22.746]],["name/20-4",[]],["text/20-4",[]],["component/20-4",[]],["keyword/20-4",[]],["title/20-5",[74,18.308,447,26.302,1153,29.42]],["name/20-5",[]],["text/20-5",[]],["component/20-5",[]],["keyword/20-5",[]],["title/20-6",[2,12.256,46,16.366,624,24.365]],["name/20-6",[]],["text/20-6",[]],["component/20-6",[]],["keyword/20-6",[]],["title/20",[2,12.256,46,16.366,74,18.308]],["name/20",[2,0.378,74,0.564]],["text/20",[1,0.814,2,2.311,14,1.348,17,2.225,21,2.411,23,1.094,30,2.801,31,1.644,33,1.433,34,0.79,36,0.839,41,0.736,44,0.867,46,2.152,51,2.29,52,0.946,55,0.814,57,0.689,62,1.936,64,1.433,65,0.853,67,2.713,68,1.868,69,2.659,70,1.292,72,0.767,73,2.552,74,3.278,75,2.736,76,3.55,80,3.437,81,1.714,82,1.936,83,0.778,88,1.714,90,1.48,96,2.336,99,1.818,102,2.712,105,3.824,107,0.802,112,0.802,116,3.425,117,2.183,122,0.881,124,1.505,127,0.896,130,1.846,132,1.765,133,0.839,134,0.826,138,0.881,140,2.217,141,0.839,143,0.839,148,0.964,162,1.936,165,1.369,167,3.153,168,2.017,170,2.388,172,0.839,174,2.614,175,0.767,177,1.614,179,0.964,181,1.069,182,1.069,184,1.045,192,1.369,194,0.946,197,0.802,200,1.295,201,1.295,203,0.881,204,1.389,205,0.896,207,0.946,208,2.409,210,1.121,215,1.456,218,1.5,219,1.519,220,0.867,221,0.756,222,1.094,225,1.914,229,1.045,231,1.094,234,2.959,238,1.785,247,1.15,250,1.53,251,1.069,252,2.253,253,0.853,256,0.964,260,0.867,264,1.868,266,0.826,270,0.982,274,1.069,277,1.389,280,1.045,283,1.121,290,1.216,291,1.023,292,0.946,296,1.121,298,1.002,304,0.912,305,1.505,306,1.216,310,1.216,315,1.254,316,1.216,318,0.853,320,1.818,324,0.881,333,1.818,336,0.946,339,0.964,342,0.964,344,2.805,345,1.825,349,0.839,351,0.778,352,2.569,353,1.456,356,1.747,368,0.79,369,1.645,380,1.818,387,2.328,388,0.79,394,0.671,397,2.595,401,1.711,402,2.961,404,2.195,408,3.686,409,2.716,412,1.505,419,2.801,422,0.867,424,2.074,430,2.444,434,2.754,438,1.667,447,4.168,449,0.896,458,1.397,463,3.174,479,1.094,480,1.254,501,1.045,505,1.964,507,0.912,518,2.569,524,1.677,528,1.094,543,2.076,546,1.15,562,1.614,564,0.912,571,2.453,573,1.023,574,3.689,575,1.121,576,2.505,577,2.14,578,2.292,579,1.397,580,2.716,581,1.785,582,1.15,584,1.825,594,1.677,600,1.15,601,2.385,607,0.946,616,1.343,617,1.46,624,0.928,637,0.964,649,1.397,653,1.711,654,1.614,673,1.045,674,2.801,676,1.15,677,1.914,696,2.14,754,1.121,756,1.397,763,2.505,777,1.181,805,1.254,822,2.14,825,1.914,828,1.069,842,1.216,852,1.397,853,1.216,905,1.295,910,1.397,911,1.254,941,1.216,947,1.216,954,1.094,955,2.505,962,3.121,1003,1.094,1013,1.397,1014,2.076,1023,1.397,1032,1.397,1035,2.292,1046,2.017,1049,2.961,1101,1.397,1102,2.292,1115,1.343,1125,1.216,1153,1.121,1154,2.621,1155,1.63,1156,1.295,1157,2.783,1158,1.63,1159,1.63,1160,1.63,1161,1.63,1162,1.535,1163,1.397,1164,1.63,1165,1.63,1166,1.63,1167,1.535,1168,1.63,1169,5.308,1170,2.492,1171,1.535,1172,1.254,1173,1.535,1174,2.621,1175,1.535,1176,1.535,1177,1.535,1178,1.535,1179,2.621,1180,2.621,1181,2.385,1182,1.535,1183,2.621,1184,1.535,1185,1.535,1186,1.535,1187,1.535,1188,2.621,1189,1.295,1190,1.121,1191,3.43,1192,3.43,1193,1.535,1194,1.535,1195,4.056,1196,1.63,1197,1.63,1198,2.783,1199,2.783,1200,4.056,1201,2.385,1202,1.46,1203,1.46,1204,1.63,1205,1.63,1206,1.63,1207,1.295,1208,3.12,1209,1.63,1210,2.783,1211,1.15,1212,1.63,1213,3,1214,1.216,1640,1.757]],["component/20",[0,0.293,1,0.439]],["keyword/20",[]],["title/21",[7,20.709,1215,30.528]],["name/21",[3,1.272]],["text/21",[0,1.27,2,1.864,7,2.713,16,3.64,19,3.999,28,3.247,34,3.152,41,2.936,75,2.374,142,3.459,380,3.247,387,3.517,388,3.743,389,5.358,390,4.266,391,5.573,392,5.573,393,5.002,394,2.679,395,4.474,396,3.92,1215,5.067]],["component/21",[0,0.293,1,0.439]],["keyword/21",[]],["title/22-1",[54,19.699,397,29.924]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["keyword/22-1",[]],["title/22-2",[218,17.617,353,22.38,408,22.746]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["keyword/22-2",[]],["title/22-3",[0,9.695,77,29.924]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["keyword/22-3",[]],["title/22-4",[0,7.337,1,10.996,2,10.766,404,22.646]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["keyword/22-4",[]],["title/22",[76,16.081,1215,23.104,1216,25.842,1217,25.842]],["name/22",[76,0.4,835,0.489,969,0.575]],["text/22",[0,1.211,1,1.07,2,1.514,6,0.528,7,2.1,14,0.922,17,1.875,20,1.505,21,2.176,22,0.602,26,1.744,27,0.859,28,1.295,29,1.492,30,1.686,31,1.431,33,0.979,36,1.336,40,0.663,41,0.477,44,1.011,46,1.213,47,0.571,51,0.562,57,1.545,62,1.011,64,0.544,65,0.553,67,1.865,69,1.046,70,0.883,72,2.089,73,1.975,74,1.357,75,2.904,76,3.528,78,0.727,80,1.854,81,2.238,82,0.562,86,0.591,88,1.722,90,1.945,92,1.277,93,0.813,94,0.544,95,1.146,96,0.678,99,2.035,102,0.979,105,4.406,107,0.935,108,1.308,112,1.559,116,3.337,117,1.315,120,0.746,121,0.84,124,1.714,129,0.637,130,0.964,132,2.15,134,2.678,135,0.591,136,1.379,137,3.134,140,0.979,141,1.336,142,1.945,143,1.336,149,1.463,152,0.905,162,1.011,163,0.591,165,1.275,167,0.935,170,1.247,172,2.099,173,0.625,174,1.028,175,2.238,182,0.693,184,0.678,192,2.183,194,1.505,197,0.52,199,2.066,204,0.528,206,0.591,211,0.813,215,0.553,218,2.268,219,0.441,220,0.562,221,1.471,224,0.84,234,1.826,238,2.033,243,1.342,244,1.533,249,1.103,250,2.615,252,1.357,253,0.553,259,0.663,260,1.379,261,0.613,264,1.277,266,0.536,269,3.161,273,0.663,275,0.591,276,0.571,277,0.528,280,0.678,287,1.826,289,1.247,295,1.22,296,0.727,297,1.028,304,1.064,305,0.571,312,0.727,320,1.583,333,1.295,336,1.103,343,1.477,344,1.103,347,1.595,349,0.544,351,0.908,353,2.881,365,0.727,376,2.455,380,0.95,387,1.714,388,0.922,390,0.693,394,2.35,397,2.205,399,1.563,400,2.128,401,3.814,402,3.925,403,1.342,405,1.741,406,0.562,407,1.419,408,4.138,410,1.277,411,0.84,412,1.028,419,2.813,422,0.562,424,0.602,425,0.544,431,0.905,432,0.813,434,2.322,436,2.033,438,1.674,443,2.122,447,0.65,449,0.581,450,0.746,451,0.905,459,0.813,461,1.083,463,3.821,466,0.727,473,0.788,474,0.663,475,1.935,479,2.455,480,0.813,481,0.788,483,0.905,493,0.709,494,0.84,506,2.581,507,0.591,518,2.581,522,1.103,523,2.876,524,0.637,525,0.905,527,1.277,528,1.741,542,0.766,543,0.788,545,0.905,546,0.746,547,3.447,548,0.84,549,0.905,550,0.905,551,1.791,552,1.194,553,2.443,554,0.905,555,2.443,556,0.995,561,1.379,562,2.122,564,2.047,566,0.905,571,1.806,572,0.905,573,2.296,583,0.746,584,2.673,585,0.709,586,0.905,587,0.905,588,0.905,589,0.905,590,0.905,591,0.87,592,0.905,593,0.84,594,1.911,595,1.567,596,0.84,599,1.784,600,1.342,602,0.87,605,1.505,607,1.505,609,0.813,618,0.602,619,0.727,620,1.791,621,1.63,622,0.995,623,1.791,624,1.083,626,3.184,627,1.379,628,0.905,629,1.083,633,2.749,634,3.229,636,0.727,637,0.625,638,0.663,643,0.905,644,1.247,645,0.905,646,0.905,648,3.492,653,0.65,654,0.613,656,3.134,657,1.247,658,1.741,659,0.65,660,0.905,661,1.277,662,1.63,663,1.791,664,4.514,665,0.95,666,1.63,667,1.63,668,1.567,669,1.63,670,1.567,676,0.746,684,0.905,685,0.995,686,0.995,687,0.995,688,2.728,689,0.663,690,1.463,696,0.813,697,0.905,698,0.905,699,0.788,700,0.709,701,0.84,702,0.746,703,2.716,708,0.87,710,0.905,711,1.701,712,2.443,713,2.222,714,2.222,716,2.222,717,1.63,719,0.813,720,0.905,721,0.813,726,0.746,727,0.905,728,0.905,730,1.63,731,0.905,735,1.63,737,0.766,738,0.709,739,0.87,740,1.63,741,0.905,742,0.813,743,0.905,745,0.663,755,0.905,766,1.63,801,0.625,835,0.995,969,1.169,1156,0.84,1190,0.727,1215,2.729,1216,0.727,1217,0.727,1218,1.057,1219,0.766,1220,0.84,1221,1.057,1222,1.057,1223,1.057,1224,1.057,1225,0.87,1226,1.057,1227,1.057,1228,1.057,1229,3.239,1230,1.057,1231,1.057,1232,0.87,1233,0.905,1234,0.84,1235,1.057,1236,1.057,1237,1.057,1238,2.594,1239,1.902,1240,0.905,1241,0.905,1242,1.057,1243,1.057,1244,3.17,1245,5.223,1246,2.594,1247,1.057,1248,0.946,1249,0.905,1250,0.905,1251,0.905,1252,1.902,1253,1.057,1254,2.594,1255,1.057,1256,1.057,1257,1.902,1258,0.946,1259,0.995,1260,0.995,1261,1.902,1262,1.057,1263,1.057,1264,1.057,1265,1.057,1266,1.057]],["component/22",[0,0.293,1,0.439]],["keyword/22",[]],["title/23-1",[27,19.311,57,18.072,175,20.136]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["keyword/23-1",[]],["title/23-2",[2,12.256,54,16.972,394,17.617]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["keyword/23-2",[]],["title/23-3",[27,19.311,412,23.127,1267,36.652]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["keyword/23-3",[]],["title/23-4",[43,25.975,759,33.326]],["name/23-4",[]],["text/23-4",[]],["component/23-4",[]],["keyword/23-4",[]],["title/23-5",[317,26.852,425,22.026,760,28.713]],["name/23-5",[]],["text/23-5",[]],["component/23-5",[]],["keyword/23-5",[]],["title/23-6",[0,9.695,77,29.924]],["name/23-6",[]],["text/23-6",[]],["component/23-6",[]],["keyword/23-6",[]],["title/23",[1215,26.302,1216,29.42,1217,29.42]],["name/23",[835,0.689,969,0.81]],["text/23",[0,0.957,1,0.854,2,2.045,6,0.996,7,1.957,14,0.375,17,0.843,19,0.476,21,0.655,22,0.441,26,1.688,27,0.901,28,0.386,29,0.939,31,1.123,33,0.737,34,0.375,36,0.737,38,0.457,41,0.349,43,2.662,46,1.795,47,1.079,51,0.761,55,0.714,56,0.496,57,1.394,58,1.037,62,0.761,65,0.748,67,1.665,70,0.664,72,1.713,73,1.763,74,2.253,78,0.532,80,2.75,81,2.554,82,0.411,83,2.133,85,1.044,86,1.633,87,2.461,88,1.553,89,1.669,90,0.761,91,0.507,92,0.519,94,1.028,97,3.474,99,2.628,102,1.874,105,4.486,107,0.981,108,0.532,112,1.435,114,1.037,116,2.55,118,0.8,120,1.009,122,1.578,123,0.595,124,0.418,125,0.663,126,0.532,127,1.368,128,0.938,129,0.466,130,2.264,132,0.967,133,0.398,134,1.261,135,0.433,138,0.418,140,1.699,141,1.028,142,1.061,143,0.398,145,1.535,148,0.457,162,0.411,163,0.433,165,1.622,167,0.703,168,1.037,171,0.88,172,1.503,175,1.374,176,0.546,177,0.449,178,0.938,179,1.18,192,0.38,195,0.476,197,0.38,199,2.379,203,0.418,204,0.714,205,0.425,206,0.433,207,0.449,208,1.392,213,1.408,215,0.405,218,1.202,219,1.037,220,0.411,221,2.178,234,2.229,244,0.846,249,0.83,250,1.368,252,0.748,253,1.044,254,0.519,255,0.519,256,0.457,258,0.663,260,1.552,261,1.158,263,0.637,266,0.392,267,2.424,270,0.466,275,0.433,276,1.345,277,0.386,279,0.486,280,0.917,287,0.386,289,0.507,291,0.898,292,0.83,293,2.537,294,1.067,295,0.496,296,0.532,297,0.773,298,0.476,299,0.595,305,0.773,306,0.577,317,0.898,318,2.063,320,1.242,323,0.615,324,0.418,333,0.386,335,1.037,336,0.449,339,0.457,342,0.457,343,0.441,344,0.83,347,0.88,351,1.393,356,0.898,365,0.532,368,0.967,369,1.18,371,0.519,372,0.561,374,0.615,376,2.215,377,0.595,379,0.561,381,0.561,388,0.693,390,0.938,394,2.096,396,0.466,399,0.466,404,0.862,410,0.519,412,1.079,413,1.499,418,0.88,420,0.595,422,0.411,424,1.137,425,1.874,426,1.447,433,0.496,434,1.662,436,2.864,438,0.913,443,1.158,444,0.862,447,2.029,449,0.425,450,0.546,461,2.899,463,2.376,465,0.519,466,0.532,467,2.131,475,2.714,478,1.644,479,0.519,481,3.146,493,0.96,496,0.561,501,0.917,502,1.226,507,0.433,510,0.577,517,0.532,522,1.443,523,1.009,524,0.466,527,0.96,537,0.546,538,0.637,542,0.561,552,0.486,561,0.561,562,1.443,564,1.633,571,1.662,573,0.486,576,0.532,581,0.496,584,0.938,597,0.577,599,0.984,605,1.443,609,0.595,615,0.663,618,0.441,619,0.532,624,1.137,626,2.193,627,1.803,629,2.073,633,3.59,634,2.529,636,1.71,637,0.846,638,2.803,641,1.803,644,3.558,652,0.637,654,0.449,656,0.595,657,2.586,661,0.96,674,0.595,676,1.009,677,0.532,689,0.898,700,0.519,701,1.137,702,0.546,704,1.137,711,1.631,725,0.519,726,0.546,737,0.561,742,0.595,745,0.486,749,0.561,750,0.577,753,0.595,759,3.742,760,1.669,761,1.535,765,1.644,767,0.96,771,0.532,776,0.577,782,0.561,783,0.519,786,0.637,787,1.137,791,1.28,792,1.803,795,1.586,799,1.226,801,0.457,802,1.803,805,0.595,814,0.637,826,1.535,828,0.507,834,0.595,835,2.206,836,1.1,840,2.049,841,0.663,843,0.663,844,0.561,850,1.226,851,0.637,853,3.331,854,1.803,856,1.535,865,1.535,868,0.663,873,0.663,874,1.787,879,0.637,880,0.577,904,0.663,906,0.637,911,0.595,912,0.663,913,0.615,914,0.663,915,0.663,916,0.637,920,0.519,926,0.637,940,0.615,943,1.178,944,0.637,954,0.96,968,0.561,969,3.236,973,0.577,974,0.637,1049,0.532,1061,0.663,1067,0.637,1070,1.489,1074,0.663,1108,0.595,1109,0.595,1125,0.577,1129,0.595,1136,0.615,1153,0.532,1172,0.595,1189,0.615,1190,0.532,1201,0.663,1213,1.178,1214,0.577,1215,3.012,1216,0.984,1217,0.984,1225,3.679,1229,4.83,1232,1.178,1234,0.615,1240,0.663,1241,0.663,1245,2.997,1249,0.663,1250,1.71,1251,1.226,1267,2.827,1268,0.693,1269,2.342,1270,1.067,1271,0.728,1272,0.773,1273,0.773,1274,2.319,1275,0.773,1276,0.693,1277,2.918,1278,4.793,1279,0.773,1280,1.431,1281,0.773,1282,1.996,1283,0.773,1284,0.773,1285,0.773,1286,0.773,1287,1.996,1288,1.88,1289,1.431,1290,0.773,1291,0.773,1292,0.773,1293,0.773,1294,1.996,1295,1.431,1296,1.431,1297,0.728,1298,0.728,1299,0.728,1300,2.748,1301,0.728,1302,0.773,1303,0.773,1304,1.431,1305,0.773,1306,0.773,1307,0.773,1308,1.431,1309,1.347,1310,1.431,1311,3.943,1312,0.773,1313,0.773,1314,0.773,1315,1.431,1316,1.431,1317,0.773,1318,0.773,1319,0.773,1320,0.773,1321,1.996,1322,1.996,1323,1.431,1324,1.431,1325,0.773,1326,1.431,1327,1.996,1328,2.487,1329,1.347,1330,0.773,1331,1.431,1332,0.773,1333,0.773,1334,1.431,1335,0.773,1336,0.773,1337,0.773,1338,4.466,1339,0.773,1340,1.996,1341,0.773,1342,0.773,1343,1.431,1344,1.431,1345,1.431,1346,1.431,1347,2.487,1348,0.773,1349,0.773,1350,0.773,1351,0.663,1352,0.773,1353,1.431,1354,0.773,1355,0.773,1356,3.032,1357,1.431,1358,1.431,1359,0.773,1360,0.773,1361,0.728,1362,0.773,1363,0.773,1364,0.637,1365,0.728,1366,0.773,1367,0.773,1368,1.281,1369,0.773,1370,0.773,1371,1.431,1372,0.773,1373,0.773,1374,0.773,1375,0.773,1376,0.663,1377,0.728,1378,0.693,1379,1.281,1380,1.347,1381,0.773,1382,0.773,1383,0.773,1384,0.773,1385,0.773,1386,0.637,1387,0.773,1388,1.347,1389,0.773,1390,0.773,1391,0.773,1392,0.773,1393,0.773,1394,0.773,1395,0.773,1396,0.773,1397,0.773,1398,0.773,1399,0.773,1400,0.561,1401,0.773,1402,0.773,1403,0.773,1404,0.773,1405,1.431,1406,0.773,1407,0.773,1408,0.773,1409,0.773,1410,0.595,1411,0.728,1412,0.693,1413,0.663,1414,1.347,1415,1.347,1416,1.347,1417,0.728,1418,0.663,1419,0.728,1420,3.714,1421,0.728,1422,0.728,1423,0.728,1424,0.693,1425,0.693,1426,0.728,1427,0.728,1428,0.728,1429,5.618,1430,1.431,1431,0.637,1432,0.728,1433,0.773,1434,1.431,1435,0.773,1436,0.773,1437,0.728,1438,0.773,1439,0.773,1440,1.431,1441,0.773,1442,0.773,1443,0.773,1444,0.773,1445,0.773,1446,0.773,1447,0.773,1448,0.728,1449,0.773,1450,0.773,1451,0.773,1452,3.714,1453,0.728,1454,1.347,1455,1.996,1460,0.773,1461,0.728,1462,0.773,1463,1.431,1464,1.431,1465,0.773,1466,0.773,1467,0.693,1468,0.693,1469,0.595,1470,0.663,1471,0.728,1476,0.728,1477,1.178,1478,0.637,1479,1.347,1480,3.714,1481,0.728,1482,0.773,1483,0.773,1484,0.773,1485,0.773,1589,0.663,1632,0.728,1633,2.342,1641,0.834,1642,0.834,1643,0.834,1644,0.834,1645,0.834,1646,0.834,1647,2.151,1648,1.542]],["component/23",[0,0.293,1,0.439]],["keyword/23",[]],["title/24-1",[81,20.136,143,22.026,767,28.713]],["name/24-1",[]],["text/24-1",[]],["component/24-1",[]],["keyword/24-1",[]],["title/24-2",[64,17.25,69,18.422,72,15.769,1486,28.704,1487,25.763]],["name/24-2",[]],["text/24-2",[]],["component/24-2",[]],["keyword/24-2",[]],["title/24-3",[24,23.709,112,24.416]],["name/24-3",[]],["text/24-3",[]],["component/24-3",[]],["keyword/24-3",[]],["title/24-4",[20,21.797,107,18.478,1488,37.575,1489,32.195]],["name/24-4",[]],["text/24-4",[]],["component/24-4",[]],["keyword/24-4",[]],["title/24-5",[197,16.474,219,13.973,321,25.763,322,25.763,1487,25.763]],["name/24-5",[]],["text/24-5",[]],["component/24-5",[]],["keyword/24-5",[]],["title/24",[1477,48.727]],["name/24",[3,1.272]],["text/24",[1,1.244,6,1.008,7,0.842,14,0.978,17,2.084,20,3.408,21,2.258,22,1.15,24,3.102,26,1.819,31,0.911,33,2.189,34,0.978,36,1.039,43,1.056,45,2.484,46,0.772,47,1.091,48,1.505,54,0.801,55,3.103,56,3.501,62,2.623,64,3.571,65,1.056,66,2.561,67,1.945,69,3.001,70,0.937,72,1.567,73,0.978,74,3.166,75,0.737,76,0.864,80,1.023,81,2.001,82,3.124,85,2.224,88,1.567,90,2.26,94,2.189,96,1.294,99,2.122,102,2.189,105,2.933,116,2.39,117,1.023,128,1.324,130,1.688,133,1.039,134,2.767,138,1.8,140,1.039,141,1.715,143,1.715,161,1.604,162,1.073,163,1.129,164,1.729,165,2.09,167,2.684,169,2.853,170,2.788,173,1.193,174,1.091,175,2.322,176,2.349,179,1.193,181,2.788,192,2.09,194,1.171,195,1.241,198,1.388,199,3.516,206,1.129,210,3.392,215,1.742,218,0.831,219,1.773,220,2.26,221,1.545,222,2.235,225,1.388,231,2.235,234,3.243,237,5.034,243,1.424,244,1.193,250,1.11,252,1.056,253,1.056,259,1.267,261,1.171,266,1.023,273,1.267,275,1.129,276,1.8,277,1.008,286,1.505,290,1.505,291,2.09,292,1.932,293,1.552,297,1.8,301,1.662,302,2.743,304,2.378,305,1.091,307,3.575,315,1.552,318,1.056,321,2.561,322,3.269,325,1.552,330,1.424,334,1.729,339,1.193,342,1.193,345,1.324,349,1.039,351,0.964,357,1.552,368,0.978,369,1.968,380,1.662,382,1.729,386,4.063,407,1.505,413,2.562,415,3.793,416,2.999,417,2.853,422,1.073,433,1.294,438,0.924,444,2.973,449,2.337,454,2.414,461,1.15,465,1.355,473,1.505,474,1.267,500,1.729,505,3.851,506,1.424,507,1.129,517,1.388,524,3.541,552,1.267,571,3.7,574,2.184,577,1.552,585,2.235,605,1.171,608,1.604,629,1.897,658,1.355,673,2.136,682,5.178,688,1.505,689,1.267,724,2.484,745,1.267,763,3.392,767,1.355,783,2.235,784,2.235,791,2.136,798,1.604,801,1.193,825,1.388,828,2.184,884,1.463,890,1.729,909,1.552,919,1.729,920,1.355,927,1.604,958,1.729,960,4.198,962,2.414,973,2.484,1003,1.355,1029,2.853,1046,1.463,1049,2.29,1087,1.729,1088,1.729,1089,1.729,1094,4.226,1095,1.729,1129,1.552,1148,1.552,1153,1.388,1207,3.378,1211,1.424,1214,2.484,1233,2.853,1364,1.662,1400,3.081,1410,1.552,1469,1.552,1478,1.662,1486,4.677,1487,3.269,1489,1.729,1490,1.807,1491,1.807,1492,2.018,1493,2.018,1494,2.018,1495,5.875,1496,2.018,1497,3.33,1498,2.018,1499,2.018,1500,2.018,1501,2.018,1502,1.901,1503,2.018,1504,1.901,1505,2.018,1506,2.018,1507,2.018,1508,2.018,1509,3.33,1510,1.901,1511,2.018,1512,1.662,1513,1.807,1514,3.33,1515,2.018,1516,2.018,1517,2.018,1518,2.018,1519,4.677,1520,2.018,1521,4.251,1522,2.018,1523,4.251,1524,2.018,1525,2.018,1526,2.018,1527,2.018,1528,2.018,1529,3.33,1530,4.004,1531,2.018,1532,3.33,1533,2.018,1534,3.33,1535,2.018,1536,1.662,1537,4.251,1538,3.33,1539,2.018,1540,2.018,1541,2.018,1542,2.018,1543,2.018,1544,1.604]],["component/24",[0,0.293,1,0.439]],["keyword/24",[]],["title/25",[0,8.353,1,12.518,2,12.256]],["name/25",[3,1.272]],["text/25",[0,1.104,2,1.619,4,4.492,5,4.216,6,3.54,7,2.957,8,5.061,9,5.061,10,5.061,11,5.061,12,5.061,13,5.061,14,3.436,16,3.162,17,2.388,18,4.656,19,3.475,20,3.279,21,2.587,22,3.219,23,3.794,24,2.699,25,4.656,26,2.419,27,2.551,28,2.822,29,2.66,30,3.005,31,3.498,32,5.289,33,3.651,34,2.739,35,5.323,36,2.91,37,4.216,38,3.341,39,5.652,40,3.548,41,2.551,42,4.347,43,2.957,44,3.005,45,4.216,46,2.162,47,3.056,48,4.216,49,4.492,50,4.656,51,3.005,52,3.279,1649,8.48]],["component/25",[0,0.293,1,0.439]],["keyword/25",[]],["title/26-1",[24,20.427,26,18.308,53,38.304]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["keyword/26-1",[]],["title/26-2",[6,18.758,54,14.908,55,18.758,56,24.098]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["keyword/26-2",[]],["title/26-3",[24,23.709,57,20.976]],["name/26-3",[]],["text/26-3",[]],["component/26-3",[]],["keyword/26-3",[]],["title/26-4",[24,23.709,58,35.988]],["name/26-4",[]],["text/26-4",[]],["component/26-4",[]],["keyword/26-4",[]],["title/26-5",[24,23.709,59,38.182]],["name/26-5",[]],["text/26-5",[]],["component/26-5",[]],["keyword/26-5",[]],["title/26-6",[24,23.709,60,42.541]],["name/26-6",[]],["text/26-6",[]],["component/26-6",[]],["keyword/26-6",[]],["title/26-7",[24,23.709,61,42.541]],["name/26-7",[]],["text/26-7",[]],["component/26-7",[]],["keyword/26-7",[]],["title/26-8",[62,26.401,63,40.897]],["name/26-8",[]],["text/26-8",[]],["component/26-8",[]],["keyword/26-8",[]],["title/26-9",[64,25.565,65,25.975]],["name/26-9",[]],["text/26-9",[]],["component/26-9",[]],["keyword/26-9",[]],["title/26-10",[66,32.897,67,19.578,68,28.713]],["name/26-10",[]],["text/26-10",[]],["component/26-10",[]],["keyword/26-10",[]],["title/26-11",[46,16.366,67,19.578,68,28.713]],["name/26-11",[]],["text/26-11",[]],["component/26-11",[]],["keyword/26-11",[]],["title/26",[18,30.951,54,14.908,64,19.348,69,20.662]],["name/26",[3,1.272]],["text/26",[0,0.443,1,1.698,2,0.649,4,2.91,6,3.183,7,0.537,14,1.098,16,0.72,17,3.173,20,1.315,21,1.39,22,1.291,23,0.864,24,3.519,26,2.656,31,1.371,33,1.167,37,0.96,41,0.581,44,1.205,46,1.597,47,1.642,51,0.684,54,1.205,55,2.897,56,3.721,57,0.958,58,1.643,59,3.541,60,1.102,61,2.603,64,3.832,65,3.336,66,0.989,67,3.11,68,3.337,69,3.667,70,1.699,71,4.971,72,2.489,73,3.571,74,1.3,75,0.47,76,1.567,77,0.775,78,0.885,79,1.287,80,3.608,81,2.489,82,2.449,83,2.199,84,1.287,85,0.673,86,0.72,87,2.266,88,1.067,89,2.802,90,0.684,91,0.844,92,3.091,93,0.989,94,1.885,95,0.775,96,1.454,97,1.06,98,1.287,99,3.183,100,1.152,101,1.102,102,1.885,103,1.212,104,1.287,105,3.978,106,2.267,107,1.494,108,2.089,109,1.287,110,1.287,111,1.287,112,1.494,113,3.038,114,0.933,115,2.267,116,2.695,117,0.652,118,0.72,119,2.03,120,0.908,121,1.023,122,1.642,123,1.743,124,1.642,125,2.603,126,2.518,127,2.295,128,0.844,129,0.775,130,0.652,131,1.287,132,1.472,133,1.564,134,2.819,135,2.048,136,3.603,137,3.823,138,1.225,139,1.287,140,1.564,141,1.167,142,1.615,143,1.564,144,2.267,145,1.743,146,2.267,147,1.287,148,0.761,149,0.989,150,1.023,151,1.287,152,1.102,153,1.287,154,1.287,155,3.038,156,1.454,157,1.287,158,1.152,159,2.267,160,4.174,161,1.023,162,1.615,163,0.72,164,2.603,165,2.6,166,1.212,167,1.115,168,0.933,169,1.102,170,0.844,171,1.394,172,2.149,173,0.761,174,0.696,175,0.606,176,0.908,177,2.884,178,1.486,179,0.761,180,1.102,181,1.992,182,0.844,183,1.102,184,1.948,185,1.212,186,1.942,187,3.137,188,1.152,189,1.102,190,2.266,191,1.06,192,0.633,193,1.152,194,1.315,195,2.567,196,1.287,197,1.115,198,2.518,199,2.116,200,1.023,201,1.023,202,1.102,203,0.696,204,0.642,205,1.671,206,1.268,207,0.746,208,2.048,209,1.942,210,1.559,211,0.989,212,1.287,213,1.599,214,1.212,215,1.186,216,1.287,217,1.152,218,1.508,219,1.741,220,1.205,221,1.052,222,0.864,223,1.287,224,1.023,225,0.885,226,4.98,227,1.287,228,1.102,229,0.825,230,1.102,231,0.864,232,3.114,233,1.287,234,2.776,235,1.287,236,1.287,237,1.942,238,1.454,239,1.287,240,1.287,241,1.287,242,2.267,243,0.908,244,0.761,245,1.287,246,1.287,247,2.143,248,1.287,249,1.315,250,1.671,251,0.844,252,1.915,253,1.589,254,2.039,255,0.864,256,0.761,257,1.287,258,1.102,259,0.808,260,2.22,261,1.315,262,1.023,263,1.06,264,0.864,265,1.287,266,0.652,267,1.394,268,2.502,269,1.423,270,0.775,271,2.267,272,1.942,273,0.808,274,1.486,275,0.72,276,0.696,277,1.132,278,1.102,279,0.808,280,0.825,281,1.867,282,1.212,283,1.559,284,1.287,285,1.152,286,0.96,287,0.642,288,1.287,289,1.486,290,0.96,291,1.907,292,1.762,293,0.989,294,0.96,295,0.825,296,0.885,297,0.696,298,0.791,299,0.989,300,3.038,301,1.06,302,1.06,303,1.691,304,1.268,305,0.696,306,0.96,307,0.933,308,2.267,309,2.267,310,2.731,311,2.267,312,1.559,313,2.267,314,1.287,315,2.336,316,3.435,317,1.423,318,1.186,319,1.287,320,1.132,321,1.743,322,1.743,323,1.023,324,0.696,325,1.743,326,1.287,327,1.287,328,3.038,329,1.287,330,0.908,331,1.287,332,4.174,333,0.642,334,1.102,335,0.933,336,0.746,337,1.287,338,1.287,339,0.761,340,1.287,341,1.287,342,0.761,343,1.291,344,1.315,345,1.486,346,1.287,347,0.791,348,1.287,349,0.663,350,1.287,351,0.614,352,0.908,353,2.184,354,1.06,355,1.287,356,0.808,357,1.743,358,1.287,359,2.267,360,1.287,361,1.287,362,1.287,363,1.287,364,1.287,365,0.885,366,1.287,367,1.287,368,0.623,369,0.761,370,1.867,371,0.864,372,0.933,373,3.448,374,1.023,375,1.06,376,0.864,377,0.989,378,0.96,379,2.654,380,0.642,381,0.933,382,1.942,383,1.102,384,1.287,385,1.287,386,1.06]],["component/26",[0,0.293,1,0.439]],["keyword/26",[]],["title/27",[7,17.842,29,20.136,380,21.355]],["name/27",[3,1.272]],["text/27",[0,1.27,2,1.864,7,2.713,16,3.64,19,3.999,29,3.879,34,3.152,41,2.936,75,2.374,142,3.459,380,3.857,387,3.517,388,3.743,389,5.358,390,4.266,391,5.573,392,5.573,393,5.002,394,2.679,395,4.474,396,3.92]],["component/27",[0,0.293,1,0.439]],["keyword/27",[]],["title/28-1",[54,14.908,397,22.646,398,32.195,399,22.646]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["keyword/28-1",[]],["title/28-2",[400,28.713,402,29.42,754,29.42]],["name/28-2",[]],["text/28-2",[]],["component/28-2",[]],["keyword/28-2",[]],["title/28-3",[33,19.348,54,14.908,83,17.943,232,28.026]],["name/28-3",[]],["text/28-3",[]],["component/28-3",[]],["keyword/28-3",[]],["title/28-4",[83,20.427,218,17.617,408,22.746]],["name/28-4",[]],["text/28-4",[]],["component/28-4",[]],["keyword/28-4",[]],["title/28-5",[0,8.353,75,15.611,403,30.181]],["name/28-5",[]],["text/28-5",[]],["component/28-5",[]],["keyword/28-5",[]],["title/28-6",[2,12.256,76,18.308,406,22.746]],["name/28-6",[]],["text/28-6",[]],["component/28-6",[]],["keyword/28-6",[]],["title/28-7",[0,8.353,27,19.311,75,15.611]],["name/28-7",[]],["text/28-7",[]],["component/28-7",[]],["keyword/28-7",[]],["title/28-8",[218,20.448,353,25.975]],["name/28-8",[]],["text/28-8",[]],["component/28-8",[]],["keyword/28-8",[]],["title/28-9",[0,9.695,405,33.326]],["name/28-9",[]],["text/28-9",[]],["component/28-9",[]],["keyword/28-9",[]],["title/28-10",[1568,63.759]],["name/28-10",[]],["text/28-10",[]],["component/28-10",[]],["keyword/28-10",[]],["title/28",[76,21.249,406,26.401]],["name/28",[29,0.44,76,0.4,406,0.497]],["text/28",[0,1.152,1,1.299,2,1.433,6,2.293,7,2.136,14,0.482,17,2.458,20,1.044,21,1.793,22,0.566,26,2.14,27,1.582,28,0.707,29,2.013,30,0.529,31,0.97,32,0.391,33,0.927,34,0.687,36,2.017,38,0.588,40,0.329,41,0.449,42,0.403,43,0.274,44,0.753,46,0.542,47,0.537,51,0.529,52,0.577,55,1.856,56,2.1,57,1.807,62,0.957,63,0.432,64,1.686,65,0.52,67,2.168,69,2.256,70,0.997,72,1.844,73,1.587,74,0.224,75,2.756,76,3.499,77,0.599,78,2.557,80,2.08,81,2.23,82,1.312,83,2.327,86,0.556,87,1.343,88,1.65,90,1.467,92,0.951,94,1.42,95,0.599,96,0.336,99,1.956,101,1.214,102,0.73,105,4.18,107,0.697,108,0.361,112,1.056,116,3.122,117,1.777,118,0.293,119,0.47,120,0.37,121,1.126,122,0.973,124,0.973,127,0.288,128,0.344,129,0.316,130,1.089,132,1.898,133,0.27,134,2.597,135,1.202,136,1.557,137,3.012,138,0.537,140,0.927,141,0.927,142,1.312,143,1.42,148,0.31,149,0.764,150,0.79,156,0.638,158,1.269,162,1.142,163,1.007,165,0.489,167,0.885,170,0.652,171,0.322,172,1.686,173,0.838,174,0.766,175,1.65,177,1.756,178,0.344,179,0.838,180,0.449,181,1.18,182,0.344,183,0.449,184,0.638,186,0.449,187,0.449,190,1.057,192,1.356,194,0.822,195,1.107,197,0.258,199,1.535,202,1.214,203,0.284,204,1.072,205,0.288,206,0.556,207,0.304,208,0.556,209,0.852,211,0.403,215,0.52,218,1.613,219,0.591,220,0.753,221,0.997,222,0.352,230,0.449,231,0.951,232,1.343,234,2.615,238,0.909,243,0.701,244,1.458,247,0.701,249,1.044,250,1.356,252,2.237,253,0.52,254,0.667,255,0.352,256,0.31,259,0.624,260,1.864,261,0.304,264,0.667,266,0.504,268,0.432,269,2.575,270,0.316,272,0.449,273,0.329,274,0.344,276,0.973,277,1.072,278,0.449,279,0.329,280,0.336,283,0.684,287,1.635,289,0.652,291,0.889,292,0.822,295,0.909,297,0.766,298,0.322,299,1.09,303,0.741,304,0.293,305,1.334,306,0.391,310,0.391,312,0.684,318,0.741,320,1.635,324,1.161,330,1,333,1.231,335,0.38,336,0.577,339,1.27,342,0.31,343,0.566,344,1.431,345,0.344,347,1.107,351,1.445,352,0.37,353,2.146,354,0.432,356,0.329,365,0.361,368,0.687,369,0.838,371,0.352,376,1.208,378,1.602,387,2.312,388,1.587,390,0.344,394,2.245,395,0.361,397,1.974,398,0.852,399,1.662,400,2.198,401,3.15,402,4.163,403,1.27,404,0.316,405,1.442,406,3.592,407,2.258,408,3.962,409,0.741,410,0.951,411,0.417,412,0.766,413,0.854,414,0.524,415,1.652,416,1.516,417,0.449,418,0.611,419,2.519,420,0.403,421,0.524,422,0.753,423,0.494,424,1.724,425,0.73,426,1.305,428,0.524,429,0.852,430,2.496,431,0.449,432,0.764,433,0.638,434,2.918,435,0.764,436,3.038,437,2.113,438,1.129,441,0.994,443,2.272,444,0.316,445,0.852,446,0.852,447,0.322,448,0.432,449,1.181,450,0.701,451,0.449,452,0.432,453,0.449,454,1.999,455,0.524,456,0.494,457,2.272,458,0.449,459,3.155,460,0.994,461,0.807,462,0.524,463,3.455,464,2.057,465,1.442,466,1.696,467,1.841,468,2.148,469,2.148,470,2.121,471,0.994,472,0.994,473,0.391,474,1.548,475,1.343,476,0.449,478,1.167,479,2.353,480,0.403,481,0.391,482,0.524,483,0.449,484,0.994,485,0.417,486,0.524,487,0.524,488,1.417,489,0.994,490,0.524,492,0.449,493,0.667,494,0.79,495,0.494,496,1.788,497,0.79,498,0.524,499,0.524,500,0.449,501,0.638,502,0.449,503,0.852,504,0.432,505,0.37,506,2.136,507,0.293,508,0.524,509,0.449,510,1.057,511,0.819,512,0.524,513,0.524,514,0.994,515,0.994,516,1.214,517,0.361,518,1.74,519,1.8,520,0.449,521,0.524,522,1.044,523,2.764,524,0.599,525,0.449,527,1.852,528,1.656,530,1.431,531,0.449,532,0.524,533,0.524,536,1.431,537,0.701,538,0.432,539,0.524,541,1.612,542,0.38,543,1.343,544,0.524,545,1.214,546,1,547,1.305,548,1.126,549,1.214,550,1.214,552,0.329,554,0.449,561,1.999,562,1.756,563,0.494,564,1.833,565,0.524,566,0.449,568,0.449,569,0.524,570,0.524,571,1.571,572,0.449,573,1.349,574,1.409,575,0.684,576,0.684,577,0.403,578,0.432,579,0.449,580,0.391,581,0.336,582,0.37,583,0.37,584,2.299,585,0.352,586,0.449,587,0.449,588,0.449,589,1.214,590,0.852,591,0.432,592,0.852,593,0.417,594,1.974,595,0.819,596,0.417,597,0.391,598,0.449,599,1.238,600,1,601,0.852,602,1.167,603,0.494,604,0.524,605,1.431,606,0.994,607,0.577,608,0.417,609,0.403,610,0.494,614,0.524,615,0.449,616,0.819,618,0.299,619,0.684,621,0.449,624,0.299,625,0.524,626,1.974,627,0.721,628,0.449,629,0.299,630,0.449,632,0.449,633,2.293,634,2.743,635,0.449,636,0.361,637,0.31,638,0.329,639,0.432,640,0.432,641,0.38,642,0.449,643,0.449,644,0.344,645,0.449,646,0.449,648,2.594,649,0.449,650,0.47,651,0.524,652,0.432,653,0.322,654,0.304,655,0.524,656,1.897,657,0.652,658,0.667,659,0.871,660,0.852,661,0.667,662,1.214,664,3.19,665,0.496,666,0.852,667,0.852,668,0.819,669,0.852,670,0.819,671,0.494,672,0.524,673,0.336,674,0.403,675,0.89,676,0.37,677,0.361,678,0.524,679,0.494,680,0.524,681,0.524,682,0.403,683,0.494,684,0.449,688,2.443,689,0.624,690,1.09,691,0.524,692,0.449,693,0.524,694,0.524,695,1.335,696,0.403,697,0.449,698,0.449,699,0.391,700,0.352,701,0.79,702,0.37,703,2.113,704,0.417,705,0.524,706,0.994,707,0.524,708,1.167,709,0.936,710,1.542,711,0.929,713,1.841,714,1.214,715,1.417,716,1.214,717,0.852,719,0.764,720,0.852,721,0.764,722,0.449,723,0.524,724,0.391,725,0.352,726,0.701,727,0.449,728,1.214,729,0.524,730,1.542,731,0.449,732,0.524,733,0.524,734,0.432,735,1.214,736,0.524,737,0.38,738,0.352,739,0.432,740,0.852,741,0.449,742,0.403,743,0.449,745,0.329,746,0.524,747,0.494,748,1.417,749,0.721,750,0.741,751,0.494,752,0.819,753,0.403,754,3.439,755,0.852,756,0.449,757,0.994,758,0.524,772,0.47,782,0.38,791,0.909,792,0.38,802,0.38,804,0.47,812,0.89,828,0.344,834,0.403,861,0.47,884,0.38,920,0.667,977,1.167,987,0.975,1002,0.852,1006,0.819,1010,0.819,1014,0.391,1030,0.403,1064,0.47,1082,0.47,1092,1.924,1099,0.449,1109,0.403,1121,0.432,1134,0.47,1140,0.47,1172,0.403,1190,0.684,1219,1.557,1270,0.391,1356,0.403,1400,0.38,1418,0.449,1431,0.432,1536,0.432,1544,0.79,1551,0.494,1569,0.565,1570,0.565,1571,1.071,1572,0.565,1573,0.565,1574,0.524,1575,0.565,1576,0.565,1577,0.565,1578,0.565,1579,0.565,1580,0.565,1581,0.565,1582,2.316,1583,0.994,1584,0.565,1585,4.609,1586,0.565,1587,0.565,1588,0.565,1589,1.841,1590,0.565,1591,2.316,1592,3.53,1593,0.565,1594,0.565,1595,0.524,1596,0.565,1597,0.89,1598,0.565,1599,0.565,1600,1.527,1601,0.565,1602,0.565,1603,0.565,1604,0.565,1605,0.565,1606,1.071,1607,0.565,1608,0.565,1609,1.071,1610,0.565,1611,0.565,1612,0.565,1613,2.316,1614,0.565,1615,0.565,1616,0.565,1617,1.071,1618,0.565,1619,0.565,1620,0.565,1621,0.565,1622,0.565,1623,0.565,1624,0.565,1625,0.565,1626,0.565,1627,1.071,1628,1.071,1629,1.94,1630,0.565,1631,0.565,1632,0.494,1633,1.335,1634,0.565,1635,0.565,1636,0.565,1637,0.565,1638,0.565,1639,0.565]],["component/28",[0,0.293,1,0.439]],["keyword/28",[]],["title/29-1",[27,19.311,57,18.072,175,20.136]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["keyword/29-1",[]],["title/29-2",[54,16.972,394,17.617,406,22.746]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["keyword/29-2",[]],["title/29-3",[43,22.38,425,22.026,759,28.713]],["name/29-3",[]],["text/29-3",[]],["component/29-3",[]],["keyword/29-3",[]],["title/29-4",[317,23.587,425,19.348,760,25.221,761,28.896]],["name/29-4",[]],["text/29-4",[]],["component/29-4",[]],["keyword/29-4",[]],["title/29-5",[0,9.695,77,29.924]],["name/29-5",[]],["text/29-5",[]],["component/29-5",[]],["keyword/29-5",[]],["title/29",[406,31.455]],["name/29",[29,0.62,406,0.701]],["text/29",[0,0.711,1,0.477,2,1.657,5,0.665,6,0.445,7,2.347,14,0.79,17,0.952,19,1.002,21,1.484,23,1.512,26,2.828,27,2.737,28,0.814,29,2.913,30,0.474,31,1.256,36,1.875,37,1.216,38,0.527,40,0.56,41,0.402,43,2.399,44,0.474,46,2.213,48,0.665,52,0.517,54,0.354,57,1.539,65,0.466,67,1.667,70,1.292,72,2.276,73,0.79,74,2.166,75,1.458,76,2.166,80,2.852,81,2.567,82,0.474,83,2.056,85,0.466,86,0.499,88,1.88,90,1.724,91,1.069,94,0.839,95,0.537,99,2.723,102,1.875,105,4.157,107,1.594,112,1.791,114,0.646,116,3.323,117,1.411,118,1.26,122,0.881,123,1.254,124,0.482,126,1.121,127,0.49,129,0.537,130,2.183,132,0.432,133,0.459,134,1.846,135,1.26,138,0.482,140,1.875,141,0.839,142,1.48,143,1.16,148,0.964,156,1.444,162,0.474,163,1.26,165,0.438,167,1.108,172,2.361,173,0.527,174,0.482,175,1.88,177,0.517,178,0.585,182,0.585,192,1.594,195,1.002,197,1.369,198,2.23,199,2.025,203,1.218,204,0.814,205,1.239,207,0.517,208,1.26,215,0.466,218,0.928,219,0.939,220,0.474,221,1.854,228,0.764,229,0.572,234,2.63,247,0.629,249,1.307,252,1.178,253,0.466,256,0.527,259,1.023,260,0.474,261,0.517,266,0.452,267,2.819,269,0.56,270,0.537,274,0.585,275,0.912,276,0.881,277,1.39,279,1.414,283,2.23,287,1.124,292,0.946,295,0.572,297,1.969,298,1.002,304,0.499,305,0.482,316,0.665,317,1.023,318,0.466,320,1.618,324,0.881,325,0.686,333,0.814,335,0.646,339,0.964,342,0.527,344,1.615,345,0.585,347,1.711,349,0.839,351,0.426,352,2.57,368,1.349,371,0.598,372,0.646,378,1.68,379,0.646,380,0.445,381,1.182,387,1.505,388,0.79,394,2.596,395,0.613,396,0.537,399,1.954,401,1.002,404,1.678,405,0.598,406,3.605,408,1.724,411,0.709,412,0.482,413,0.537,415,0.686,416,0.629,418,2.239,422,0.474,424,0.508,425,2.897,429,1.93,430,4.654,432,2.493,433,0.572,434,1.585,435,0.686,436,2.941,437,4.337,438,1.667,443,1.307,444,0.537,445,4.82,446,2.778,447,2.973,448,0.734,449,0.49,450,0.629,453,0.764,454,1.182,457,2.67,459,4.051,461,1.283,463,1.678,464,2.418,470,2.493,474,2.035,479,0.598,485,0.709,492,3.121,493,0.598,501,0.572,503,2.778,504,1.343,507,0.912,517,2.505,518,0.629,520,0.764,522,0.517,527,1.094,528,0.598,547,0.646,552,0.56,562,0.517,564,1.26,568,1.397,571,1.847,573,0.56,576,0.613,581,0.572,582,0.629,583,0.629,584,0.585,594,0.537,597,0.665,598,0.764,599,0.613,600,0.629,605,0.946,607,0.946,618,2.075,624,1.283,626,2.195,629,1.585,630,1.397,632,1.397,633,3.461,634,1.785,635,1.93,636,1.549,637,1.331,638,2.286,639,1.855,640,1.855,641,2.017,642,1.93,653,1.002,654,1.307,657,1.477,658,1.094,659,0.548,661,0.598,673,0.572,700,1.512,702,0.629,711,1.825,722,0.764,726,0.629,734,0.734,745,1.747,752,0.734,753,0.686,754,0.613,759,3.661,760,3.078,761,4.051,762,0.892,763,2.23,764,0.798,765,0.734,766,0.764,767,2.176,768,0.892,769,0.892,770,0.892,771,0.613,772,0.798,773,0.892,774,0.892,775,0.892,776,1.68,777,1.182,778,0.764,779,0.892,780,0.892,781,0.892,782,2.35,783,0.598,784,0.598,785,0.734,786,0.734,787,0.709,788,0.84,789,0.892,790,0.892,791,1.444,792,0.646,793,0.892,794,2.252,795,0.709,796,1.63,797,0.892,798,1.296,799,0.764,800,0.892,801,0.527,802,0.646,803,0.892,804,0.798,805,0.686,806,0.892,807,1.63,808,4.306,809,0.798,810,0.892,811,0.892,812,1.46,813,1.63,814,0.734,822,0.686,824,1.63,825,0.613,826,0.686,827,0.734,828,1.069,829,1.535,830,1.46,831,1.63,832,1.63,833,1.535,834,1.254,835,1.456,837,0.892,838,0.892,839,0.892,840,2.67,841,1.93,842,0.665,843,2.385,844,0.646,845,0.892,846,0.892,847,0.892,848,0.892,849,0.892,850,0.764,851,0.734,852,3.69,853,2.418,854,1.633,855,0.892,856,0.686,857,0.798,858,0.892,859,0.764,860,2.252,861,0.798,862,0.892,863,0.892,864,0.892,865,1.254,866,1.46,867,0.892,868,0.764,869,0.892,870,0.892,873,0.764,875,0.892,876,0.892,877,1.535,878,0.892,879,1.855,880,0.665,881,0.892,882,0.734,883,0.764,884,0.646,885,0.892,886,0.892,887,4.836,888,0.84,889,1.63,890,0.764,891,0.892,892,0.892,893,0.892,894,0.892,896,0.892,897,0.892,898,1.63,899,1.535,900,1.63,901,0.892,902,0.892,903,0.892,904,0.764,905,0.709,906,0.734,907,0.798,908,0.892,909,0.686,910,1.397,911,1.254,912,0.764,913,0.709,914,0.764,915,0.764,916,0.734,917,0.892,918,0.892,919,0.764,920,1.094,921,0.892,922,0.84,923,0.892,924,0.892,925,0.892,926,0.734,927,0.709,928,0.892,929,2.252,930,2.783,931,0.892,932,0.892,933,0.892,934,1.63,935,0.892,936,0.84,937,0.84,938,0.892,939,0.892,940,1.296,941,0.665,942,0.892,943,0.734,944,0.734,945,0.84,946,2.121,947,0.665,948,0.892,949,0.892,950,1.63,951,0.892,952,0.892,953,0.892,954,0.598,955,0.613,956,0.892,957,0.892,958,0.764,962,0.646,968,0.646,971,0.798,977,1.343,987,1.121,1000,1.397,1003,0.598,1006,1.343,1007,0.798,1009,0.798,1011,0.734,1030,0.686,1098,0.798,1112,0.798,1211,0.629,1219,1.633,1220,1.296,1270,0.665,1386,0.734,1400,1.182,1431,1.343,1467,0.798,1468,1.46,1470,0.764,1512,0.734,1513,0.798,1536,0.734,1546,0.892,1547,0.84,1548,3.494,1549,0.961,1550,0.961,1551,2.121,1552,0.961,1553,0.961,1554,1.757,1555,0.961,1556,0.84,1557,0.961,1558,0.961,1559,0.961,1560,1.757,1561,1.757,1562,1.757,1563,0.961,1564,0.961,1565,0.961,1566,0.961,1567,0.961]],["component/29",[0,0.293,1,0.439]],["keyword/29",[]],["title/30-1",[26,16.081,54,14.908,85,19.658,959,32.195]],["name/30-1",[]],["text/30-1",[]],["component/30-1",[]],["keyword/30-1",[]],["title/30-2",[54,16.972,85,22.38,394,17.617]],["name/30-2",[]],["text/30-2",[]],["component/30-2",[]],["keyword/30-2",[]],["title/30-3",[57,20.976,835,25.975]],["name/30-3",[]],["text/30-3",[]],["component/30-3",[]],["keyword/30-3",[]],["title/30-4",[118,23.935,394,17.617,835,22.38]],["name/30-4",[]],["text/30-4",[]],["component/30-4",[]],["keyword/30-4",[]],["title/30-5",[75,15.611,394,17.617,618,24.365]],["name/30-5",[]],["text/30-5",[]],["component/30-5",[]],["keyword/30-5",[]],["title/30-6",[75,13.713,324,20.314,444,22.646,618,21.402]],["name/30-6",[]],["text/30-6",[]],["component/30-6",[]],["keyword/30-6",[]],["title/30-7",[0,8.353,21,19.578,251,28.053]],["name/30-7",[]],["text/30-7",[]],["component/30-7",[]],["keyword/30-7",[]],["title/30-8",[0,6.541,55,16.724,130,16.983,199,16.983,960,25.763]],["name/30-8",[]],["text/30-8",[]],["component/30-8",[]],["keyword/30-8",[]],["title/30-9",[0,6.541,55,16.724,73,16.232,218,13.797,443,19.434]],["name/30-9",[]],["text/30-9",[]],["component/30-9",[]],["keyword/30-9",[]],["title/30-10",[0,7.337,2,10.766,251,24.641,333,18.758]],["name/30-10",[]],["text/30-10",[]],["component/30-10",[]],["keyword/30-10",[]],["title/30",[287,24.786,438,22.724]],["name/30",[156,0.845,452,1.085]],["text/30",[0,1.305,1,0.512,2,2.25,14,3.086,17,2.31,20,1.394,21,3.015,22,0.548,24,0.46,26,2.557,27,0.435,28,0.481,29,2.478,30,0.512,31,1.334,34,0.847,36,1.237,38,1.034,41,1.085,44,0.512,46,0.919,51,0.93,52,0.559,54,0.382,55,3.426,57,1.448,59,0.741,62,2.397,64,0.901,65,0.915,67,2.306,70,0.447,72,1.974,73,2.82,74,1.264,75,2.473,76,2.9,77,1.054,80,3.229,81,1.806,82,2.23,83,0.46,85,0.915,86,0.539,88,0.453,89,1.613,93,0.741,94,1.765,99,2.628,102,2.321,105,4.136,107,0.474,112,0.474,116,3.283,117,1.218,118,1.917,122,0.521,124,1.299,127,0.962,128,2.516,129,0.58,130,0.887,132,1.164,133,0.496,134,2.554,135,0.539,140,1.765,141,2.466,148,1.746,150,1.39,162,0.512,163,1.653,165,2.688,167,1.685,171,1.075,172,2.466,173,0.569,174,2.074,175,1.613,177,0.559,181,0.632,184,1.122,189,0.825,190,0.718,191,0.793,192,1.685,194,0.559,197,0.474,198,0.662,199,2.554,203,0.521,204,1.475,205,0.53,206,1.653,207,1.394,208,1.653,210,1.652,213,0.679,215,1.257,218,1.727,220,0.512,221,1.371,222,0.646,225,0.662,229,0.618,234,1.475,244,1.42,249,0.559,250,1.321,251,3.706,252,2.505,253,0.504,254,0.646,255,1.174,256,0.569,260,0.512,262,0.765,266,0.887,267,1.817,269,1.098,270,0.58,275,0.539,276,1.853,277,1.199,279,0.604,287,0.481,291,1.508,292,1.394,297,1.299,298,0.592,303,0.718,304,0.539,305,1.853,312,0.662,318,0.504,320,1.475,324,0.945,330,0.679,333,0.481,336,1.015,342,0.569,343,0.996,349,0.496,351,0.835,368,1.432,369,2.026,370,0.793,371,0.646,372,0.698,374,0.765,375,1.979,378,0.718,383,0.825,387,0.945,394,2.713,396,0.58,397,1.054,399,1.781,400,1.174,401,0.592,408,1.822,409,0.718,410,0.646,412,0.521,416,1.234,418,0.592,422,0.512,424,1.368,430,3.794,433,0.618,434,2.727,436,0.618,438,0.8,440,3.613,443,2.225,449,0.53,461,0.996,464,2.556,465,0.646,466,0.662,474,0.604,476,2.531,485,1.39,497,0.765,501,0.618,505,1.695,506,0.679,507,0.979,509,1.498,510,1.304,511,1.441,522,1.714,524,2.312,528,0.646,531,1.498,536,1.39,537,0.679,542,0.698,546,1.234,562,1.015,564,0.979,571,3.909,574,1.575,575,0.662,580,0.718,581,1.122,594,0.58,605,0.559,618,2.87,619,1.203,624,0.548,626,2.065,629,0.996,634,2.689,637,0.569,644,0.632,653,0.592,654,0.559,659,1.075,664,2.204,673,1.541,682,1.848,689,0.604,711,0.632,719,0.741,724,0.718,738,0.646,750,0.718,771,0.662,776,0.718,778,1.498,783,0.646,784,0.646,791,1.122,801,3.111,822,1.345,825,0.662,827,1.441,835,3.126,836,1.848,842,2.204,844,0.698,854,1.741,859,1.498,882,0.793,883,0.825,920,1.613,941,0.718,947,0.718,954,2.575,959,1.498,960,3.225,961,0.963,962,3.039,963,1.749,964,0.963,965,0.963,966,2.402,967,0.963,968,0.698,969,1.477,970,1.749,971,1.566,972,0.963,973,1.304,974,0.793,975,1.749,976,1.749,977,3.714,978,2.954,979,1.749,980,1.749,981,1.566,982,1.749,983,1.749,984,1.749,985,0.963,986,1.749,987,2.638,988,1.749,989,1.749,990,1.749,991,1.749,992,1.749,993,1.749,994,1.749,995,1.749,996,1.749,997,1.749,998,2.402,999,0.963,1000,1.498,1001,0.963,1002,0.825,1003,0.646,1004,0.963,1005,0.963,1006,1.979,1007,3.069,1008,0.963,1009,1.566,1010,0.793,1011,0.793,1012,0.963,1013,0.825,1014,3.128,1015,0.963,1016,0.963,1017,0.963,1018,2.402,1019,1.749,1020,0.907,1021,1.749,1022,0.963,1023,2.936,1024,0.963,1025,0.963,1026,0.963,1027,0.963,1028,3.836,1029,0.825,1030,1.345,1031,0.963,1032,2.531,1033,1.749,1034,1.749,1035,1.979,1036,2.954,1037,0.963,1038,0.963,1039,0.963,1040,0.963,1041,2.402,1042,0.963,1043,0.963,1044,0.963,1045,0.907,1046,1.741,1047,0.963,1048,1.749,1049,0.662,1050,0.907,1051,0.963,1052,0.963,1053,0.907,1054,0.963,1055,0.963,1056,0.963,1057,0.963,1058,0.963,1059,0.963,1060,0.963,1061,0.825,1062,0.963,1063,0.963,1064,0.862,1065,0.963,1066,0.963,1067,0.793,1068,0.963,1069,0.963,1070,0.718,1071,0.907,1072,0.963,1073,0.963,1074,0.825,1075,0.963,1076,0.963,1077,0.963,1078,0.963,1079,0.963,1080,0.963,1081,0.963,1082,0.862,1083,0.963,1084,0.963,1085,0.963,1086,0.963,1087,0.825,1088,1.498,1089,0.825,1090,1.749,1091,0.963,1092,0.862,1093,0.963,1094,1.498,1095,0.825,1096,0.963,1097,0.963,1098,0.862,1099,0.825,1100,1.749,1101,1.498,1102,1.979,1103,0.963,1104,0.963,1105,0.963,1106,0.963,1107,0.963,1108,1.345,1109,0.741,1110,0.963,1111,0.963,1112,0.862,1113,0.963,1114,0.963,1115,0.793,1116,1.749,1117,0.907,1118,0.963,1119,0.963,1120,0.963,1121,0.793,1122,2.263,1123,1.749,1124,1.749,1125,1.304,1126,0.963,1127,2.151,1128,2.263,1129,0.741,1130,2.646,1131,0.963,1132,1.749,1133,0.862,1134,0.862,1135,1.749,1136,0.765,1137,0.907,1138,0.963,1139,0.963,1140,0.862,1141,0.963,1142,0.963,1143,0.963,1144,0.963,1145,1.749,1146,0.963,1147,0.825,1219,1.268]],["component/30",[0,0.293,1,0.439]],["keyword/30",[]],["title/31",[2,12.256,132,20.727,287,21.355]],["name/31",[3,1.272]],["text/31",[0,1.401,2,2.24,16,3.225,17,2.435,26,3.345,28,2.877,31,3.24,46,2.205,70,2.675,73,3.478,74,3.072,75,2.103,76,2.466,86,3.225,88,2.713,91,3.779,94,2.967,95,3.473,138,3.116,171,3.544,174,3.116,204,2.877,238,3.696,281,4.747,286,4.299,287,3.583,307,4.177,320,2.877,349,2.967,351,2.752,368,2.792,388,2.792,394,2.373,438,2.638,530,4.58,763,3.964,777,4.177,785,4.747,955,3.964,1148,4.432,1149,7.177,1150,5.763,1151,5.763,1152,5.763]],["component/31",[0,0.293,1,0.439]],["keyword/31",[]],["title/32-1",[2,12.256,27,19.311,75,15.611]],["name/32-1",[]],["text/32-1",[]],["component/32-1",[]],["keyword/32-1",[]],["title/32-2",[75,13.713,218,15.475,353,19.658,408,19.98]],["name/32-2",[]],["text/32-2",[]],["component/32-2",[]],["keyword/32-2",[]],["title/32-3",[2,12.256,57,18.072,75,15.611]],["name/32-3",[]],["text/32-3",[]],["component/32-3",[]],["keyword/32-3",[]],["title/32-4",[2,12.256,46,16.366,422,22.746]],["name/32-4",[]],["text/32-4",[]],["component/32-4",[]],["keyword/32-4",[]],["title/32-5",[74,18.308,447,26.302,1153,29.42]],["name/32-5",[]],["text/32-5",[]],["component/32-5",[]],["keyword/32-5",[]],["title/32-6",[2,12.256,46,16.366,624,24.365]],["name/32-6",[]],["text/32-6",[]],["component/32-6",[]],["keyword/32-6",[]],["title/32",[2,12.256,46,16.366,74,18.308]],["name/32",[2,0.378,74,0.564]],["text/32",[1,0.814,2,2.311,14,1.348,17,2.225,21,2.411,23,1.094,30,2.801,31,1.644,33,1.433,34,0.79,36,0.839,41,0.736,44,0.867,46,2.152,51,2.29,52,0.946,55,0.814,57,0.689,62,1.936,64,1.433,65,0.853,67,2.713,68,1.868,69,2.659,70,1.292,72,0.767,73,2.552,74,3.278,75,2.736,76,3.55,80,3.437,81,1.714,82,1.936,83,0.778,88,1.714,90,1.48,96,2.336,99,1.818,102,2.712,105,3.824,107,0.802,112,0.802,116,3.425,117,2.183,122,0.881,124,1.505,127,0.896,130,1.846,132,1.765,133,0.839,134,0.826,138,0.881,140,2.217,141,0.839,143,0.839,148,0.964,162,1.936,165,1.369,167,3.153,168,2.017,170,2.388,172,0.839,174,2.614,175,0.767,177,1.614,179,0.964,181,1.069,182,1.069,184,1.045,192,1.369,194,0.946,197,0.802,200,1.295,201,1.295,203,0.881,204,1.389,205,0.896,207,0.946,208,2.409,210,1.121,215,1.456,218,1.5,219,1.519,220,0.867,221,0.756,222,1.094,225,1.914,229,1.045,231,1.094,234,2.959,238,1.785,247,1.15,250,1.53,251,1.069,252,2.253,253,0.853,256,0.964,260,0.867,264,1.868,266,0.826,270,0.982,274,1.069,277,1.389,280,1.045,283,1.121,290,1.216,291,1.023,292,0.946,296,1.121,298,1.002,304,0.912,305,1.505,306,1.216,310,1.216,315,1.254,316,1.216,318,0.853,320,1.818,324,0.881,333,1.818,336,0.946,339,0.964,342,0.964,344,2.805,345,1.825,349,0.839,351,0.778,352,2.569,353,1.456,356,1.747,368,0.79,369,1.645,380,1.818,387,2.328,388,0.79,394,0.671,397,2.595,401,1.711,402,2.961,404,2.195,408,3.686,409,2.716,412,1.505,419,2.801,422,0.867,424,2.074,430,2.444,434,2.754,438,1.667,447,4.168,449,0.896,458,1.397,463,3.174,479,1.094,480,1.254,501,1.045,505,1.964,507,0.912,518,2.569,524,1.677,528,1.094,543,2.076,546,1.15,562,1.614,564,0.912,571,2.453,573,1.023,574,3.689,575,1.121,576,2.505,577,2.14,578,2.292,579,1.397,580,2.716,581,1.785,582,1.15,584,1.825,594,1.677,600,1.15,601,2.385,607,0.946,616,1.343,617,1.46,624,0.928,637,0.964,649,1.397,653,1.711,654,1.614,673,1.045,674,2.801,676,1.15,677,1.914,696,2.14,754,1.121,756,1.397,763,2.505,777,1.181,805,1.254,822,2.14,825,1.914,828,1.069,842,1.216,852,1.397,853,1.216,905,1.295,910,1.397,911,1.254,941,1.216,947,1.216,954,1.094,955,2.505,962,3.121,1003,1.094,1013,1.397,1014,2.076,1023,1.397,1032,1.397,1035,2.292,1046,2.017,1049,2.961,1101,1.397,1102,2.292,1115,1.343,1125,1.216,1153,1.121,1154,2.621,1155,1.63,1156,1.295,1157,2.783,1158,1.63,1159,1.63,1160,1.63,1161,1.63,1162,1.535,1163,1.397,1164,1.63,1165,1.63,1166,1.63,1167,1.535,1168,1.63,1169,5.308,1170,2.492,1171,1.535,1172,1.254,1173,1.535,1174,2.621,1175,1.535,1176,1.535,1177,1.535,1178,1.535,1179,2.621,1180,2.621,1181,2.385,1182,1.535,1183,2.621,1184,1.535,1185,1.535,1186,1.535,1187,1.535,1188,2.621,1189,1.295,1190,1.121,1191,3.43,1192,3.43,1193,1.535,1194,1.535,1195,4.056,1196,1.63,1197,1.63,1198,2.783,1199,2.783,1200,4.056,1201,2.385,1202,1.46,1203,1.46,1204,1.63,1205,1.63,1206,1.63,1207,1.295,1208,3.12,1209,1.63,1210,2.783,1211,1.15,1212,1.63,1213,3,1214,1.216,1640,1.757]],["component/32",[0,0.293,1,0.439]],["keyword/32",[]],["title/33",[7,20.709,1215,30.528]],["name/33",[3,1.272]],["text/33",[0,1.27,2,1.864,7,2.713,16,3.64,19,3.999,28,3.247,34,3.152,41,2.936,75,2.374,142,3.459,380,3.247,387,3.517,388,3.743,389,5.358,390,4.266,391,5.573,392,5.573,393,5.002,394,2.679,395,4.474,396,3.92,1215,5.067]],["component/33",[0,0.293,1,0.439]],["keyword/33",[]],["title/34-1",[54,19.699,397,29.924]],["name/34-1",[]],["text/34-1",[]],["component/34-1",[]],["keyword/34-1",[]],["title/34-2",[218,17.617,353,22.38,408,22.746]],["name/34-2",[]],["text/34-2",[]],["component/34-2",[]],["keyword/34-2",[]],["title/34-3",[0,9.695,77,29.924]],["name/34-3",[]],["text/34-3",[]],["component/34-3",[]],["keyword/34-3",[]],["title/34-4",[0,7.337,1,10.996,2,10.766,404,22.646]],["name/34-4",[]],["text/34-4",[]],["component/34-4",[]],["keyword/34-4",[]],["title/34",[76,16.081,1215,23.104,1216,25.842,1217,25.842]],["name/34",[76,0.4,835,0.489,969,0.575]],["text/34",[0,1.211,1,1.07,2,1.514,6,0.528,7,2.1,14,0.922,17,1.875,20,1.505,21,2.176,22,0.602,26,1.744,27,0.859,28,1.295,29,1.492,30,1.686,31,1.431,33,0.979,36,1.336,40,0.663,41,0.477,44,1.011,46,1.213,47,0.571,51,0.562,57,1.545,62,1.011,64,0.544,65,0.553,67,1.865,69,1.046,70,0.883,72,2.089,73,1.975,74,1.357,75,2.904,76,3.528,78,0.727,80,1.854,81,2.238,82,0.562,86,0.591,88,1.722,90,1.945,92,1.277,93,0.813,94,0.544,95,1.146,96,0.678,99,2.035,102,0.979,105,4.406,107,0.935,108,1.308,112,1.559,116,3.337,117,1.315,120,0.746,121,0.84,124,1.714,129,0.637,130,0.964,132,2.15,134,2.678,135,0.591,136,1.379,137,3.134,140,0.979,141,1.336,142,1.945,143,1.336,149,1.463,152,0.905,162,1.011,163,0.591,165,1.275,167,0.935,170,1.247,172,2.099,173,0.625,174,1.028,175,2.238,182,0.693,184,0.678,192,2.183,194,1.505,197,0.52,199,2.066,204,0.528,206,0.591,211,0.813,215,0.553,218,2.268,219,0.441,220,0.562,221,1.471,224,0.84,234,1.826,238,2.033,243,1.342,244,1.533,249,1.103,250,2.615,252,1.357,253,0.553,259,0.663,260,1.379,261,0.613,264,1.277,266,0.536,269,3.161,273,0.663,275,0.591,276,0.571,277,0.528,280,0.678,287,1.826,289,1.247,295,1.22,296,0.727,297,1.028,304,1.064,305,0.571,312,0.727,320,1.583,333,1.295,336,1.103,343,1.477,344,1.103,347,1.595,349,0.544,351,0.908,353,2.881,365,0.727,376,2.455,380,0.95,387,1.714,388,0.922,390,0.693,394,2.35,397,2.205,399,1.563,400,2.128,401,3.814,402,3.925,403,1.342,405,1.741,406,0.562,407,1.419,408,4.138,410,1.277,411,0.84,412,1.028,419,2.813,422,0.562,424,0.602,425,0.544,431,0.905,432,0.813,434,2.322,436,2.033,438,1.674,443,2.122,447,0.65,449,0.581,450,0.746,451,0.905,459,0.813,461,1.083,463,3.821,466,0.727,473,0.788,474,0.663,475,1.935,479,2.455,480,0.813,481,0.788,483,0.905,493,0.709,494,0.84,506,2.581,507,0.591,518,2.581,522,1.103,523,2.876,524,0.637,525,0.905,527,1.277,528,1.741,542,0.766,543,0.788,545,0.905,546,0.746,547,3.447,548,0.84,549,0.905,550,0.905,551,1.791,552,1.194,553,2.443,554,0.905,555,2.443,556,0.995,561,1.379,562,2.122,564,2.047,566,0.905,571,1.806,572,0.905,573,2.296,583,0.746,584,2.673,585,0.709,586,0.905,587,0.905,588,0.905,589,0.905,590,0.905,591,0.87,592,0.905,593,0.84,594,1.911,595,1.567,596,0.84,599,1.784,600,1.342,602,0.87,605,1.505,607,1.505,609,0.813,618,0.602,619,0.727,620,1.791,621,1.63,622,0.995,623,1.791,624,1.083,626,3.184,627,1.379,628,0.905,629,1.083,633,2.749,634,3.229,636,0.727,637,0.625,638,0.663,643,0.905,644,1.247,645,0.905,646,0.905,648,3.492,653,0.65,654,0.613,656,3.134,657,1.247,658,1.741,659,0.65,660,0.905,661,1.277,662,1.63,663,1.791,664,4.514,665,0.95,666,1.63,667,1.63,668,1.567,669,1.63,670,1.567,676,0.746,684,0.905,685,0.995,686,0.995,687,0.995,688,2.728,689,0.663,690,1.463,696,0.813,697,0.905,698,0.905,699,0.788,700,0.709,701,0.84,702,0.746,703,2.716,708,0.87,710,0.905,711,1.701,712,2.443,713,2.222,714,2.222,716,2.222,717,1.63,719,0.813,720,0.905,721,0.813,726,0.746,727,0.905,728,0.905,730,1.63,731,0.905,735,1.63,737,0.766,738,0.709,739,0.87,740,1.63,741,0.905,742,0.813,743,0.905,745,0.663,755,0.905,766,1.63,801,0.625,835,0.995,969,1.169,1156,0.84,1190,0.727,1215,2.729,1216,0.727,1217,0.727,1218,1.057,1219,0.766,1220,0.84,1221,1.057,1222,1.057,1223,1.057,1224,1.057,1225,0.87,1226,1.057,1227,1.057,1228,1.057,1229,3.239,1230,1.057,1231,1.057,1232,0.87,1233,0.905,1234,0.84,1235,1.057,1236,1.057,1237,1.057,1238,2.594,1239,1.902,1240,0.905,1241,0.905,1242,1.057,1243,1.057,1244,3.17,1245,5.223,1246,2.594,1247,1.057,1248,0.946,1249,0.905,1250,0.905,1251,0.905,1252,1.902,1253,1.057,1254,2.594,1255,1.057,1256,1.057,1257,1.902,1258,0.946,1259,0.995,1260,0.995,1261,1.902,1262,1.057,1263,1.057,1264,1.057,1265,1.057,1266,1.057]],["component/34",[0,0.293,1,0.439]],["keyword/34",[]],["title/35-1",[27,19.311,57,18.072,175,20.136]],["name/35-1",[]],["text/35-1",[]],["component/35-1",[]],["keyword/35-1",[]],["title/35-2",[2,12.256,54,16.972,394,17.617]],["name/35-2",[]],["text/35-2",[]],["component/35-2",[]],["keyword/35-2",[]],["title/35-3",[27,19.311,412,23.127,1267,36.652]],["name/35-3",[]],["text/35-3",[]],["component/35-3",[]],["keyword/35-3",[]],["title/35-4",[43,25.975,759,33.326]],["name/35-4",[]],["text/35-4",[]],["component/35-4",[]],["keyword/35-4",[]],["title/35-5",[317,26.852,425,22.026,760,28.713]],["name/35-5",[]],["text/35-5",[]],["component/35-5",[]],["keyword/35-5",[]],["title/35-6",[0,9.695,77,29.924]],["name/35-6",[]],["text/35-6",[]],["component/35-6",[]],["keyword/35-6",[]],["title/35",[1215,26.302,1216,29.42,1217,29.42]],["name/35",[835,0.689,969,0.81]],["text/35",[0,0.957,1,0.854,2,2.045,6,0.996,7,1.957,14,0.375,17,0.843,19,0.476,21,0.655,22,0.441,26,1.688,27,0.901,28,0.386,29,0.939,31,1.123,33,0.737,34,0.375,36,0.737,38,0.457,41,0.349,43,2.662,46,1.795,47,1.079,51,0.761,55,0.714,56,0.496,57,1.394,58,1.037,62,0.761,65,0.748,67,1.665,70,0.664,72,1.713,73,1.763,74,2.253,78,0.532,80,2.75,81,2.554,82,0.411,83,2.133,85,1.044,86,1.633,87,2.461,88,1.553,89,1.669,90,0.761,91,0.507,92,0.519,94,1.028,97,3.474,99,2.628,102,1.874,105,4.486,107,0.981,108,0.532,112,1.435,114,1.037,116,2.55,118,0.8,120,1.009,122,1.578,123,0.595,124,0.418,125,0.663,126,0.532,127,1.368,128,0.938,129,0.466,130,2.264,132,0.967,133,0.398,134,1.261,135,0.433,138,0.418,140,1.699,141,1.028,142,1.061,143,0.398,145,1.535,148,0.457,162,0.411,163,0.433,165,1.622,167,0.703,168,1.037,171,0.88,172,1.503,175,1.374,176,0.546,177,0.449,178,0.938,179,1.18,192,0.38,195,0.476,197,0.38,199,2.379,203,0.418,204,0.714,205,0.425,206,0.433,207,0.449,208,1.392,213,1.408,215,0.405,218,1.202,219,1.037,220,0.411,221,2.178,234,2.229,244,0.846,249,0.83,250,1.368,252,0.748,253,1.044,254,0.519,255,0.519,256,0.457,258,0.663,260,1.552,261,1.158,263,0.637,266,0.392,267,2.424,270,0.466,275,0.433,276,1.345,277,0.386,279,0.486,280,0.917,287,0.386,289,0.507,291,0.898,292,0.83,293,2.537,294,1.067,295,0.496,296,0.532,297,0.773,298,0.476,299,0.595,305,0.773,306,0.577,317,0.898,318,2.063,320,1.242,323,0.615,324,0.418,333,0.386,335,1.037,336,0.449,339,0.457,342,0.457,343,0.441,344,0.83,347,0.88,351,1.393,356,0.898,365,0.532,368,0.967,369,1.18,371,0.519,372,0.561,374,0.615,376,2.215,377,0.595,379,0.561,381,0.561,388,0.693,390,0.938,394,2.096,396,0.466,399,0.466,404,0.862,410,0.519,412,1.079,413,1.499,418,0.88,420,0.595,422,0.411,424,1.137,425,1.874,426,1.447,433,0.496,434,1.662,436,2.864,438,0.913,443,1.158,444,0.862,447,2.029,449,0.425,450,0.546,461,2.899,463,2.376,465,0.519,466,0.532,467,2.131,475,2.714,478,1.644,479,0.519,481,3.146,493,0.96,496,0.561,501,0.917,502,1.226,507,0.433,510,0.577,517,0.532,522,1.443,523,1.009,524,0.466,527,0.96,537,0.546,538,0.637,542,0.561,552,0.486,561,0.561,562,1.443,564,1.633,571,1.662,573,0.486,576,0.532,581,0.496,584,0.938,597,0.577,599,0.984,605,1.443,609,0.595,615,0.663,618,0.441,619,0.532,624,1.137,626,2.193,627,1.803,629,2.073,633,3.59,634,2.529,636,1.71,637,0.846,638,2.803,641,1.803,644,3.558,652,0.637,654,0.449,656,0.595,657,2.586,661,0.96,674,0.595,676,1.009,677,0.532,689,0.898,700,0.519,701,1.137,702,0.546,704,1.137,711,1.631,725,0.519,726,0.546,737,0.561,742,0.595,745,0.486,749,0.561,750,0.577,753,0.595,759,3.742,760,1.669,761,1.535,765,1.644,767,0.96,771,0.532,776,0.577,782,0.561,783,0.519,786,0.637,787,1.137,791,1.28,792,1.803,795,1.586,799,1.226,801,0.457,802,1.803,805,0.595,814,0.637,826,1.535,828,0.507,834,0.595,835,2.206,836,1.1,840,2.049,841,0.663,843,0.663,844,0.561,850,1.226,851,0.637,853,3.331,854,1.803,856,1.535,865,1.535,868,0.663,873,0.663,874,1.787,879,0.637,880,0.577,904,0.663,906,0.637,911,0.595,912,0.663,913,0.615,914,0.663,915,0.663,916,0.637,920,0.519,926,0.637,940,0.615,943,1.178,944,0.637,954,0.96,968,0.561,969,3.236,973,0.577,974,0.637,1049,0.532,1061,0.663,1067,0.637,1070,1.489,1074,0.663,1108,0.595,1109,0.595,1125,0.577,1129,0.595,1136,0.615,1153,0.532,1172,0.595,1189,0.615,1190,0.532,1201,0.663,1213,1.178,1214,0.577,1215,3.012,1216,0.984,1217,0.984,1225,3.679,1229,4.83,1232,1.178,1234,0.615,1240,0.663,1241,0.663,1245,2.997,1249,0.663,1250,1.71,1251,1.226,1267,2.827,1268,0.693,1269,2.342,1270,1.067,1271,0.728,1272,0.773,1273,0.773,1274,2.319,1275,0.773,1276,0.693,1277,2.918,1278,4.793,1279,0.773,1280,1.431,1281,0.773,1282,1.996,1283,0.773,1284,0.773,1285,0.773,1286,0.773,1287,1.996,1288,1.88,1289,1.431,1290,0.773,1291,0.773,1292,0.773,1293,0.773,1294,1.996,1295,1.431,1296,1.431,1297,0.728,1298,0.728,1299,0.728,1300,2.748,1301,0.728,1302,0.773,1303,0.773,1304,1.431,1305,0.773,1306,0.773,1307,0.773,1308,1.431,1309,1.347,1310,1.431,1311,3.943,1312,0.773,1313,0.773,1314,0.773,1315,1.431,1316,1.431,1317,0.773,1318,0.773,1319,0.773,1320,0.773,1321,1.996,1322,1.996,1323,1.431,1324,1.431,1325,0.773,1326,1.431,1327,1.996,1328,2.487,1329,1.347,1330,0.773,1331,1.431,1332,0.773,1333,0.773,1334,1.431,1335,0.773,1336,0.773,1337,0.773,1338,4.466,1339,0.773,1340,1.996,1341,0.773,1342,0.773,1343,1.431,1344,1.431,1345,1.431,1346,1.431,1347,2.487,1348,0.773,1349,0.773,1350,0.773,1351,0.663,1352,0.773,1353,1.431,1354,0.773,1355,0.773,1356,3.032,1357,1.431,1358,1.431,1359,0.773,1360,0.773,1361,0.728,1362,0.773,1363,0.773,1364,0.637,1365,0.728,1366,0.773,1367,0.773,1368,1.281,1369,0.773,1370,0.773,1371,1.431,1372,0.773,1373,0.773,1374,0.773,1375,0.773,1376,0.663,1377,0.728,1378,0.693,1379,1.281,1380,1.347,1381,0.773,1382,0.773,1383,0.773,1384,0.773,1385,0.773,1386,0.637,1387,0.773,1388,1.347,1389,0.773,1390,0.773,1391,0.773,1392,0.773,1393,0.773,1394,0.773,1395,0.773,1396,0.773,1397,0.773,1398,0.773,1399,0.773,1400,0.561,1401,0.773,1402,0.773,1403,0.773,1404,0.773,1405,1.431,1406,0.773,1407,0.773,1408,0.773,1409,0.773,1410,0.595,1411,0.728,1412,0.693,1413,0.663,1414,1.347,1415,1.347,1416,1.347,1417,0.728,1418,0.663,1419,0.728,1420,3.714,1421,0.728,1422,0.728,1423,0.728,1424,0.693,1425,0.693,1426,0.728,1427,0.728,1428,0.728,1429,5.618,1430,1.431,1431,0.637,1432,0.728,1433,0.773,1434,1.431,1435,0.773,1436,0.773,1437,0.728,1438,0.773,1439,0.773,1440,1.431,1441,0.773,1442,0.773,1443,0.773,1444,0.773,1445,0.773,1446,0.773,1447,0.773,1448,0.728,1449,0.773,1450,0.773,1451,0.773,1452,3.714,1453,0.728,1454,1.347,1455,1.996,1460,0.773,1461,0.728,1462,0.773,1463,1.431,1464,1.431,1465,0.773,1466,0.773,1467,0.693,1468,0.693,1469,0.595,1470,0.663,1471,0.728,1476,0.728,1477,1.178,1478,0.637,1479,1.347,1480,3.714,1481,0.728,1482,0.773,1483,0.773,1484,0.773,1485,0.773,1589,0.663,1632,0.728,1633,2.342,1641,0.834,1642,0.834,1643,0.834,1644,0.834,1645,0.834,1646,0.834,1647,2.151,1648,1.542]],["component/35",[0,0.293,1,0.439]],["keyword/35",[]],["title/36-1",[81,20.136,143,22.026,767,28.713]],["name/36-1",[]],["text/36-1",[]],["component/36-1",[]],["keyword/36-1",[]],["title/36-2",[64,17.25,69,18.422,72,15.769,1486,28.704,1487,25.763]],["name/36-2",[]],["text/36-2",[]],["component/36-2",[]],["keyword/36-2",[]],["title/36-3",[24,23.709,112,24.416]],["name/36-3",[]],["text/36-3",[]],["component/36-3",[]],["keyword/36-3",[]],["title/36-4",[20,21.797,107,18.478,1488,37.575,1489,32.195]],["name/36-4",[]],["text/36-4",[]],["component/36-4",[]],["keyword/36-4",[]],["title/36-5",[197,16.474,219,13.973,321,25.763,322,25.763,1487,25.763]],["name/36-5",[]],["text/36-5",[]],["component/36-5",[]],["keyword/36-5",[]],["title/36",[1477,48.727]],["name/36",[3,1.272]],["text/36",[1,1.244,6,1.008,7,0.842,14,0.978,17,2.084,20,3.408,21,2.258,22,1.15,24,3.102,26,1.819,31,0.911,33,2.189,34,0.978,36,1.039,43,1.056,45,2.484,46,0.772,47,1.091,48,1.505,54,0.801,55,3.103,56,3.501,62,2.623,64,3.571,65,1.056,66,2.561,67,1.945,69,3.001,70,0.937,72,1.567,73,0.978,74,3.166,75,0.737,76,0.864,80,1.023,81,2.001,82,3.124,85,2.224,88,1.567,90,2.26,94,2.189,96,1.294,99,2.122,102,2.189,105,2.933,116,2.39,117,1.023,128,1.324,130,1.688,133,1.039,134,2.767,138,1.8,140,1.039,141,1.715,143,1.715,161,1.604,162,1.073,163,1.129,164,1.729,165,2.09,167,2.684,169,2.853,170,2.788,173,1.193,174,1.091,175,2.322,176,2.349,179,1.193,181,2.788,192,2.09,194,1.171,195,1.241,198,1.388,199,3.516,206,1.129,210,3.392,215,1.742,218,0.831,219,1.773,220,2.26,221,1.545,222,2.235,225,1.388,231,2.235,234,3.243,237,5.034,243,1.424,244,1.193,250,1.11,252,1.056,253,1.056,259,1.267,261,1.171,266,1.023,273,1.267,275,1.129,276,1.8,277,1.008,286,1.505,290,1.505,291,2.09,292,1.932,293,1.552,297,1.8,301,1.662,302,2.743,304,2.378,305,1.091,307,3.575,315,1.552,318,1.056,321,2.561,322,3.269,325,1.552,330,1.424,334,1.729,339,1.193,342,1.193,345,1.324,349,1.039,351,0.964,357,1.552,368,0.978,369,1.968,380,1.662,382,1.729,386,4.063,407,1.505,413,2.562,415,3.793,416,2.999,417,2.853,422,1.073,433,1.294,438,0.924,444,2.973,449,2.337,454,2.414,461,1.15,465,1.355,473,1.505,474,1.267,500,1.729,505,3.851,506,1.424,507,1.129,517,1.388,524,3.541,552,1.267,571,3.7,574,2.184,577,1.552,585,2.235,605,1.171,608,1.604,629,1.897,658,1.355,673,2.136,682,5.178,688,1.505,689,1.267,724,2.484,745,1.267,763,3.392,767,1.355,783,2.235,784,2.235,791,2.136,798,1.604,801,1.193,825,1.388,828,2.184,884,1.463,890,1.729,909,1.552,919,1.729,920,1.355,927,1.604,958,1.729,960,4.198,962,2.414,973,2.484,1003,1.355,1029,2.853,1046,1.463,1049,2.29,1087,1.729,1088,1.729,1089,1.729,1094,4.226,1095,1.729,1129,1.552,1148,1.552,1153,1.388,1207,3.378,1211,1.424,1214,2.484,1233,2.853,1364,1.662,1400,3.081,1410,1.552,1469,1.552,1478,1.662,1486,4.677,1487,3.269,1489,1.729,1490,1.807,1491,1.807,1492,2.018,1493,2.018,1494,2.018,1495,5.875,1496,2.018,1497,3.33,1498,2.018,1499,2.018,1500,2.018,1501,2.018,1502,1.901,1503,2.018,1504,1.901,1505,2.018,1506,2.018,1507,2.018,1508,2.018,1509,3.33,1510,1.901,1511,2.018,1512,1.662,1513,1.807,1514,3.33,1515,2.018,1516,2.018,1517,2.018,1518,2.018,1519,4.677,1520,2.018,1521,4.251,1522,2.018,1523,4.251,1524,2.018,1525,2.018,1526,2.018,1527,2.018,1528,2.018,1529,3.33,1530,4.004,1531,2.018,1532,3.33,1533,2.018,1534,3.33,1535,2.018,1536,1.662,1537,4.251,1538,3.33,1539,2.018,1540,2.018,1541,2.018,1542,2.018,1543,2.018,1544,1.604]],["component/36",[0,0.293,1,0.439]],["keyword/36",[]],["title/37",[333,21.355,665,21.355,1211,30.181]],["name/37",[3,1.272]],["text/37",[2,1.619,4,4.492,5,4.216,6,2.822,7,3.389,8,5.061,9,5.061,10,5.061,11,5.061,12,5.061,13,5.061,14,2.739,16,3.162,17,2.996,70,2.623,71,4.843,116,3.436,145,4.347,167,2.779,179,4.191,273,3.548,353,2.957,380,4.056,388,2.739,547,4.097,607,4.113,633,4.178,659,3.475,665,4.178,725,3.794,784,3.794,987,3.887,1211,5.003,1650,6.76,1651,6.092,1652,5.323,1653,4.492,1654,5.652,1655,5.652,1656,4.656]],["component/37",[633,0.749,665,0.749]],["keyword/37",[]],["title/38-1",[167,21.036,353,22.38,400,28.713]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["keyword/38-1",[]],["title/38-2",[71,42.541,1010,40.897]],["name/38-2",[]],["text/38-2",[]],["component/38-2",[]],["keyword/38-2",[]],["title/38-3",[26,18.308,356,26.852,653,26.302]],["name/38-3",[]],["text/38-3",[]],["component/38-3",[]],["keyword/38-3",[]],["title/38-4",[54,16.972,633,21.355,665,21.355]],["name/38-4",[]],["text/38-4",[]],["component/38-4",[]],["keyword/38-4",[]],["title/38-5",[117,15.322,165,14.863,167,14.863,353,15.812,633,15.089,725,20.287]],["name/38-5",[]],["text/38-5",[]],["component/38-5",[]],["keyword/38-5",[]],["title/38-6",[633,18.758,725,25.221,1519,32.195,1657,37.575]],["name/38-6",[]],["text/38-6",[]],["component/38-6",[]],["keyword/38-6",[]],["title/38-7",[607,21.797,665,18.758,1658,37.575,1659,28.896]],["name/38-7",[]],["text/38-7",[]],["component/38-7",[]],["keyword/38-7",[]],["title/38-8",[5,31.906,7,17.842,388,20.727]],["name/38-8",[]],["text/38-8",[]],["component/38-8",[]],["keyword/38-8",[]],["title/38-9",[0,7.337,426,27.236,633,18.758,749,27.236]],["name/38-9",[]],["text/38-9",[]],["component/38-9",[]],["keyword/38-9",[]],["title/38",[117,25.169,738,33.326]],["name/38",[607,0.542,665,0.467,1660,0.837]],["text/38",[0,0.293,1,0.438,5,1.118,6,1.292,7,2.488,16,2.277,17,2.125,21,0.686,22,0.853,25,1.234,26,2.308,31,2.075,32,1.931,33,0.772,34,1.254,36,1.333,38,0.886,40,2.146,41,1.543,42,1.991,43,1.354,44,0.797,45,1.931,46,1.308,47,1.4,49,1.191,50,1.234,51,1.818,52,0.869,56,1.66,57,1.094,62,1.377,70,1.202,71,4.62,72,1.219,75,0.547,80,2.89,81,1.609,82,0.797,83,0.716,85,1.354,86,1.449,88,1.219,89,1.006,90,1.818,92,3.376,94,2.589,95,1.56,99,1.292,105,3.661,107,0.737,112,2.001,116,0.726,117,3.668,122,1.848,126,3.459,127,1.424,130,1.312,132,1.254,133,0.772,134,2.89,138,0.81,140,0.772,141,1.333,142,2.444,143,1.333,156,0.961,163,0.838,165,2.26,167,3.69,168,1.086,172,2.935,175,1.916,177,0.869,178,0.983,179,3.527,185,1.411,192,1.273,193,4.828,195,1.592,197,0.737,203,0.81,204,1.706,205,0.824,207,1.502,208,2.277,221,1.202,225,3.459,229,0.961,234,2.032,252,1.788,254,2.732,255,1.006,259,2.555,260,2.444,266,0.76,267,0.921,268,2.816,273,2.146,275,0.838,276,2.485,277,0.748,285,4.503,294,1.118,301,1.234,303,2.55,304,1.449,307,1.086,310,1.118,318,2.129,320,1.292,324,0.81,333,2.032,339,0.886,343,0.853,349,0.772,351,0.716,353,3.121,354,2.133,356,1.625,357,1.991,365,1.031,368,1.254,376,1.006,377,1.152,380,2.294,381,1.086,386,1.234,388,1.972,400,2.732,405,1.006,407,1.118,413,1.56,418,4.232,422,0.797,426,1.086,435,1.152,438,2.103,444,0.903,461,0.853,494,1.191,495,1.411,496,1.086,516,1.284,522,3.128,530,2.717,536,1.191,537,2.412,543,1.931,547,3.908,548,1.191,564,0.838,575,1.781,583,1.057,585,1.006,591,1.234,593,1.191,594,1.56,596,1.191,605,0.869,607,3.595,608,2.058,617,1.342,633,3.195,644,3.298,652,1.234,653,1.592,654,2.361,664,1.931,665,3.094,675,1.342,689,0.941,708,2.816,709,4.737,721,1.991,724,1.118,725,4.16,738,1.006,749,1.086,750,2.55,765,1.234,767,2.732,771,1.031,784,2.294,798,1.191,801,0.886,809,3.644,814,4.441,835,0.784,856,1.152,866,2.318,880,1.118,888,2.438,909,1.152,913,1.191,927,1.191,1003,3.085,1011,2.816,1070,1.118,1108,1.991,1121,1.234,1133,6.163,1208,2.929,1211,1.057,1268,1.342,1270,1.118,1309,1.411,1329,3.219,1356,2.629,1386,2.133,1490,2.318,1504,2.438,1519,5.483,1547,1.411,1657,5.701,1658,1.498,1659,1.152,1660,2.318,1661,4.953,1662,1.792,1663,1.792,1664,1.792,1665,1.792,1666,2.79,1667,1.792,1668,1.615,1669,1.792,1670,4.088,1671,1.792,1672,1.792,1673,1.498,1674,2.79,1675,1.792,1676,1.615,1677,1.498,1678,1.615,1679,1.792,1680,1.792,1681,1.792,1682,1.792,1683,1.792,1684,1.792,1685,1.792,1686,4.088,1687,1.792,1688,6.015,1689,1.792,1690,2.79,1691,1.792,1692,1.792,1693,1.615,1694,6.015,1695,1.792,1696,6.449,1697,1.792,1698,1.615,1699,1.615,1700,1.615,1701,3.096,1702,3.096,1703,1.792,1704,1.792,1705,1.615,1706,1.792,1707,1.792,1708,1.792,1709,3.096,1710,1.792,1711,1.792,1712,1.792,1713,1.792,1714,1.792,1715,1.792,1716,1.792,1717,1.615,1718,1.615,1719,1.792,1720,1.792,1721,1.792,1722,1.792,1723,1.615,1724,1.792,1725,1.792,1726,3.061,1727,3.219,1728,1.792,1729,4.07,1730,1.792,1731,4.953,1732,1.792,1733,1.792,1734,2.79,1735,1.792,1736,1.792,1737,1.792,1738,1.615,1739,1.792,1740,3.096,1741,1.792,1742,1.792,1743,1.792,1744,3.096,1745,1.792,1746,1.792,1747,1.792,1748,1.792,1749,1.792,1750,1.792,1751,1.792,1752,1.615,1753,1.792,1754,1.792,1755,1.792,1756,1.792,1757,1.342,1758,1.792,1759,1.615]],["component/38",[633,0.749,665,0.749]],["keyword/38",[]],["title/39-1",[665,24.786,1652,46.764]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["keyword/39-1",[]],["title/39-2",[607,28.802,665,24.786]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["keyword/39-2",[]],["title/39",[273,31.166,665,24.786]],["name/39",[607,0.542,665,0.467,1760,1.118]],["text/39",[1,0.743,7,2.722,17,2.098,21,1.162,23,2.69,26,1.715,28,1.268,29,1.195,30,1.35,31,2.771,33,2.064,34,2.406,36,2.557,38,2.369,40,1.594,62,2.131,67,1.834,70,1.178,72,1.195,73,1.23,74,2.125,80,3.694,81,1.195,88,1.195,90,2.641,95,1.53,97,2.091,99,1.268,100,2.274,107,1.249,112,1.249,116,2.975,117,3.924,118,1.421,122,1.373,124,1.373,127,2.204,129,1.53,132,2.406,133,1.307,134,1.287,135,1.421,136,1.84,140,1.307,141,2.557,143,2.064,145,1.953,161,2.018,165,2.773,172,2.557,178,1.665,179,4.308,192,1.249,194,1.473,197,1.249,198,1.746,199,2.032,203,1.373,204,1.268,205,1.396,207,1.473,208,2.779,215,1.328,221,1.86,232,1.894,253,1.328,254,1.704,256,1.501,259,1.594,260,2.131,262,2.018,266,1.287,275,1.421,277,1.268,286,1.894,292,2.325,294,3.704,312,1.746,324,2.167,333,3.8,336,1.473,343,2.283,344,2.325,349,1.307,351,1.212,352,1.791,353,1.328,368,1.942,373,2.391,379,1.84,380,2.815,396,1.53,412,1.373,418,2.464,426,2.905,435,1.953,438,1.162,444,1.53,449,1.396,494,2.018,504,2.091,522,2.325,561,1.84,575,1.746,576,1.746,585,3.333,594,1.53,595,3.302,607,4.709,633,3.8,638,1.594,644,1.665,650,2.274,654,2.325,665,4.221,690,1.953,692,2.175,699,1.894,721,1.953,725,1.704,739,2.091,763,2.757,771,1.746,783,1.704,784,2.69,786,3.302,825,2.757,907,2.274,973,1.894,987,1.746,1030,1.953,1070,1.894,1108,3.082,1136,3.947,1148,3.082,1167,2.391,1203,3.589,1207,2.018,1208,3.434,1211,1.791,1234,2.018,1356,1.953,1376,2.175,1378,2.274,1410,1.953,1412,2.274,1424,2.274,1425,2.274,1544,2.018,1595,2.539,1653,3.947,1657,4.008,1661,6.079,1677,4.008,1678,2.737,1699,2.737,1726,3.589,1727,3.775,1729,5.64,1759,2.737,1761,3.037,1762,3.037,1763,3.037,1764,2.737,1765,2.737,1766,3.037,1767,2.737,1768,3.037,1769,3.037,1770,6.617,1771,3.037,1772,3.037,1773,3.037,1774,3.037,1775,3.037,1776,4.794,1777,3.037,1778,3.037,1779,2.274,1780,3.037,1781,3.037,1782,3.037,1783,2.737,1784,3.037,1785,3.037,1786,3.037,1787,2.539,1788,5.939,1789,4.794,1790,3.037,1791,3.037,1792,3.037,1793,4.794,1794,3.037,1795,3.037,1796,3.037,1797,3.037,1798,2.737,1799,2.737,1800,3.037,1801,2.737]],["component/39",[633,0.749,665,0.749]],["keyword/39",[]],["title/40-1",[2,12.256,665,21.355,1653,33.997]],["name/40-1",[]],["text/40-1",[]],["component/40-1",[]],["keyword/40-1",[]],["title/40-2",[46,22.632]],["name/40-2",[]],["text/40-2",[]],["component/40-2",[]],["keyword/40-2",[]],["title/40-3",[2,12.256,54,16.972,394,17.617]],["name/40-3",[]],["text/40-3",[]],["component/40-3",[]],["keyword/40-3",[]],["title/40-4",[138,23.127,424,24.365,1757,38.304]],["name/40-4",[]],["text/40-4",[]],["component/40-4",[]],["keyword/40-4",[]],["title/40-5",[582,41.737]],["name/40-5",[]],["text/40-5",[]],["component/40-5",[]],["keyword/40-5",[]],["title/40",[2,12.256,633,21.355,665,21.355]],["name/40",[2,0.378,665,0.658]],["text/40",[2,2.176,6,0.786,7,0.657,14,1.719,16,0.881,17,2.001,21,2.167,25,2.922,26,0.674,29,0.741,31,1.602,32,2.015,33,0.81,34,0.763,40,0.988,41,0.711,42,1.21,43,1.413,44,0.837,45,1.174,46,1.033,47,0.851,49,1.251,50,1.297,51,1.436,57,2.465,62,1.436,67,1.236,69,0.866,70,1.254,72,1.67,74,3.046,75,1.295,76,2.609,80,1.798,81,2.602,83,0.752,88,1.67,89,2.381,90,1.886,91,1.032,92,1.056,94,0.81,95,0.949,99,1.348,102,3.004,103,1.483,105,4.279,107,1.745,112,1.745,116,3.245,117,0.798,122,1.918,124,0.851,127,0.866,132,1.719,133,0.81,134,2.62,135,2.65,138,0.851,141,2.166,142,0.837,143,2.166,148,0.93,161,1.251,162,0.837,167,1.328,171,0.968,172,1.827,176,1.111,179,3.603,188,1.409,192,1.745,194,0.913,197,1.328,199,1.369,203,1.46,205,1.951,208,0.881,213,1.111,215,1.856,218,0.648,221,0.731,224,1.251,231,1.056,234,2.1,250,1.485,261,1.567,264,2.381,266,0.798,267,0.968,275,0.881,276,1.46,277,1.771,279,1.695,287,0.786,295,1.009,297,2.275,303,2.015,304,1.511,318,1.856,324,1.46,336,1.567,344,0.913,349,0.81,351,1.29,353,0.823,356,1.695,368,1.309,369,0.93,387,0.851,394,2.758,397,1.628,399,1.628,408,1.436,409,1.174,416,2.503,423,1.483,424,0.897,425,2.438,426,1.958,430,4.092,434,0.897,436,3.037,438,0.72,444,1.628,463,3.674,464,2.646,466,1.083,470,1.21,496,3.05,497,2.147,510,1.174,516,1.349,517,1.083,522,0.913,524,2.536,548,1.251,561,1.141,573,0.988,574,1.032,578,1.297,580,2.015,581,1.009,582,1.111,585,1.056,594,1.628,607,0.913,616,2.225,618,0.897,619,1.858,624,1.538,626,1.628,629,0.897,633,3.829,634,1.009,636,1.858,637,0.93,638,3.47,639,1.297,640,1.297,641,1.141,654,0.913,658,1.056,659,2.912,665,3.343,668,1.297,673,1.732,677,1.858,700,1.056,725,1.056,737,1.141,738,1.056,776,1.174,777,1.141,784,1.056,791,1.009,792,1.141,795,2.147,829,1.483,833,1.483,834,1.21,836,1.21,840,2.922,854,2.572,857,2.419,884,1.141,941,1.174,947,1.174,955,2.44,987,1.083,1003,1.056,1035,1.297,1046,1.141,1049,1.083,1102,1.297,1122,1.483,1125,1.174,1154,1.483,1169,5.458,1170,3.767,1171,1.483,1172,1.21,1173,1.483,1174,3.963,1175,1.483,1176,2.544,1177,1.483,1178,1.483,1179,2.544,1180,2.544,1181,2.314,1182,1.483,1183,2.544,1184,1.483,1185,1.483,1186,1.483,1187,1.483,1188,2.544,1189,1.251,1190,1.083,1191,1.483,1192,1.483,1193,1.483,1194,1.483,1195,3.342,1200,1.483,1274,2.147,1276,1.409,1410,1.21,1413,1.349,1491,1.409,1556,1.483,1589,2.314,1653,2.147,1656,3.901,1660,1.409,1673,1.574,1726,5.662,1727,6.142,1757,1.409,1767,1.697,1779,4.24,1783,4.535,1799,2.911,1802,3.23,1803,1.882,1804,1.882,1805,1.882,1806,4.243,1807,7.562,1808,7.537,1809,1.882,1810,1.882,1811,1.697,1812,1.882,1813,5.663,1814,1.882,1815,3.23,1816,1.882,1817,4.243,1818,4.243,1819,3.824,1820,3.23,1821,1.882,1822,4.243,1823,4.243,1824,1.882,1825,1.882,1826,1.882,1827,3.23,1828,2.544,1829,1.574,1830,1.882,1831,1.882,1832,1.882,1833,1.882,1834,1.882,1835,1.882,1836,1.882,1837,1.882,1838,1.882,1839,1.882,1840,1.882,1841,1.882,1842,1.882,1843,1.882,1844,1.697,1845,1.697,1846,1.697,1847,1.882,1848,1.882,1849,1.882,1850,1.882,1851,1.409,1852,1.882,1853,1.882,1854,3.23,1855,1.882,1856,1.882,1857,1.882,1858,1.882,1859,1.882,1860,1.882,1861,1.882]],["component/40",[633,0.749,665,0.749]],["keyword/40",[]],["title/41-1",[1653,47.014]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["keyword/41-1",[]],["title/41-2",[145,28.896,607,21.797,638,23.587,665,18.758]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["keyword/41-2",[]],["title/41-3",[26,18.308,54,16.972,987,29.42]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["keyword/41-3",[]],["title/41-4",[633,18.758,987,25.842,1654,37.575,1655,37.575]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["keyword/41-4",[]],["title/41-5",[260,22.746,396,25.781,1862,51.161]],["name/41-5",[]],["text/41-5",[]],["component/41-5",[]],["keyword/41-5",[]],["title/41-6",[1863,63.759]],["name/41-6",[]],["text/41-6",[]],["component/41-6",[]],["keyword/41-6",[]],["title/41-7",[294,44.123]],["name/41-7",[]],["text/41-7",[]],["component/41-7",[]],["keyword/41-7",[]],["title/41-8",[343,33.694]],["name/41-8",[]],["text/41-8",[]],["component/41-8",[]],["keyword/41-8",[]],["title/41-9",[46,16.366,1656,35.236,1779,38.304]],["name/41-9",[]],["text/41-9",[]],["component/41-9",[]],["keyword/41-9",[]],["title/41-10",[659,26.302,1656,35.236,1726,38.304]],["name/41-10",[]],["text/41-10",[]],["component/41-10",[]],["keyword/41-10",[]],["title/41-11",[659,26.302,1656,35.236,1829,42.777]],["name/41-11",[]],["text/41-11",[]],["component/41-11",[]],["keyword/41-11",[]],["title/41-12",[393,25.763,659,20.599,1656,27.595,1779,29.999,1864,36.109]],["name/41-12",[]],["text/41-12",[]],["component/41-12",[]],["keyword/41-12",[]],["title/41-13",[507,21.024,1865,40.499,1866,40.499,1867,44.939]],["name/41-13",[]],["text/41-13",[]],["component/41-13",[]],["keyword/41-13",[]],["title/41-14",[582,41.737]],["name/41-14",[]],["text/41-14",[]],["component/41-14",[]],["keyword/41-14",[]],["title/41",[665,24.786,1653,39.46]],["name/41",[665,0.658,1653,1.047]],["text/41",[1,1.342,2,0.595,6,0.404,7,0.338,14,1.463,16,1.444,17,1.276,21,0.371,25,0.667,26,1.962,27,0.366,28,0.404,29,2.451,31,1.363,32,1.113,33,0.417,34,1.006,38,0.479,40,1.303,41,0.674,42,0.623,43,1.086,44,0.431,45,0.604,46,1.553,47,2.344,49,0.644,50,0.667,51,1.606,52,1.204,57,1.09,62,0.794,63,0.667,67,1.382,70,1.741,72,2.041,74,0.347,80,2.324,81,2.608,83,1.232,85,0.781,86,0.453,87,0.604,88,1.604,89,1.732,90,2.558,91,0.979,92,0.544,95,0.899,96,0.519,99,2.402,102,2.232,105,4.108,107,2.255,108,0.557,112,1.021,116,3.261,117,2.439,118,0.835,122,1.633,124,0.438,126,3.451,127,1.419,132,1.818,133,0.768,134,2.198,135,2.271,138,0.438,140,0.768,141,1.555,142,1.104,143,0.417,145,4.482,148,0.479,156,0.957,162,1.104,163,1.444,165,1.021,166,0.763,167,0.734,168,0.587,171,0.498,172,1.555,173,0.479,175,1.214,177,1.204,179,3.777,182,0.979,188,0.725,190,1.113,191,0.667,192,1.485,193,3.052,197,1.021,199,2.439,200,0.644,201,0.644,203,0.438,204,0.404,205,0.445,207,0.47,208,2.271,213,1.465,214,0.763,218,1.404,220,0.431,221,2.871,226,1.336,229,0.519,234,2.289,244,1.525,249,1.204,250,0.445,252,2.268,253,0.781,256,1.227,260,1.606,261,1.204,262,1.186,266,0.757,267,0.498,268,3.571,269,0.508,270,0.488,274,0.531,275,0.453,276,1.633,277,0.745,279,0.937,280,1.655,281,2.125,282,0.763,283,1.774,290,0.604,294,4.442,296,0.557,297,0.807,302,1.229,304,0.835,305,0.438,318,1.58,320,1.036,323,0.644,324,0.438,333,1.036,336,1.497,339,2.399,343,0.461,347,1.276,349,0.768,351,1.232,354,1.71,356,0.508,368,1.651,376,1.002,377,0.623,380,1.873,393,0.623,396,0.899,403,1.053,404,0.488,408,0.431,410,0.544,412,0.807,418,2.095,422,0.431,424,0.461,425,1.555,430,2.725,433,1.937,434,0.461,435,0.623,438,1.858,457,2.488,461,3.392,470,1.984,473,0.604,493,1.393,496,2.189,497,1.65,501,1.331,507,1.69,511,0.667,516,0.694,522,1.497,530,3.445,537,1.053,552,1.303,562,0.47,563,0.763,564,0.453,575,1.774,583,0.571,593,1.65,594,1.251,603,0.763,605,1.497,607,3.811,633,3.88,638,3.658,641,0.587,650,0.725,653,0.918,657,1.361,658,0.544,659,2.496,661,1.002,665,3.743,671,0.763,675,1.859,679,0.763,688,0.604,689,0.508,690,1.596,692,0.694,695,1.955,699,1.548,721,1.596,725,1.002,734,0.667,738,0.544,745,0.508,749,1.082,751,0.763,764,0.725,771,0.557,782,1.082,783,0.544,784,0.544,785,2.807,788,0.763,791,0.957,798,0.644,801,2.218,802,3.142,809,0.725,826,4.138,854,0.587,857,2.31,866,0.725,880,0.604,884,0.587,905,1.186,907,0.725,909,1.148,913,0.644,922,0.763,926,0.667,927,1.186,937,0.763,954,1.002,974,0.667,987,2.792,1000,0.694,1003,1.002,1010,1.229,1011,0.667,1020,0.763,1030,0.623,1050,1.955,1053,0.763,1070,1.113,1071,0.763,1099,0.694,1108,3.122,1115,0.667,1121,0.667,1127,0.725,1148,1.596,1162,0.763,1207,2.051,1213,0.667,1259,0.763,1260,3.823,1270,2.542,1274,0.644,1276,0.725,1356,1.984,1386,1.229,1388,0.763,1400,1.082,1410,0.623,1448,0.763,1461,3.823,1469,1.148,1470,0.694,1471,0.763,1472,2.237,1490,0.725,1502,0.763,1510,0.763,1512,1.229,1519,2.588,1530,0.763,1544,0.644,1546,0.81,1547,2.43,1556,0.763,1574,0.81,1583,1.492,1653,4.404,1654,2.076,1655,4.059,1656,4.687,1666,0.873,1668,0.873,1673,0.81,1676,0.873,1677,1.492,1690,0.873,1693,3.255,1698,0.873,1700,0.873,1705,0.873,1717,0.873,1718,0.873,1723,0.873,1726,4.818,1727,5.219,1729,0.81,1731,1.609,1734,0.873,1738,1.609,1752,0.873,1764,0.873,1765,0.873,1770,2.237,1779,5.805,1787,4.059,1801,0.873,1808,5.186,1811,1.609,1819,1.609,1828,2.43,1829,3.02,1844,2.237,1845,1.609,1846,1.609,1851,1.336,1863,4.375,1864,1.609,1865,0.873,1868,0.968,1869,1.785,1870,1.785,1871,0.968,1872,1.785,1873,1.785,1874,0.968,1875,0.968,1876,0.968,1877,0.968,1878,0.968,1879,2.483,1880,2.483,1881,0.968,1882,2.483,1883,1.785,1884,0.968,1885,0.968,1886,0.968,1887,0.81,1888,0.968,1889,0.873,1890,0.968,1891,0.968,1892,0.968,1893,1.785,1894,0.968,1895,0.968,1896,0.968,1897,4.076,1898,4.076,1899,3.612,1900,3.612,1901,1.785,1902,1.785,1903,0.968,1904,1.785,1905,0.968,1906,0.968,1907,0.968,1908,0.968,1909,4.076,1910,0.968,1911,1.785,1912,2.483,1913,0.968,1914,0.968,1915,4.076,1916,0.968,1917,0.968,1918,0.968,1919,1.785,1920,0.968,1921,0.968,1922,0.968,1923,0.968,1924,0.968,1925,1.609,1926,1.785,1927,3.086,1928,0.968,1929,0.968,1930,0.968,1931,0.968,1932,3.612,1933,0.968,1934,2.483,1935,0.968,1936,2.483,1937,2.483,1938,0.968,1939,0.968,1940,0.968,1941,0.968,1942,0.968,1943,0.968,1944,0.968,1945,0.968,1946,0.968,1947,0.968,1948,0.968,1949,1.609,1950,1.785,1951,4.487,1952,0.968,1953,0.968,1954,1.785,1955,3.086,1956,1.785,1957,1.785,1958,1.785,1959,1.785,1960,1.785,1961,0.968,1962,0.968,1963,0.968,1964,0.968,1965,0.968,1966,0.968,1967,0.968,1968,0.968,1969,0.968,1970,0.873,1971,0.968,1972,0.968,1973,0.968,1974,0.968,1975,0.968,1976,0.968,1977,0.968,1978,0.968,1979,0.968,1980,0.968,1981,0.968,1982,0.968,1983,0.873,1984,0.968,1985,0.968,1986,0.968,1987,0.968,1988,0.968,1989,2.483,1990,0.968,1991,0.968,1992,0.968,1993,0.968,1994,0.968,1995,0.968,1996,0.873,1997,1.785,1998,1.785,1999,0.873,2000,1.785,2001,4.076,2002,1.785,2003,0.968,2004,1.609,2005,0.968,2006,0.968,2007,1.785,2008,0.968,2009,0.968,2010,0.968,2011,0.968,2012,0.968,2013,0.968,2014,0.968,2015,0.968,2016,0.968]],["component/41",[633,0.749,665,0.749]],["keyword/41",[]],["title/42",[0,7.337,1,10.996,219,15.672,2017,23.104]],["name/42",[3,1.272]],["text/42",[0,1.117,4,4.545,5,4.265,6,3.566,7,2.979,8,5.12,9,5.12,10,5.12,11,5.12,12,5.12,13,5.12,14,3.461,16,3.199,17,2.416,18,4.71,19,3.516,25,4.71,27,2.581,28,2.855,30,3.041,31,3.516,32,5.327,33,2.944,34,2.771,35,5.386,41,3.224,42,4.397,43,2.992,44,3.041,45,4.265,46,2.188,47,3.091,48,4.265,49,4.545,50,4.71,51,3.041,52,4.143,219,2.979,413,3.446,585,3.838,1651,7.698,1659,4.397,2017,3.516,2018,8.542,2019,6.163]],["component/42",[219,0.626,2017,0.923]],["keyword/42",[]],["title/43-1",[1652,46.764,2020,44.459]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["keyword/43-1",[]],["title/43-2",[54,19.699,83,23.709]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["keyword/43-2",[]],["title/43-3",[17,18.072,2020,38.304,2021,36.652]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["keyword/43-3",[]],["title/43-4",[135,23.935,754,29.42,2022,38.304]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["keyword/43-4",[]],["title/43-5",[0,8.353,219,17.842,2023,38.304]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["keyword/43-5",[]],["title/43",[52,21.797,85,19.658,438,17.197,2020,33.647]],["name/43",[1258,1.18,2020,1.18]],["text/43",[0,0.361,1,0.541,6,1.545,14,0.895,17,2.196,23,2.077,26,2.681,27,1.397,28,0.922,30,2.123,31,0.834,34,0.895,36,0.951,41,0.834,43,0.967,44,0.983,46,1.527,47,1.673,51,0.983,52,4.183,53,1.655,54,0.733,57,0.781,58,1.339,67,0.846,68,1.24,70,2.772,72,2.647,74,2.787,75,0.674,76,1.324,78,3.575,81,2.647,83,3.109,85,0.967,88,3.165,89,2.68,90,0.983,94,0.951,99,1.545,100,2.771,102,1.593,105,3.933,107,2.296,112,2.296,116,2.263,117,0.937,118,1.034,122,0.999,124,0.999,132,2.519,133,0.951,135,1.731,140,0.951,156,1.185,165,0.909,172,0.951,173,1.092,175,1.457,176,1.304,177,1.795,192,1.963,197,1.522,199,0.937,203,1.673,204,1.545,205,1.702,206,1.034,217,4.181,218,2.141,219,2.613,220,1.645,221,1.853,229,1.985,234,2.595,249,1.795,252,0.967,255,1.24,263,1.522,267,1.903,277,1.545,289,3.062,297,0.999,318,1.619,320,2.331,343,1.052,347,1.903,349,0.951,351,2.483,356,1.16,357,1.421,368,1.934,375,1.522,380,1.545,387,2.811,388,2.263,401,1.136,403,1.304,408,1.645,410,1.24,413,1.865,418,2.455,420,3.07,424,1.763,425,0.951,426,2.243,434,2.274,438,0.846,443,1.072,461,1.763,463,3.6,465,1.24,470,1.421,523,4.419,527,3.134,536,1.469,562,3.634,564,1.034,585,1.24,602,1.522,605,1.072,626,1.865,627,1.339,629,4.244,657,1.212,677,3.575,683,1.74,690,1.421,699,2.308,738,2.68,747,1.74,754,2.746,764,1.655,771,3.211,777,1.339,782,2.243,787,3.711,801,2.76,802,2.894,830,1.655,844,1.339,856,1.421,865,3.07,877,1.74,880,1.378,882,1.522,899,1.74,905,1.469,909,1.421,940,3.711,955,1.271,968,4.719,1127,1.655,1128,1.74,1133,1.655,1136,1.469,1147,3.421,1148,1.421,1156,1.469,1163,3.421,1169,2.771,1170,3.575,1181,1.583,1190,1.271,1202,1.655,1203,1.655,1219,1.339,1220,4.47,1229,1.469,1258,4.181,1274,5.489,1351,4.454,1364,1.522,1368,1.655,1413,1.583,1432,1.74,1469,1.421,1597,1.655,1658,1.848,1659,3.07,1660,1.655,1757,1.655,1828,1.74,1851,2.771,1887,1.848,1889,1.992,1970,1.992,1983,1.992,1999,1.992,2004,1.992,2017,3.672,2019,1.992,2020,6.329,2021,4.001,2022,1.655,2023,6.02,2024,2.21,2025,2.21,2026,2.21,2027,2.21,2028,2.21,2029,2.21,2030,2.21,2031,2.21,2032,1.848,2033,1.848,2034,3.335,2035,3.701,2036,1.992,2037,2.21,2038,2.21,2039,1.992,2040,6.726,2041,1.992,2042,1.992,2043,1.992,2044,3.094,2045,1.992,2046,1.992,2047,1.848,2048,2.21,2049,2.21,2050,2.21,2051,2.21,2052,2.21,2053,2.21,2054,2.21,2055,3.701,2056,2.21,2057,2.21,2058,1.992,2059,2.21,2060,2.21,2061,2.21,2062,2.21,2063,1.992,2064,2.21,2065,3.335,2066,2.21,2067,2.21,2068,2.21,2069,2.21,2070,2.21,2071,2.21,2072,2.21,2073,5.585,2074,2.21,2075,2.21,2076,2.21,2077,6.061,2078,5.585,2079,3.701,2080,3.701,2081,2.21,2082,2.21,2083,2.21]],["component/43",[219,0.626,2017,0.923]],["keyword/43",[]],["title/44-1",[219,17.842,1652,40.29,2017,26.302]],["name/44-1",[]],["text/44-1",[]],["component/44-1",[]],["keyword/44-1",[]],["title/44-2",[54,19.699,83,23.709]],["name/44-2",[]],["text/44-2",[]],["component/44-2",[]],["keyword/44-2",[]],["title/44-3",[17,18.072,85,22.38,2021,36.652]],["name/44-3",[]],["text/44-3",[]],["component/44-3",[]],["keyword/44-3",[]],["title/44-4",[267,30.528,343,28.28]],["name/44-4",[]],["text/44-4",[]],["component/44-4",[]],["keyword/44-4",[]],["title/44",[219,17.842,273,26.852,2017,26.302]],["name/44",[156,0.845,452,1.085]],["text/44",[0,0.958,1,1.435,16,1.394,17,3.06,19,2.428,21,1.14,27,1.125,28,1.244,38,1.473,40,1.564,47,3.289,49,1.98,54,0.989,57,2.358,67,2.784,70,1.156,72,1.859,81,1.859,83,3.824,88,2.309,105,4.249,107,1.942,112,1.942,114,1.806,116,2.948,117,2.002,118,2.744,122,2.135,127,2.171,132,2.704,133,1.283,141,1.283,167,2.412,172,1.283,176,1.758,177,1.445,178,1.634,184,3.146,192,1.942,194,2.291,195,1.532,197,1.942,203,2.135,204,1.244,205,2.171,206,1.394,210,1.714,218,2.02,219,3.455,221,1.156,226,2.231,234,1.244,252,1.304,253,2.066,255,1.672,264,4.344,266,2.486,273,1.564,274,1.634,285,2.231,289,1.634,318,2.566,320,1.244,333,1.244,349,2.033,351,2.342,368,2.948,387,1.347,388,1.207,404,2.38,405,1.672,408,2.1,412,2.135,413,4.642,418,3.016,420,1.916,425,2.873,438,1.14,443,1.445,449,2.171,454,1.806,463,4.366,474,2.479,522,2.291,523,3.937,562,3.237,564,3.122,583,1.758,596,1.98,610,2.347,626,2.38,629,2.794,633,1.971,677,1.714,692,3.383,704,1.98,787,3.138,792,2.862,801,1.473,802,2.862,826,1.916,842,2.945,844,1.806,865,1.916,955,1.714,968,1.806,969,2.428,981,2.231,1014,1.858,1046,1.806,1147,2.135,1163,3.383,1181,2.135,1202,3.536,1220,3.138,1234,1.98,1274,3.898,1351,4.203,1376,2.135,1379,2.231,1491,2.231,1544,1.98,1597,2.231,1659,4.678,1674,4.256,1787,2.492,1851,2.231,1866,2.686,1887,2.492,1925,2.686,1996,2.686,2017,5.017,2021,6.027,2022,2.231,2023,2.231,2032,2.492,2033,2.492,2036,2.686,2039,2.686,2041,2.686,2044,5.581,2045,4.256,2047,2.492,2084,2.98,2085,4.723,2086,2.98,2087,2.98,2088,2.98,2089,2.98,2090,2.98,2091,2.98,2092,2.98,2093,2.98,2094,4.723,2095,2.98,2096,4.723,2097,2.98,2098,2.98,2099,2.98,2100,2.98,2101,4.723,2102,2.98,2103,2.98,2104,2.98,2105,2.98,2106,2.98,2107,2.98,2108,2.98,2109,2.98,2110,2.98,2111,2.98]],["component/44",[219,0.626,2017,0.923]],["keyword/44",[]],["title/45",[132,18.206,219,15.672,287,18.758,2017,23.104]],["name/45",[3,1.272]],["text/45",[16,3.592,17,3.586,52,4.447,83,3.66,85,3.358,91,4.21,219,3.418,287,3.205,307,4.653,320,3.205,368,3.11,388,3.11,413,3.869,438,2.938,856,4.937,1659,4.937,2017,4.713,2022,5.748,2023,5.748,2112,7.677]],["component/45",[219,0.626,2017,0.923]],["keyword/45",[]],["title/46",[7,20.709,30,26.401]],["name/46",[3,1.272]],["text/46",[7,2.75,16,3.689,19,4.053,28,3.291,30,4.141,34,3.194,41,2.976,75,2.406,142,3.505,219,2.75,380,3.291,387,3.564,388,3.773,389,5.43,393,5.07,395,4.534,396,3.973,413,3.973,1659,5.07,2017,4.053]],["component/46",[219,0.626,2017,0.923]],["keyword/46",[]],["title/47-1",[54,19.699,83,23.709]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["keyword/47-1",[]],["title/47-2",[54,14.908,219,15.672,2017,23.104,2021,32.195]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["keyword/47-2",[]],["title/47-3",[43,25.975,759,33.326]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["keyword/47-3",[]],["title/47-4",[317,26.852,425,22.026,760,28.713]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["keyword/47-4",[]],["title/47-5",[0,9.695,77,29.924]],["name/47-5",[]],["text/47-5",[]],["component/47-5",[]],["keyword/47-5",[]],["title/47-6",[55,16.724,83,15.997,206,18.745,221,15.548,541,29.999]],["name/47-6",[]],["text/47-6",[]],["component/47-6",[]],["keyword/47-6",[]],["title/47-7",[55,13.744,206,15.405,219,11.483,221,12.777,413,16.593,1659,21.172,2017,16.928]],["name/47-7",[]],["text/47-7",[]],["component/47-7",[]],["keyword/47-7",[]],["title/47-8",[126,25.842,165,18.478,221,17.439,1130,33.647]],["name/47-8",[]],["text/47-8",[]],["component/47-8",[]],["keyword/47-8",[]],["title/47-9",[0,8.353,221,19.853,425,22.026]],["name/47-9",[]],["text/47-9",[]],["component/47-9",[]],["keyword/47-9",[]],["title/47",[30,22.746,1216,29.42,1217,29.42]],["name/47",[835,0.689,969,0.81]],["text/47",[0,1.255,1,1.314,2,1.286,7,1.226,17,2.052,21,1.345,26,0.935,29,0.581,30,1.563,31,2.46,34,2.175,36,0.635,37,0.92,38,0.729,41,1.327,43,1.143,46,0.836,47,0.667,53,1.105,55,2.241,57,1.241,58,0.894,62,1.161,64,1.125,67,2.792,68,0.828,69,1.201,70,1.885,72,2.953,73,1.721,74,2.332,75,0.797,76,0.528,78,2.443,80,2.276,81,3.093,82,0.656,83,2.996,86,0.69,88,2.113,89,1.466,94,1.513,99,2.027,102,2.091,105,4.176,107,1.445,112,2.388,114,0.894,116,2.64,118,1.644,120,0.87,122,1.92,124,0.667,126,3.557,127,1.201,130,1.107,132,2.64,133,1.125,134,1.107,136,2.944,142,0.656,143,0.635,165,0.607,171,0.759,172,2.091,174,0.667,175,0.581,192,0.607,195,1.343,197,1.445,199,2.276,200,0.98,201,0.98,203,1.589,204,1.09,206,2.272,208,0.69,213,1.541,215,0.645,217,3.637,218,2.13,219,2.932,221,2.401,224,0.98,229,0.791,231,2.384,234,1.773,238,1.885,244,0.729,249,0.716,250,0.678,260,1.563,261,0.716,263,2.926,267,3.751,274,0.809,276,1.181,277,0.616,289,3.185,295,0.791,297,0.667,305,0.667,316,0.92,317,1.371,318,1.143,320,2.582,323,0.98,333,1.467,335,1.583,343,0.703,344,0.716,347,1.343,349,1.513,351,2.144,353,0.645,357,0.949,368,1.058,369,0.729,370,1.016,377,1.68,379,0.894,381,0.894,388,1.424,401,0.759,403,0.87,404,1.771,412,0.667,413,2.448,418,1.807,420,2.26,425,2.5,434,0.703,438,1.345,443,1.267,444,0.743,448,1.016,449,0.678,454,0.894,456,1.162,461,2.023,463,3.56,465,0.828,474,1.371,475,1.629,481,0.92,493,0.828,496,1.583,507,0.69,522,1.705,523,2.506,527,3.014,537,0.87,538,1.016,541,4.348,552,0.774,562,3.73,564,1.222,571,3.104,573,0.774,574,0.809,575,0.848,584,0.809,597,0.92,599,1.502,608,0.98,626,1.771,627,0.894,629,3.365,633,3.598,637,1.291,638,1.371,644,2.33,657,0.809,661,0.828,677,1.502,699,2.192,700,0.828,704,1.736,725,0.828,737,0.894,745,0.774,749,0.894,752,1.016,754,1.502,759,3.26,760,1.466,767,0.828,782,0.894,792,1.583,795,2.335,801,1.291,826,0.949,827,1.016,828,0.809,830,1.105,835,1.143,836,3.123,851,1.016,853,1.629,865,2.26,874,4.348,879,1.016,880,1.629,884,0.894,906,1.016,916,1.016,936,2.057,940,3.228,943,1.799,944,1.016,954,1.972,955,3.34,968,2.13,969,0.759,981,1.105,1002,1.057,1014,0.92,1045,1.162,1067,1.016,1070,2.192,1109,0.949,1117,1.162,1130,2.631,1137,1.162,1147,1.871,1153,0.848,1156,2.335,1163,2.518,1189,0.98,1208,1.057,1214,0.92,1219,0.894,1220,1.736,1225,1.799,1229,3.859,1232,1.016,1245,3.345,1248,1.105,1268,1.105,1269,1.162,1270,1.629,1271,1.162,1274,3.228,1278,2.768,1288,1.162,1297,1.162,1298,1.162,1299,1.162,1300,2.057,1301,1.162,1351,1.871,1356,3.735,1361,1.162,1365,2.057,1368,1.105,1376,1.057,1377,1.162,1378,1.105,1379,1.956,1380,1.162,1411,2.057,1412,1.105,1413,1.057,1414,2.057,1415,2.057,1416,2.057,1417,1.162,1418,1.057,1419,1.162,1420,2.057,1421,1.162,1422,1.162,1423,1.162,1424,1.105,1425,1.105,1426,1.162,1427,1.162,1428,1.162,1429,4.574,1437,1.162,1452,3.346,1453,1.162,1454,2.057,1469,0.949,1476,1.162,1477,1.799,1478,1.016,1479,1.162,1480,3.825,1481,1.162,1512,1.016,1589,1.057,1597,2.631,1659,4.19,1660,1.105,1757,1.105,1798,1.33,1828,1.162,1851,1.956,1949,1.33,2017,4.432,2021,1.871,2022,2.631,2023,1.105,2032,1.234,2033,1.234,2034,1.33,2042,1.33,2043,2.354,2044,2.939,2046,1.33,2047,1.234,2058,1.33,2063,2.354,2065,1.33,2077,1.33,2113,6.186,2114,4.248,2115,2.612,2116,2.612,2117,2.612,2118,1.475,2119,1.475,2120,1.475,2121,1.475,2122,1.475,2123,1.475,2124,2.612,2125,3.514,2126,3.514,2127,2.612,2128,1.475,2129,1.475,2130,1.475,2131,1.475,2132,1.475,2133,1.475,2134,4.248,2135,1.475,2136,1.475,2137,1.475,2138,1.475,2139,1.475,2140,1.475,2141,1.475,2142,1.475,2143,4.857,2144,1.475,2145,1.475,2146,1.475,2147,1.475,2148,1.475,2149,1.475]],["component/47",[219,0.626,2017,0.923]],["keyword/47",[]]],"invertedIndex":[["",{"_index":105,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["0",{"_index":1050,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"41":{}},"component":{},"keyword":{}}],["0.0.0.0:8080",{"_index":589,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["0.22",{"_index":2018,"title":{},"name":{},"text":{"42":{}},"component":{},"keyword":{}}],["0.22.0",{"_index":1650,"title":{},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["0.22.2",{"_index":15,"title":{},"name":{},"text":{"1":{}},"component":{},"keyword":{}}],["0.24.0",{"_index":1545,"title":{},"name":{},"text":{"13":{}},"component":{},"keyword":{}}],["0.25.0",{"_index":1649,"title":{},"name":{},"text":{"25":{}},"component":{},"keyword":{}}],["01",{"_index":976,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["04120",{"_index":363,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["1",{"_index":81,"title":{"12-1":{},"24-1":{},"36-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["1.0",{"_index":1596,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["1.0.0",{"_index":1286,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["1.modif",{"_index":1381,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["10",{"_index":270,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"41":{}},"component":{},"keyword":{}}],["100",{"_index":848,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["1000",{"_index":1943,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["1014",{"_index":994,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["11",{"_index":298,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{}},"component":{},"keyword":{}}],["12",{"_index":342,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"36":{}},"component":{},"keyword":{}}],["13",{"_index":371,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"11":{},"14":{},"16":{},"17":{},"18":{},"23":{},"26":{},"28":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["13.0.0",{"_index":1363,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["14",{"_index":372,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"14":{},"16":{},"18":{},"23":{},"26":{},"29":{},"30":{},"35":{}},"component":{},"keyword":{}}],["15",{"_index":374,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"23":{},"26":{},"30":{},"35":{}},"component":{},"keyword":{}}],["16",{"_index":375,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{},"43":{}},"component":{},"keyword":{}}],["168h",{"_index":1498,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["17",{"_index":378,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"16":{},"17":{},"18":{},"26":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["17.0.10",{"_index":975,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["17.0.10+7",{"_index":978,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["171m",{"_index":248,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["18",{"_index":383,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{}},"component":{},"keyword":{}}],["18.04",{"_index":1847,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["19",{"_index":384,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["19:24",{"_index":1052,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["2",{"_index":72,"title":{"12-2":{},"24-2":{},"36-2":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["2.5.1",{"_index":1459,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["20",{"_index":246,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["2018",{"_index":1444,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["2022",{"_index":555,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["2022/petclinic:1.0",{"_index":613,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["2024",{"_index":150,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"17":{},"18":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["2024/dock",{"_index":1603,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["2024_artifact",{"_index":1624,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["21",{"_index":1007,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["21.0.2",{"_index":1034,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["21.0.2+13",{"_index":1036,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["24",{"_index":385,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["27.5.1",{"_index":1295,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["2>&1",{"_index":953,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["3",{"_index":112,"title":{"12-3":{},"24-3":{},"36-3":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["3.2.5",{"_index":1645,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["3.9",{"_index":1012,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["3.9.6",{"_index":983,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["30",{"_index":1960,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["3000",{"_index":1232,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["30000",{"_index":1956,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["3000:3000",{"_index":1239,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["3306:3306",{"_index":816,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["3ed683cccecd",{"_index":1601,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["3º",{"_index":1150,"title":{},"name":{},"text":{"7":{},"19":{},"31":{}},"component":{},"keyword":{}}],["4",{"_index":107,"title":{"12-4":{},"24-4":{},"36-4":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["4.0.0",{"_index":1458,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["4.17.3",{"_index":1293,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["40",{"_index":849,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["403",{"_index":288,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["4096",{"_index":1089,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["5",{"_index":197,"title":{"12-5":{},"24-5":{},"36-5":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["5.1.3",{"_index":1644,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["5.18.0",{"_index":154,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["50",{"_index":1525,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["50000:50000",{"_index":1197,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["56",{"_index":1604,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["5mb",{"_index":1573,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["6",{"_index":203,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["6.2.2",{"_index":1296,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["6.5.0",{"_index":993,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["60.0",{"_index":1560,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["64",{"_index":979,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["666",{"_index":1033,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["6e174d959f3b",{"_index":611,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["7",{"_index":205,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["744547@ual.esualkk000@ual.",{"_index":2003,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["755",{"_index":1043,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["777",{"_index":1196,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["8",{"_index":207,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["8.10.0",{"_index":1456,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["8.5.0",{"_index":1457,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["8.57.0",{"_index":1642,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["80",{"_index":600,"title":{},"name":{},"text":{"4":{},"5":{},"8":{},"10":{},"16":{},"17":{},"20":{},"22":{},"28":{},"29":{},"32":{},"34":{}},"component":{},"keyword":{}}],["8080",{"_index":479,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"11":{},"16":{},"17":{},"20":{},"22":{},"23":{},"28":{},"29":{},"32":{},"34":{},"35":{}},"component":{},"keyword":{}}],["8080/tcp",{"_index":1606,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["8080:3000",{"_index":1246,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["8080:8080",{"_index":519,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["8081",{"_index":1617,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["80:8080",{"_index":601,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{}},"component":{},"keyword":{}}],["824",{"_index":1978,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["9",{"_index":256,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"39":{},"41":{}},"component":{},"keyword":{}}],["9.1.0",{"_index":1643,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["_json_key",{"_index":549,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["abc123",{"_index":170,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"12":{},"14":{},"17":{},"20":{},"22":{},"24":{},"26":{},"28":{},"32":{},"34":{},"36":{}},"component":{},"keyword":{}}],["abiert",{"_index":766,"title":{},"name":{},"text":{"5":{},"10":{},"16":{},"22":{},"29":{},"34":{}},"component":{},"keyword":{}}],["abr",{"_index":1400,"title":{},"name":{},"text":{"11":{},"12":{},"16":{},"17":{},"23":{},"24":{},"28":{},"29":{},"35":{},"36":{},"41":{}},"component":{},"keyword":{}}],["abriend",{"_index":1623,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["abrir",{"_index":1030,"title":{},"name":{},"text":{"6":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{},"39":{},"41":{}},"component":{},"keyword":{}}],["abrirl",{"_index":2149,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["absolut",{"_index":1164,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["abstraccion",{"_index":1283,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["ac",{"_index":195,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"11":{},"12":{},"14":{},"16":{},"17":{},"23":{},"24":{},"26":{},"28":{},"29":{},"35":{},"36":{},"38":{},"44":{},"47":{}},"component":{},"keyword":{}}],["acab",{"_index":365,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"38":{}},"component":{},"keyword":{}}],["acarr",{"_index":999,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["acc",{"_index":44,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"13":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"25":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"38":{},"40":{},"41":{},"42":{},"43":{}},"component":{},"keyword":{}}],["accd",{"_index":529,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["accion",{"_index":699,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"39":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["account",{"_index":539,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["acel",{"_index":1785,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["acept",{"_index":1211,"title":{"37":{}},"name":{},"text":{"8":{},"12":{},"16":{},"20":{},"24":{},"29":{},"32":{},"36":{},"37":{},"38":{},"39":{}},"component":{},"keyword":{}}],["aclar",{"_index":1146,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["action",{"_index":2017,"title":{"42":{},"44":{},"45":{},"44-1":{},"47-2":{},"47-7":{}},"name":{},"text":{"42":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"component":{"42":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"keyword":{}}],["action@1.2.0",{"_index":2129,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["action@v1",{"_index":2122,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["action@v2",{"_index":2136,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["action@v4.2.5",{"_index":2080,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["actions/checkout@v2",{"_index":2047,"title":{},"name":{},"text":{"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["actions/upl",{"_index":2063,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["activ",{"_index":33,"title":{"17-3":{},"28-3":{}},"name":{},"text":{"1":{},"2":{},"4":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"17":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{}},"component":{},"keyword":{}}],["actual",{"_index":473,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"17":{},"22":{},"24":{},"28":{},"34":{},"36":{},"41":{}},"component":{},"keyword":{}}],["actualiz",{"_index":280,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"11":{},"14":{},"17":{},"20":{},"22":{},"23":{},"26":{},"28":{},"32":{},"34":{},"35":{},"41":{}},"component":{},"keyword":{}}],["ad",{"_index":2140,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["adapt",{"_index":749,"title":{"38-9":{}},"name":{},"text":{"4":{},"5":{},"11":{},"17":{},"23":{},"28":{},"35":{},"38":{},"41":{},"47":{}},"component":{},"keyword":{}}],["add",{"_index":677,"title":{},"name":{},"text":{"4":{},"8":{},"11":{},"17":{},"20":{},"23":{},"28":{},"32":{},"35":{},"40":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["address",{"_index":591,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{}},"component":{},"keyword":{}}],["address\")).cl",{"_index":2005,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["address\")).sendkeys(\"ualkk000@ual.",{"_index":2002,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["address\")).sendkeys(keys.chord(keys.control,\"",{"_index":2007,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["address\")).sendkeys(keys.chord(keys.delet",{"_index":2009,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["address\").validationmessag",{"_index":1704,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["adecu",{"_index":336,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"11":{},"14":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"30":{},"32":{},"34":{},"35":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["adel",{"_index":1115,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{},"41":{}},"component":{},"keyword":{}}],["adema",{"_index":349,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"7":{},"8":{},"10":{},"12":{},"14":{},"16":{},"18":{},"19":{},"20":{},"22":{},"24":{},"26":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["adicion",{"_index":1153,"title":{"8-5":{},"20-5":{},"32-5":{}},"name":{},"text":{"8":{},"11":{},"12":{},"20":{},"23":{},"24":{},"32":{},"35":{},"36":{},"47":{}},"component":{},"keyword":{}}],["administr",{"_index":181,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"12":{},"14":{},"17":{},"18":{},"20":{},"24":{},"26":{},"28":{},"30":{},"32":{},"36":{}},"component":{},"keyword":{}}],["admisnitr",{"_index":535,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["adoptium",{"_index":988,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["adquir",{"_index":366,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["ag",{"_index":579,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{}},"component":{},"keyword":{}}],["again",{"_index":1524,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["against",{"_index":669,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["agent",{"_index":618,"title":{"6-5":{},"6-6":{},"18-5":{},"18-6":{},"30-5":{},"30-6":{}},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["ago",{"_index":614,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["agot",{"_index":236,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["agrand",{"_index":1975,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["agreg",{"_index":202,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["agrup",{"_index":1771,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["ahi",{"_index":1811,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["ahor",{"_index":305,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"41":{},"47":{}},"component":{},"keyword":{}}],["ahorrart",{"_index":933,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["ajust",{"_index":1743,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["aleatori",{"_index":1686,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["algun",{"_index":259,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"10":{},"12":{},"14":{},"16":{},"17":{},"22":{},"24":{},"26":{},"28":{},"29":{},"34":{},"36":{},"38":{},"39":{}},"component":{},"keyword":{}}],["allocat",{"_index":1616,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["allow",{"_index":1064,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["allowmiss",{"_index":1387,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["almacen",{"_index":536,"title":{},"name":{},"text":{"4":{},"6":{},"17":{},"18":{},"28":{},"30":{},"38":{},"43":{}},"component":{},"keyword":{}}],["almer",{"_index":359,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["aloj",{"_index":2033,"title":{},"name":{},"text":{"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["alpin",{"_index":1219,"title":{},"name":{},"text":{"10":{},"16":{},"17":{},"18":{},"22":{},"28":{},"29":{},"30":{},"34":{},"43":{},"47":{}},"component":{},"keyword":{}}],["alpine3.19",{"_index":1078,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["alreadi",{"_index":592,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["alta",{"_index":66,"title":{"2-10":{},"14-10":{},"26-10":{}},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["altern",{"_index":1003,"title":{},"name":{},"text":{"6":{},"8":{},"12":{},"16":{},"18":{},"20":{},"24":{},"29":{},"30":{},"32":{},"36":{},"38":{},"40":{},"41":{}},"component":{},"keyword":{}}],["alto",{"_index":1284,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["alway",{"_index":1201,"title":{},"name":{},"text":{"8":{},"11":{},"20":{},"23":{},"32":{},"35":{}},"component":{},"keyword":{}}],["alwayslinktolastbuild",{"_index":1389,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["amaril",{"_index":862,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["ambo",{"_index":1140,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["amd64",{"_index":996,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ampli",{"_index":1575,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["analisi",{"_index":760,"title":{"5-4":{},"11-5":{},"16-4":{},"23-5":{},"29-4":{},"35-5":{},"47-4":{}},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["analiz",{"_index":228,"title":{},"name":{},"text":{"2":{},"5":{},"14":{},"16":{},"26":{},"29":{}},"component":{},"keyword":{}}],["analysi",{"_index":912,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["annotat",{"_index":2125,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["anot",{"_index":2114,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["anterior",{"_index":564,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["antigu",{"_index":1998,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["antor",{"_index":2020,"title":{"43":{},"43-1":{},"43-3":{}},"name":{"43":{}},"text":{"43":{}},"component":{},"keyword":{}}],["antora/lunr",{"_index":2056,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["anul",{"_index":839,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["anyon",{"_index":1065,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["apach",{"_index":778,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["apag",{"_index":300,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["aparec",{"_index":253,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"39":{},"41":{},"44":{}},"component":{},"keyword":{}}],["aparezc",{"_index":1636,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["api",{"_index":232,"title":{"17-3":{},"28-3":{}},"name":{},"text":{"2":{},"4":{},"5":{},"14":{},"17":{},"26":{},"28":{},"39":{}},"component":{},"keyword":{}}],["apk",{"_index":2078,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["apliacion",{"_index":389,"title":{},"name":{},"text":{"3":{},"9":{},"15":{},"21":{},"27":{},"33":{},"46":{}},"component":{},"keyword":{}}],["aplic",{"_index":7,"title":{"3":{},"9":{},"15":{},"21":{},"27":{},"33":{},"46":{},"38-8":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"46":{},"47":{}},"component":{},"keyword":{}}],["aplicacion",{"_index":391,"title":{},"name":{},"text":{"3":{},"9":{},"15":{},"21":{},"27":{},"33":{}},"component":{},"keyword":{}}],["aplicion",{"_index":491,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["apoy",{"_index":1871,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["app",{"_index":376,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["app.get",{"_index":1314,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["app.get('/:nametosalut",{"_index":1318,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["app.j",{"_index":1298,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["app.jar",{"_index":488,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["app.listen(port",{"_index":1305,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["app.test.j",{"_index":1299,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["app_nam",{"_index":1607,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["appli",{"_index":60,"title":{"2-6":{},"14-6":{},"26-6":{}},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["applic",{"_index":1261,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["application'",{"_index":484,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["approv",{"_index":272,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["aprovech",{"_index":2027,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["apt",{"_index":1169,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{},"43":{}},"component":{},"keyword":{}}],["apunt",{"_index":144,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["aqu",{"_index":138,"title":{"40-4":{}},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"19":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"31":{},"32":{},"35":{},"36":{},"38":{},"40":{},"41":{}},"component":{},"keyword":{}}],["aquel",{"_index":1692,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["ar",{"_index":1528,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["arch",{"_index":995,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["arch=amd64",{"_index":1184,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["archiv",{"_index":99,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["archiveartifact",{"_index":642,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["arg",{"_index":485,"title":{},"name":{},"text":{"4":{},"6":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["argsignorepattern",{"_index":1451,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["arquitectur",{"_index":1955,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["arranc",{"_index":1241,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["arranqu",{"_index":770,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["arregl",{"_index":565,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["artefact",{"_index":2022,"title":{"43-4":{}},"name":{},"text":{"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["artifact",{"_index":754,"title":{"17-2":{},"28-2":{},"43-4":{}},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"20":{},"28":{},"29":{},"32":{},"43":{},"47":{}},"component":{},"keyword":{}}],["artifact@v2",{"_index":2115,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["artifact@v3",{"_index":2064,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["artifactid>junit</artifact",{"_index":1877,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["artifactid>mav",{"_index":893,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["artifactid>selenium",{"_index":1880,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["asegur",{"_index":662,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["asegurat",{"_index":1673,"title":{},"name":{},"text":{"38":{},"40":{},"41":{}},"component":{},"keyword":{}}],["asercion",{"_index":1769,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["asi",{"_index":276,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"38":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["asign",{"_index":315,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"14":{},"20":{},"24":{},"26":{},"32":{},"36":{}},"component":{},"keyword":{}}],["asignatur",{"_index":307,"title":{},"name":{},"text":{"2":{},"7":{},"12":{},"14":{},"19":{},"24":{},"26":{},"31":{},"36":{},"38":{},"45":{}},"component":{},"keyword":{}}],["asist",{"_index":533,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["asoci",{"_index":844,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"16":{},"18":{},"23":{},"29":{},"30":{},"35":{},"43":{},"44":{}},"component":{},"keyword":{}}],["aspect",{"_index":1422,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["assert",{"_index":1729,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["atac",{"_index":1756,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["ataylorme/eslint",{"_index":2128,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["atom",{"_index":1439,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["atribut",{"_index":1701,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["aul",{"_index":1527,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["aument",{"_index":878,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["aun",{"_index":290,"title":{},"name":{},"text":{"2":{},"8":{},"12":{},"14":{},"20":{},"24":{},"26":{},"32":{},"36":{},"41":{}},"component":{},"keyword":{}}],["aunqu",{"_index":884,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"17":{},"24":{},"28":{},"29":{},"36":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["aut",{"_index":271,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["autent",{"_index":400,"title":{"4-2":{},"17-2":{},"28-2":{},"38-1":{}},"name":{},"text":{"4":{},"6":{},"10":{},"17":{},"18":{},"22":{},"28":{},"30":{},"34":{},"38":{}},"component":{},"keyword":{}}],["autenticacion",{"_index":1578,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["auth",{"_index":617,"title":{},"name":{},"text":{"4":{},"8":{},"20":{},"32":{},"38":{}},"component":{},"keyword":{}}],["authent",{"_index":526,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["authenticat",{"_index":544,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["author",{"_index":1290,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["authorized_key",{"_index":1117,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"47":{}},"component":{},"keyword":{}}],["autoconfigur",{"_index":769,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["automat",{"_index":412,"title":{"11-3":{},"23-3":{},"35-3":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"39":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["automatiz",{"_index":28,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"13":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"39":{},"41":{},"42":{},"43":{},"44":{},"46":{}},"component":{},"keyword":{}}],["avail",{"_index":480,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"17":{},"20":{},"22":{},"28":{},"32":{},"34":{}},"component":{},"keyword":{}}],["avat",{"_index":2092,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["avi",{"_index":1000,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{},"41":{}},"component":{},"keyword":{}}],["avo",{"_index":1055,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ayud",{"_index":880,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"38":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["añad",{"_index":221,"title":{"47-6":{},"47-7":{},"47-8":{},"47-9":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["añadel",{"_index":337,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["año",{"_index":164,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["b",{"_index":465,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"12":{},"17":{},"18":{},"23":{},"24":{},"28":{},"30":{},"35":{},"36":{},"43":{},"47":{}},"component":{},"keyword":{}}],["ba",{"_index":36,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"43":{},"47":{}},"component":{},"keyword":{}}],["back",{"_index":1068,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["background",{"_index":661,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"41":{},"47":{}},"component":{},"keyword":{}}],["bann",{"_index":1637,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["basart",{"_index":2083,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["baselin",{"_index":1561,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["bash",{"_index":1491,"title":{},"name":{},"text":{"12":{},"24":{},"36":{},"40":{},"44":{}},"component":{},"keyword":{}}],["basic",{"_index":422,"title":{"8-4":{},"20-4":{},"32-4":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["bc0240f3c744dd6b6ec2920b3cd08dcc295161a",{"_index":984,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["befor",{"_index":1897,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["benefici",{"_index":2025,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["best",{"_index":2015,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["bet",{"_index":1848,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["beta.1",{"_index":1651,"title":{},"name":{},"text":{"37":{},"42":{}},"component":{},"keyword":{}}],["bien",{"_index":594,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"16":{},"17":{},"18":{},"20":{},"22":{},"28":{},"29":{},"30":{},"32":{},"34":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["bienven",{"_index":1212,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["big",{"_index":1057,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["bin",{"_index":1891,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["bin/sh",{"_index":1042,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["bind",{"_index":590,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["bit",{"_index":980,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["bitcoin",{"_index":241,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["blamedisabl",{"_index":1465,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["blanc",{"_index":191,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{},"41":{}},"component":{},"keyword":{}}],["bloqu",{"_index":279,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"11":{},"14":{},"16":{},"17":{},"18":{},"23":{},"26":{},"28":{},"29":{},"30":{},"35":{},"40":{},"41":{}},"component":{},"keyword":{}}],["bolit",{"_index":963,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["bool",{"_index":1906,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["boolean",{"_index":1905,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["boot",{"_index":446,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["both",{"_index":1224,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["boton",{"_index":721,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["branch",{"_index":865,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["branch:'main",{"_index":630,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["break",{"_index":1912,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["brow",{"_index":1655,"title":{"41-4":{}},"name":{},"text":{"37":{},"41":{}},"component":{},"keyword":{}}],["bucl",{"_index":1739,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["buen",{"_index":737,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["build",{"_index":434,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["build.yml",{"_index":2040,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["build>…​</build",{"_index":1875,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["bundl",{"_index":1231,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["busc",{"_index":229,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"14":{},"16":{},"18":{},"20":{},"26":{},"29":{},"30":{},"32":{},"38":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["buy",{"_index":340,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["c",{"_index":161,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{},"39":{},"40":{}},"component":{},"keyword":{}}],["c/users/you/.ssh/id_r",{"_index":1522,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["c:\\users\\usuari",{"_index":1516,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["ca",{"_index":117,"title":{"38":{},"38-5":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["cab",{"_index":1762,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["cach",{"_index":462,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["cad",{"_index":47,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"10":{},"11":{},"12":{},"13":{},"14":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"34":{},"35":{},"36":{},"38":{},"40":{},"41":{},"42":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["caduc",{"_index":1535,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["calcul",{"_index":851,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["calid",{"_index":879,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["cambi",{"_index":318,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"36":{},"38":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["camelc",{"_index":1450,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["camp",{"_index":193,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"38":{},"41":{}},"component":{},"keyword":{}}],["cantid",{"_index":1502,"title":{},"name":{},"text":{"12":{},"24":{},"36":{},"41":{}},"component":{},"keyword":{}}],["capac",{"_index":2087,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["captur",{"_index":1698,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["caracterist",{"_index":1674,"title":{},"name":{},"text":{"38":{},"44":{}},"component":{},"keyword":{}}],["carg",{"_index":1932,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["carpet",{"_index":102,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["carrit",{"_index":338,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["cat",{"_index":546,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"17":{},"18":{},"20":{},"22":{},"28":{},"30":{},"32":{},"34":{}},"component":{},"keyword":{}}],["catch",{"_index":1946,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["cañ",{"_index":9,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"37":{},"42":{}},"component":{},"keyword":{}}],["cd",{"_index":795,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["ce",{"_index":1188,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["central",{"_index":800,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["central1",{"_index":159,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["centraliz",{"_index":1784,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["cerr",{"_index":1550,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["certificat",{"_index":1173,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["chang",{"_index":456,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"47":{}},"component":{},"keyword":{}}],["charact",{"_index":1745,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["check",{"_index":704,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{},"44":{},"47":{}},"component":{},"keyword":{}}],["checkout",{"_index":627,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["checkstyl",{"_index":761,"title":{"5-4":{},"16-4":{},"29-4":{}},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["checkstyle.html",{"_index":902,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["checkstyle.vers",{"_index":1564,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["checkstyle.version>3.3.1</mav",{"_index":1563,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["checkstyle.version}</vers",{"_index":1566,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["checkstyle:checkstyl",{"_index":898,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["chmod",{"_index":1032,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{}},"component":{},"keyword":{}}],["choc",{"_index":1538,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["chocolatey",{"_index":1537,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["chrom",{"_index":1727,"title":{},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["chromedriv",{"_index":1829,"title":{"41-11":{}},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["chromedriver(chromeopt",{"_index":1919,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["chromedriver.ex",{"_index":1914,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["chromedriver_linux64.zip",{"_index":1822,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["chromeopt",{"_index":1915,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["chromeoptions.addarguments(\"window",{"_index":1917,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["chromeoptions.setheadless(headless",{"_index":1916,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["chromeoptions.setheadless(tru",{"_index":1987,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["ci",{"_index":1156,"title":{},"name":{},"text":{"8":{},"10":{},"20":{},"22":{},"32":{},"34":{},"43":{},"47":{}},"component":{},"keyword":{}}],["ci/cd",{"_index":19,"title":{},"name":{},"text":{"1":{},"3":{},"5":{},"9":{},"11":{},"13":{},"15":{},"16":{},"21":{},"23":{},"25":{},"27":{},"29":{},"33":{},"35":{},"42":{},"44":{},"46":{}},"component":{},"keyword":{}}],["cicl",{"_index":780,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["cierr",{"_index":958,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"24":{},"29":{},"36":{}},"component":{},"keyword":{}}],["ciert",{"_index":1054,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["cla",{"_index":857,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"40":{},"41":{}},"component":{},"keyword":{}}],["class",{"_index":1324,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["clav",{"_index":55,"title":{"2-2":{},"6-8":{},"6-9":{},"14-2":{},"18-8":{},"18-9":{},"26-2":{},"30-8":{},"30-9":{},"47-6":{},"47-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"30":{},"32":{},"35":{},"36":{},"47":{}},"component":{},"keyword":{}}],["cle",{"_index":470,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"40":{},"41":{},"43":{}},"component":{},"keyword":{}}],["cli",{"_index":1489,"title":{"12-4":{},"24-4":{},"36-4":{}},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["clic",{"_index":292,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"36":{},"39":{}},"component":{},"keyword":{}}],["click",{"_index":675,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"38":{},"41":{}},"component":{},"keyword":{}}],["client",{"_index":1775,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["clon",{"_index":792,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"40":{},"44":{},"47":{}},"component":{},"keyword":{}}],["cloud",{"_index":64,"title":{"2":{},"14":{},"26":{},"2-9":{},"12-2":{},"14-9":{},"24-2":{},"26-9":{},"36-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"12":{},"14":{},"17":{},"18":{},"20":{},"22":{},"24":{},"26":{},"28":{},"30":{},"32":{},"34":{},"36":{},"47":{}},"component":{},"keyword":{}}],["cmd",{"_index":1233,"title":{},"name":{},"text":{"10":{},"12":{},"22":{},"24":{},"34":{},"36":{}},"component":{},"keyword":{}}],["cnsa",{"_index":149,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"17":{},"22":{},"26":{},"28":{},"34":{}},"component":{},"keyword":{}}],["cnsa2024",{"_index":169,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["co",{"_index":2131,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["cobertur",{"_index":759,"title":{"5-3":{},"11-4":{},"16-3":{},"23-4":{},"29-3":{},"35-4":{},"47-3":{}},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["cod",{"_index":474,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"12":{},"16":{},"17":{},"18":{},"22":{},"24":{},"28":{},"29":{},"30":{},"34":{},"36":{},"44":{},"47":{}},"component":{},"keyword":{}}],["codelab",{"_index":1485,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["codif",{"_index":508,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["codig",{"_index":425,"title":{"5-3":{},"5-4":{},"11-5":{},"16-3":{},"16-4":{},"23-5":{},"29-3":{},"29-4":{},"35-5":{},"47-4":{},"47-9":{}},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["coinc",{"_index":1747,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["coincid",{"_index":1141,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["coleccion",{"_index":1709,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["coloc",{"_index":1634,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["color",{"_index":858,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["com",{"_index":252,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["comand",{"_index":62,"title":{"2-8":{},"14-8":{},"26-8":{}},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"28":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["combin",{"_index":1071,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"41":{}},"component":{},"keyword":{}}],["coment",{"_index":516,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"38":{},"40":{},"41":{}},"component":{},"keyword":{}}],["comentari",{"_index":1868,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["comenz",{"_index":273,"title":{"39":{},"44":{}},"name":{},"text":{"2":{},"4":{},"10":{},"12":{},"14":{},"17":{},"22":{},"24":{},"26":{},"28":{},"34":{},"36":{},"37":{},"38":{},"44":{}},"component":{},"keyword":{}}],["command",{"_index":608,"title":{},"name":{},"text":{"4":{},"12":{},"17":{},"24":{},"28":{},"36":{},"38":{},"47":{}},"component":{},"keyword":{}}],["commit",{"_index":1351,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["common",{"_index":1177,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["commun",{"_index":1638,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["comod",{"_index":1494,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["comp",{"_index":79,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["compart",{"_index":1202,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"43":{},"44":{}},"component":{},"keyword":{}}],["compi",{"_index":567,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["compil",{"_index":782,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["complej",{"_index":1423,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["complet",{"_index":238,"title":{},"name":{},"text":{"2":{},"4":{},"7":{},"8":{},"10":{},"14":{},"17":{},"19":{},"20":{},"22":{},"26":{},"28":{},"31":{},"32":{},"34":{},"47":{}},"component":{},"keyword":{}}],["compo",{"_index":812,"title":{},"name":{},"text":{"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["compon",{"_index":786,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"39":{}},"component":{},"keyword":{}}],["comport",{"_index":1425,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"39":{},"47":{}},"component":{},"keyword":{}}],["compose.yml",{"_index":813,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["compr",{"_index":348,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["comprend",{"_index":762,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["comprob",{"_index":343,"title":{"41-8":{},"44-4":{}},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"11":{},"14":{},"17":{},"18":{},"22":{},"23":{},"26":{},"28":{},"30":{},"34":{},"35":{},"38":{},"39":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["comprueb",{"_index":250,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"30":{},"32":{},"34":{},"35":{},"36":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["compuest",{"_index":1594,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["comput",{"_index":4,"title":{},"name":{},"text":{"1":{},"2":{},"13":{},"14":{},"25":{},"26":{},"37":{},"42":{}},"component":{},"keyword":{}}],["comun",{"_index":1413,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"40":{},"43":{},"47":{}},"component":{},"keyword":{}}],["conc",{"_index":532,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["concaten",{"_index":166,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"41":{}},"component":{},"keyword":{}}],["concept",{"_index":1895,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["conclus",{"_index":1568,"title":{"17-10":{},"28-10":{}},"name":{},"text":{},"component":{},"keyword":{}}],["concret",{"_index":310,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"14":{},"17":{},"20":{},"26":{},"28":{},"32":{},"38":{}},"component":{},"keyword":{}}],["condicion",{"_index":866,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"38":{},"41":{}},"component":{},"keyword":{}}],["conect",{"_index":174,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"47":{}},"component":{},"keyword":{}}],["coneten",{"_index":1302,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["conexion",{"_index":251,"title":{"6-7":{},"6-10":{},"18-7":{},"18-10":{},"30-7":{},"30-10":{}},"name":{},"text":{"2":{},"6":{},"8":{},"14":{},"18":{},"20":{},"26":{},"30":{},"32":{}},"component":{},"keyword":{}}],["conf.d:/etc/mysql/conf.d:r",{"_index":823,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["config",{"_index":1430,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["configur",{"_index":46,"title":{"8":{},"20":{},"32":{},"2-11":{},"8-4":{},"8-6":{},"14-11":{},"20-4":{},"20-6":{},"26-11":{},"32-4":{},"32-6":{},"40-2":{},"41-9":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"40":{},"41":{},"42":{},"43":{},"47":{}},"component":{},"keyword":{}}],["confirm",{"_index":720,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["conform",{"_index":838,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["congel",{"_index":1940,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["conjunt",{"_index":373,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"39":{}},"component":{},"keyword":{}}],["connect",{"_index":1021,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["conoc",{"_index":941,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"16":{},"18":{},"20":{},"29":{},"30":{},"32":{},"40":{}},"component":{},"keyword":{}}],["conozc",{"_index":1672,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["consegu",{"_index":747,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"43":{}},"component":{},"keyword":{}}],["consid",{"_index":1730,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["consig",{"_index":1687,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["consist",{"_index":696,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"17":{},"20":{},"22":{},"28":{},"32":{},"34":{}},"component":{},"keyword":{}}],["consol",{"_index":369,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"30":{},"32":{},"35":{},"36":{},"40":{},"47":{}},"component":{},"keyword":{}}],["console.log(`exampl",{"_index":1306,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["const",{"_index":97,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{},"39":{}},"component":{},"keyword":{}}],["constitu",{"_index":1476,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["constru",{"_index":387,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"40":{},"43":{},"44":{},"46":{}},"component":{},"keyword":{}}],["construccion",{"_index":27,"title":{"4-5":{},"5-1":{},"8-1":{},"11-1":{},"11-3":{},"16-1":{},"17-7":{},"20-1":{},"23-1":{},"23-3":{},"28-7":{},"29-1":{},"32-1":{},"35-1":{},"35-3":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"10":{},"11":{},"13":{},"16":{},"17":{},"18":{},"22":{},"23":{},"25":{},"28":{},"29":{},"30":{},"34":{},"35":{},"41":{},"42":{},"43":{},"44":{}},"component":{},"keyword":{}}],["constructor",{"_index":1325,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["consult",{"_index":173,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"12":{},"14":{},"16":{},"17":{},"18":{},"22":{},"24":{},"26":{},"28":{},"29":{},"30":{},"34":{},"36":{},"41":{},"43":{}},"component":{},"keyword":{}}],["consum",{"_index":302,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{},"41":{}},"component":{},"keyword":{}}],["contain",{"_index":401,"title":{"4-2":{},"8-2":{}},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"16":{},"17":{},"18":{},"20":{},"22":{},"28":{},"29":{},"30":{},"32":{},"34":{},"43":{},"47":{}},"component":{},"keyword":{}}],["container_registri",{"_index":620,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["container_registry}/${google_cloud_project}/nodeapp:$build_numb",{"_index":1256,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["container_registry}/${google_cloud_project}/nodeapp:latest",{"_index":1255,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["container_registry}/${google_cloud_project}/petclinic:$build_numb",{"_index":744,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["container_registry}/${google_cloud_project}/petclinic:latest",{"_index":718,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["containers`con",{"_index":1073,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["contains(github.ref,'refs/heads/main",{"_index":2081,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["contan",{"_index":558,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["conten",{"_index":801,"title":{},"name":{},"text":{"5":{},"6":{},"10":{},"11":{},"12":{},"16":{},"18":{},"22":{},"23":{},"24":{},"29":{},"30":{},"34":{},"35":{},"36":{},"38":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["contendedor",{"_index":431,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["contenedor",{"_index":75,"title":{"4-5":{},"6-5":{},"6-6":{},"8-1":{},"8-3":{},"17-5":{},"17-7":{},"18-5":{},"18-6":{},"20-1":{},"20-2":{},"20-3":{},"28-5":{},"28-7":{},"30-5":{},"30-6":{},"32-1":{},"32-2":{},"32-3":{}},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"24":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"36":{},"38":{},"40":{},"43":{},"46":{},"47":{}},"component":{},"keyword":{}}],["content_strings_es.xtb",{"_index":1735,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["contest",{"_index":1131,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["contextu",{"_index":1699,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{},"keyword":{}}],["contien",{"_index":493,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"41":{},"47":{}},"component":{},"keyword":{}}],["continu",{"_index":1,"title":{"1":{},"13":{},"25":{},"42":{},"4-4":{},"10-4":{},"22-4":{},"34-4":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"41":{},"43":{},"44":{},"47":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{}},"keyword":{}}],["contrari",{"_index":257,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["contraseñ",{"_index":225,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"12":{},"14":{},"18":{},"20":{},"24":{},"26":{},"30":{},"32":{},"36":{},"38":{}},"component":{},"keyword":{}}],["control",{"_index":1658,"title":{"38-7":{}},"name":{},"text":{"38":{},"43":{}},"component":{},"keyword":{}}],["conveni",{"_index":1768,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["convert",{"_index":1873,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["conviert",{"_index":1872,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["copi",{"_index":443,"title":{"6-9":{},"18-9":{},"30-9":{}},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["corchet",{"_index":1712,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["corr",{"_index":596,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{},"44":{}},"component":{},"keyword":{}}],["correct",{"_index":165,"title":{"38-5":{},"47-8":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["correctamen",{"_index":1350,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["correg",{"_index":906,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["correspond",{"_index":1595,"title":{},"name":{},"text":{"17":{},"28":{},"39":{}},"component":{},"keyword":{}}],["correspondi",{"_index":93,"title":{},"name":{},"text":{"2":{},"6":{},"10":{},"14":{},"18":{},"22":{},"26":{},"30":{},"34":{}},"component":{},"keyword":{}}],["corrig",{"_index":1862,"title":{"41-5":{}},"name":{},"text":{},"component":{},"keyword":{}}],["cort",{"_index":1724,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["coverag",{"_index":853,"title":{},"name":{},"text":{"5":{},"8":{},"11":{},"16":{},"20":{},"23":{},"29":{},"32":{},"35":{},"47":{}},"component":{},"keyword":{}}],["coverage/eslint",{"_index":1454,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["coverage/test.results.xml",{"_index":1365,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["coveragedirectory=./coverag",{"_index":1384,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["coveragereporters=html",{"_index":1383,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["coveragereporters=text",{"_index":1382,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["cp",{"_index":2048,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["cre",{"_index":17,"title":{"43-3":{},"44-3":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["creacion",{"_index":54,"title":{"2":{},"14":{},"26":{},"2-2":{},"4-1":{},"5-2":{},"6-1":{},"6-2":{},"10-1":{},"11-2":{},"14-2":{},"16-2":{},"17-1":{},"17-3":{},"18-1":{},"18-2":{},"22-1":{},"23-2":{},"26-2":{},"28-1":{},"28-3":{},"29-2":{},"30-1":{},"30-2":{},"34-1":{},"35-2":{},"38-4":{},"40-3":{},"41-3":{},"43-2":{},"44-2":{},"47-1":{},"47-2":{}},"name":{},"text":{"2":{},"4":{},"6":{},"12":{},"14":{},"16":{},"18":{},"24":{},"26":{},"29":{},"30":{},"36":{},"43":{},"44":{}},"component":{},"keyword":{}}],["creat",{"_index":609,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{}},"component":{},"keyword":{}}],["credenci",{"_index":137,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"17":{},"22":{},"26":{},"28":{},"34":{}},"component":{},"keyword":{}}],["credenti",{"_index":209,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["credentials_",{"_index":622,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["credit",{"_index":237,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["cross",{"_index":1654,"title":{"41-4":{}},"name":{},"text":{"37":{},"41":{}},"component":{},"keyword":{}}],["cruz",{"_index":1888,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["cs",{"_index":1186,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["css",{"_index":1926,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["cssselector",{"_index":1979,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["ctra",{"_index":360,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["ctrc+c",{"_index":1105,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ctrl+c",{"_index":521,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["cuadr",{"_index":1499,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["cualqui",{"_index":449,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"39":{},"44":{},"47":{}},"component":{},"keyword":{}}],["cuant",{"_index":1767,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{},"keyword":{}}],["cuatrimestr",{"_index":1532,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["cubiert",{"_index":860,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["cubr",{"_index":1680,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["cuent",{"_index":56,"title":{"2-2":{},"14-2":{},"26-2":{}},"name":{},"text":{"2":{},"4":{},"11":{},"12":{},"14":{},"17":{},"23":{},"24":{},"26":{},"28":{},"35":{},"36":{},"38":{}},"component":{},"keyword":{}}],["cumpl",{"_index":925,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["cuot",{"_index":1495,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["cupon",{"_index":1486,"title":{"12-2":{},"24-2":{},"36-2":{}},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["curl",{"_index":1174,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["cursor",{"_index":1635,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["cuy",{"_index":615,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{}},"component":{},"keyword":{}}],["d",{"_index":573,"title":{},"name":{},"text":{"4":{},"5":{},"8":{},"10":{},"11":{},"16":{},"17":{},"20":{},"22":{},"23":{},"28":{},"29":{},"32":{},"34":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["da",{"_index":182,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"14":{},"16":{},"17":{},"20":{},"22":{},"26":{},"28":{},"29":{},"32":{},"34":{},"41":{}},"component":{},"keyword":{}}],["daemon",{"_index":1022,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["dal",{"_index":825,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"12":{},"16":{},"18":{},"20":{},"24":{},"29":{},"30":{},"32":{},"36":{},"39":{}},"component":{},"keyword":{}}],["dan",{"_index":1966,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["dar",{"_index":330,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"12":{},"14":{},"17":{},"18":{},"24":{},"26":{},"28":{},"30":{},"36":{}},"component":{},"keyword":{}}],["darl",{"_index":531,"title":{},"name":{},"text":{"4":{},"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["dart",{"_index":1543,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["dashboard",{"_index":876,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["dat",{"_index":352,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"14":{},"16":{},"17":{},"20":{},"26":{},"28":{},"29":{},"32":{},"39":{}},"component":{},"keyword":{}}],["dcheckstyle.skip",{"_index":635,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["de",{"_index":303,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"17":{},"18":{},"26":{},"28":{},"30":{},"38":{},"40":{}},"component":{},"keyword":{}}],["deb",{"_index":134,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["debaj",{"_index":875,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["debug.log",{"_index":1237,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["dec",{"_index":654,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"40":{}},"component":{},"keyword":{}}],["decen",{"_index":2012,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["decis",{"_index":1669,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["decl",{"_index":1824,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["declarativ",{"_index":931,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["dedic",{"_index":666,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["default",{"_index":148,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"40":{},"41":{}},"component":{},"keyword":{}}],["defect",{"_index":882,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"18":{},"29":{},"30":{},"43":{}},"component":{},"keyword":{}}],["defin",{"_index":142,"title":{},"name":{},"text":{"2":{},"3":{},"4":{},"5":{},"9":{},"10":{},"11":{},"14":{},"15":{},"16":{},"17":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"33":{},"34":{},"35":{},"38":{},"40":{},"41":{},"46":{},"47":{}},"component":{},"keyword":{}}],["definicion",{"_index":966,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["dej",{"_index":190,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"14":{},"17":{},"18":{},"26":{},"28":{},"30":{},"41":{}},"component":{},"keyword":{}}],["delant",{"_index":577,"title":{},"name":{},"text":{"4":{},"8":{},"12":{},"17":{},"20":{},"24":{},"28":{},"32":{},"36":{}},"component":{},"keyword":{}}],["delin",{"_index":1107,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["deliveri",{"_index":706,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["dem",{"_index":2095,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["demasi",{"_index":1723,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["demo.yml",{"_index":2094,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["demoni",{"_index":1479,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["demostr",{"_index":1081,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["deni",{"_index":1019,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["denomin",{"_index":922,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"41":{}},"component":{},"keyword":{}}],["dentr",{"_index":954,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"11":{},"16":{},"18":{},"20":{},"23":{},"29":{},"30":{},"32":{},"35":{},"41":{},"47":{}},"component":{},"keyword":{}}],["depend",{"_index":461,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"38":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["dependency:g",{"_index":471,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["deploy",{"_index":78,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["deploy.jenkinscnsa2024.tech",{"_index":1632,"title":{},"name":{},"text":{"17":{},"23":{},"28":{},"35":{}},"component":{},"keyword":{}}],["deploy_machin",{"_index":945,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"29":{}},"component":{},"keyword":{}}],["deprec",{"_index":1640,"title":{},"name":{},"text":{"20":{},"32":{}},"component":{},"keyword":{}}],["deprecat",{"_index":1577,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["derech",{"_index":1700,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["desaconsej",{"_index":1162,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"41":{}},"component":{},"keyword":{}}],["desaparec",{"_index":1884,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["desarrol",{"_index":767,"title":{"12-1":{},"24-1":{},"36-1":{}},"name":{},"text":{"5":{},"11":{},"12":{},"16":{},"23":{},"24":{},"29":{},"35":{},"36":{},"38":{},"47":{}},"component":{},"keyword":{}}],["descarg",{"_index":135,"title":{"43-4":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"39":{},"40":{},"41":{},"43":{}},"component":{},"keyword":{}}],["descomprim",{"_index":1828,"title":{},"name":{},"text":{"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["desconect",{"_index":1116,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["describ",{"_index":96,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"12":{},"14":{},"17":{},"20":{},"22":{},"24":{},"26":{},"28":{},"32":{},"34":{},"36":{},"41":{}},"component":{},"keyword":{}}],["describe(\"get",{"_index":1343,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["describe(\"hellowordserv",{"_index":1336,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["descripcion",{"_index":114,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"16":{},"23":{},"26":{},"29":{},"35":{},"44":{},"47":{}},"component":{},"keyword":{}}],["descript",{"_index":1287,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["descrit",{"_index":1166,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["descubr",{"_index":2090,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["descuent",{"_index":346,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["dese",{"_index":1928,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["deseabl",{"_index":846,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["desktop",{"_index":414,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["despleg",{"_index":388,"title":{"38-8":{}},"name":{},"text":{"3":{},"4":{},"5":{},"7":{},"8":{},"9":{},"10":{},"11":{},"15":{},"16":{},"17":{},"19":{},"20":{},"21":{},"22":{},"23":{},"27":{},"28":{},"29":{},"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"38":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"component":{},"keyword":{}}],["desplieg",{"_index":0,"title":{"1":{},"13":{},"25":{},"42":{},"4-3":{},"4-4":{},"4-5":{},"4-7":{},"5-5":{},"6-7":{},"6-8":{},"6-9":{},"6-10":{},"10-3":{},"10-4":{},"11-6":{},"16-5":{},"17-5":{},"17-7":{},"17-9":{},"18-7":{},"18-8":{},"18-9":{},"18-10":{},"22-3":{},"22-4":{},"23-6":{},"28-5":{},"28-7":{},"28-9":{},"29-5":{},"30-7":{},"30-8":{},"30-9":{},"30-10":{},"34-3":{},"34-4":{},"35-6":{},"38-9":{},"43-5":{},"47-5":{},"47-9":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"33":{},"34":{},"35":{},"38":{},"42":{},"43":{},"44":{},"47":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{}},"keyword":{}}],["desplig",{"_index":956,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["despu",{"_index":91,"title":{},"name":{},"text":{"2":{},"5":{},"7":{},"11":{},"14":{},"16":{},"19":{},"23":{},"26":{},"29":{},"31":{},"35":{},"40":{},"41":{},"45":{}},"component":{},"keyword":{}}],["destin",{"_index":1128,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"43":{}},"component":{},"keyword":{}}],["destroy",{"_index":61,"title":{"2-7":{},"14-7":{},"26-7":{}},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["destru",{"_index":311,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["destruccion",{"_index":314,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["desventaj",{"_index":1852,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["detach",{"_index":660,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["detal",{"_index":198,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"12":{},"14":{},"16":{},"18":{},"24":{},"26":{},"29":{},"30":{},"36":{},"39":{}},"component":{},"keyword":{}}],["detect",{"_index":904,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["deten",{"_index":595,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"39":{}},"component":{},"keyword":{}}],["deteng",{"_index":1938,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["determin",{"_index":1764,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{},"keyword":{}}],["detien",{"_index":726,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{}},"component":{},"keyword":{}}],["dev",{"_index":1431,"title":{},"name":{},"text":{"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{}},"component":{},"keyword":{}}],["devdepend",{"_index":1294,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["devic",{"_index":733,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["devuelv",{"_index":1309,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"38":{}},"component":{},"keyword":{}}],["dgeneratereports=f",{"_index":900,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["dial",{"_index":1027,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["dialog",{"_index":1500,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["dich",{"_index":494,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{},"39":{}},"component":{},"keyword":{}}],["difer",{"_index":511,"title":{},"name":{},"text":{"4":{},"6":{},"17":{},"18":{},"28":{},"30":{},"41":{}},"component":{},"keyword":{}}],["dim",{"_index":972,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["dimension(1080",{"_index":1977,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["dinam",{"_index":1411,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["dind",{"_index":1155,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["dir",{"_index":604,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["direccion",{"_index":357,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{},"38":{},"43":{},"47":{}},"component":{},"keyword":{}}],["direct",{"_index":1376,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"39":{},"44":{},"47":{}},"component":{},"keyword":{}}],["directori",{"_index":1220,"title":{},"name":{},"text":{"10":{},"16":{},"22":{},"29":{},"34":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["disc",{"_index":736,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["diseñ",{"_index":25,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"38":{},"40":{},"41":{},"42":{}},"component":{},"keyword":{}}],["display",{"_index":1839,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["dispon",{"_index":82,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"47":{}},"component":{},"keyword":{}}],["dist",{"_index":837,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["distingu",{"_index":1748,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["distint",{"_index":784,"title":{},"name":{},"text":{"5":{},"6":{},"12":{},"16":{},"18":{},"24":{},"29":{},"30":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["distribu",{"_index":1536,"title":{},"name":{},"text":{"12":{},"16":{},"17":{},"24":{},"28":{},"29":{},"36":{}},"component":{},"keyword":{}}],["diver",{"_index":1772,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["divid",{"_index":495,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"38":{}},"component":{},"keyword":{}}],["dn",{"_index":65,"title":{"2-9":{},"14-9":{},"26-9":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{}},"component":{},"keyword":{}}],["dns_deploy_instanc",{"_index":701,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{}},"component":{},"keyword":{}}],["do",{"_index":496,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"17":{},"23":{},"28":{},"35":{},"38":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["doc",{"_index":1258,"title":{},"name":{"43":{}},"text":{"10":{},"22":{},"34":{},"43":{}},"component":{},"keyword":{}}],["dock",{"_index":76,"title":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"17-6":{},"28-6":{}},"name":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"36":{},"40":{},"43":{},"47":{}},"component":{},"keyword":{}}],["docker",{"_index":1257,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["docker.build",{"_index":646,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["docker.pkg.dev",{"_index":1582,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["docker.pkg.dev/$google_cloud_project/dock",{"_index":1600,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["docker.pkg.dev/${google_cloud_project}/${repo_name}/${app_nam",{"_index":1611,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["docker.pkg.dev/cn",{"_index":1602,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["docker.pkg.dev/project/dock",{"_index":1591,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["docker.withregistry('http",{"_index":685,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["docker.xml",{"_index":469,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["docker:1.0",{"_index":1192,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["docker:latest",{"_index":1593,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["dockerfil",{"_index":397,"title":{"4-1":{},"10-1":{},"17-1":{},"22-1":{},"28-1":{},"34-1":{}},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"17":{},"18":{},"20":{},"22":{},"28":{},"30":{},"32":{},"34":{},"40":{}},"component":{},"keyword":{}}],["dockerhub",{"_index":409,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"17":{},"18":{},"20":{},"28":{},"30":{},"32":{},"40":{}},"component":{},"keyword":{}}],["dockerignor",{"_index":1235,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["dockerimag",{"_index":645,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["dockerimage.push(\"${env.build_",{"_index":687,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["dockerimage.push(\"latest",{"_index":686,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["dockeriz",{"_index":390,"title":{},"name":{},"text":{"3":{},"4":{},"9":{},"10":{},"11":{},"15":{},"17":{},"21":{},"22":{},"23":{},"27":{},"28":{},"33":{},"34":{},"35":{}},"component":{},"keyword":{}}],["document",{"_index":52,"title":{"43":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"8":{},"13":{},"16":{},"17":{},"18":{},"20":{},"25":{},"28":{},"29":{},"30":{},"32":{},"38":{},"41":{},"42":{},"43":{},"45":{}},"component":{},"keyword":{}}],["document.getelementbyid(\"email",{"_index":1703,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["documentación",{"_index":2075,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["dom",{"_index":1705,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["dom/chrome/dom/dom.properti",{"_index":1733,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["domain",{"_index":329,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["domini",{"_index":68,"title":{"2-10":{},"2-11":{},"14-10":{},"14-11":{},"26-10":{},"26-11":{}},"name":{},"text":{"2":{},"8":{},"14":{},"20":{},"26":{},"32":{},"43":{},"47":{}},"component":{},"keyword":{}}],["don",{"_index":1347,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["dorny/test",{"_index":2119,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["downl",{"_index":458,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{}},"component":{},"keyword":{}}],["drastic",{"_index":1786,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["dri",{"_index":2029,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["driv",{"_index":1779,"title":{"41-9":{},"41-12":{}},"name":{},"text":{"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["driver",{"_index":1808,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["driver.findelement(by.id(\"email",{"_index":2001,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["driver.manage().timeouts().implicitlywait(30",{"_index":1968,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["driver.manage().window().setsize(new",{"_index":1976,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["driver</artifact",{"_index":1883,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["drivers/chromedriver.ex",{"_index":1902,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["drivers/geckodriv",{"_index":1833,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["drivers/geckodriver.ex",{"_index":1846,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["drivers_loc",{"_index":1834,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["dsonar.login=$sonar_login_tok",{"_index":939,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["dspring.profiles.active=mysql",{"_index":811,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["dtest=!postgresintegrationtest",{"_index":1551,"title":{},"name":{},"text":{"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["dud",{"_index":1885,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["dur",{"_index":500,"title":{},"name":{},"text":{"4":{},"12":{},"17":{},"24":{},"28":{},"36":{}},"component":{},"keyword":{}}],["duracion",{"_index":1580,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["dwebdriver.chrome.driver=${drivers_loc}/chromedriv",{"_index":1850,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["dwebdriver.gecko.driver=${drivers_loc}/geckodriv",{"_index":1843,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["dwebdriver.gecko.driver=${jenkins_home}/selenium",{"_index":1832,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["e.printstacktrac",{"_index":1948,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["east1",{"_index":1585,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["echo",{"_index":264,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"14":{},"17":{},"20":{},"22":{},"26":{},"28":{},"32":{},"34":{},"40":{},"44":{}},"component":{},"keyword":{}}],["eclip",{"_index":987,"title":{"41-3":{},"41-4":{}},"name":{},"text":{"6":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{},"37":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["ecmavers",{"_index":1443,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["edit",{"_index":537,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"17":{},"18":{},"23":{},"28":{},"30":{},"35":{},"38":{},"41":{},"47":{}},"component":{},"keyword":{}}],["editor",{"_index":189,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{}},"component":{},"keyword":{}}],["educ",{"_index":1487,"title":{"12-2":{},"12-5":{},"24-2":{},"24-5":{},"36-2":{},"36-5":{}},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["efici",{"_index":1982,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["ejectut",{"_index":896,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["ejecu",{"_index":57,"title":{"2-3":{},"5-1":{},"6-3":{},"8-3":{},"11-1":{},"14-3":{},"16-1":{},"18-3":{},"20-3":{},"23-1":{},"26-3":{},"29-1":{},"30-3":{},"32-3":{},"35-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["ejecut",{"_index":116,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["ejempl",{"_index":438,"title":{"6":{},"18":{},"30":{},"43":{}},"name":{},"text":{"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["ejercici",{"_index":1660,"title":{},"name":{"38":{}},"text":{"38":{},"40":{},"43":{},"47":{}},"component":{},"keyword":{}}],["ejercit",{"_index":1797,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["eleg",{"_index":1011,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{},"38":{},"41":{}},"component":{},"keyword":{}}],["element",{"_index":268,"title":{},"name":{},"text":{"2":{},"14":{},"17":{},"26":{},"28":{},"38":{},"41":{}},"component":{},"keyword":{}}],["elementtobeclick",{"_index":1964,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["elev",{"_index":1681,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["elig",{"_index":1010,"title":{"38-2":{}},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{},"41":{}},"component":{},"keyword":{}}],["elimin",{"_index":269,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"22":{},"26":{},"28":{},"29":{},"30":{},"34":{},"41":{}},"component":{},"keyword":{}}],["ello",{"_index":141,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{},"keyword":{}}],["email",{"_index":1519,"title":{"38-6":{}},"name":{},"text":{"12":{},"24":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["emailramdon",{"_index":1691,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["embarg",{"_index":1851,"title":{},"name":{},"text":{"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["embeb",{"_index":772,"title":{},"name":{},"text":{"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["empaquet",{"_index":432,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{}},"component":{},"keyword":{}}],["empez",{"_index":2032,"title":{},"name":{},"text":{"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["empiez",{"_index":1789,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["empti",{"_index":1095,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["en_gb",{"_index":1751,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["en_u",{"_index":1039,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["enabl",{"_index":1991,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["enabledforfailur",{"_index":915,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["encarg",{"_index":700,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["encend",{"_index":319,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["enciend",{"_index":1205,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["encod",{"_index":991,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["encontr",{"_index":927,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"24":{},"29":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["encript",{"_index":1590,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["encuentr",{"_index":335,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"16":{},"17":{},"23":{},"26":{},"28":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["end",{"_index":664,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"17":{},"18":{},"22":{},"28":{},"30":{},"34":{},"38":{}},"component":{},"keyword":{}}],["end2end",{"_index":1331,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["engin",{"_index":187,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["enhorabuen",{"_index":746,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["enlac",{"_index":293,"title":{},"name":{},"text":{"2":{},"11":{},"12":{},"14":{},"23":{},"24":{},"26":{},"35":{},"36":{}},"component":{},"keyword":{}}],["ensur",{"_index":1223,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["enter",{"_index":682,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"17":{},"18":{},"24":{},"28":{},"30":{},"36":{}},"component":{},"keyword":{}}],["entonc",{"_index":1676,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["entorn",{"_index":143,"title":{"12-1":{},"24-1":{},"36-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["entra",{"_index":370,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{},"47":{}},"component":{},"keyword":{}}],["entrad",{"_index":1167,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"39":{}},"component":{},"keyword":{}}],["entram",{"_index":2034,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["entreg",{"_index":32,"title":{},"name":{},"text":{"1":{},"4":{},"13":{},"17":{},"25":{},"28":{},"38":{},"40":{},"41":{},"42":{}},"component":{},"keyword":{}}],["entrypoint",{"_index":489,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["env",{"_index":1437,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["env.container_registry}/${env.google_cloud_project}/nodeapp:${env.build_",{"_index":1252,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["env.container_registry}/${env.google_cloud_project}/petclinic:${env.build_",{"_index":647,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["envi",{"_index":42,"title":{},"name":{},"text":{"1":{},"13":{},"17":{},"25":{},"28":{},"38":{},"40":{},"41":{},"42":{}},"component":{},"keyword":{}}],["environ",{"_index":619,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"17":{},"18":{},"22":{},"23":{},"28":{},"30":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["equip",{"_index":40,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"10":{},"13":{},"16":{},"17":{},"22":{},"25":{},"28":{},"29":{},"34":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{},"keyword":{}}],["equival",{"_index":751,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["ermit",{"_index":2066,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["error",{"_index":260,"title":{"41-5":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"41":{},"47":{}},"component":{},"keyword":{}}],["es6",{"_index":1438,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["es_",{"_index":1750,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["escan",{"_index":1416,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["escap",{"_index":1778,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["escenari",{"_index":1661,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{},"keyword":{}}],["escrib",{"_index":575,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"17":{},"18":{},"20":{},"28":{},"30":{},"32":{},"38":{},"39":{},"41":{},"47":{}},"component":{},"keyword":{}}],["escritur",{"_index":525,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["esenci",{"_index":2093,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["eslint",{"_index":1429,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["eslint(pattern",{"_index":1466,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["eslint:recommend",{"_index":1435,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["eslintrc.j",{"_index":1436,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["eslintrc.json",{"_index":1433,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["espaci",{"_index":735,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["español",{"_index":1734,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["especi",{"_index":1983,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{},"keyword":{}}],["especif",{"_index":695,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["esper",{"_index":294,"title":{"41-7":{}},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{},"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["esquem",{"_index":1084,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["esr",{"_index":1831,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["est",{"_index":2035,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["establ",{"_index":1799,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{},"keyword":{}}],["establec",{"_index":1547,"title":{},"name":{},"text":{"16":{},"29":{},"38":{},"41":{}},"component":{},"keyword":{}}],["estadist",{"_index":2110,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["estand",{"_index":1082,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["estandariz",{"_index":779,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["estat",{"_index":317,"title":{"5-4":{},"11-5":{},"16-4":{},"23-5":{},"29-4":{},"35-5":{},"47-4":{}},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"16":{},"23":{},"26":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["estát",{"_index":2068,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["estil",{"_index":889,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["estrategi",{"_index":1935,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["estrict",{"_index":1509,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["estructur",{"_index":53,"title":{"2-1":{},"14-1":{},"26-1":{}},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["estudi",{"_index":48,"title":{},"name":{},"text":{"1":{},"5":{},"12":{},"13":{},"16":{},"24":{},"25":{},"29":{},"36":{},"42":{}},"component":{},"keyword":{}}],["etap",{"_index":395,"title":{},"name":{},"text":{"3":{},"4":{},"5":{},"9":{},"15":{},"16":{},"17":{},"21":{},"27":{},"28":{},"29":{},"33":{},"46":{}},"component":{},"keyword":{}}],["etc",{"_index":783,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{},"16":{},"18":{},"23":{},"24":{},"29":{},"30":{},"35":{},"36":{},"39":{},"41":{}},"component":{},"keyword":{}}],["etc/o",{"_index":1180,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["etc/rc.loc",{"_index":1041,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["etiquet",{"_index":688,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"17":{},"22":{},"24":{},"28":{},"34":{},"36":{},"41":{}},"component":{},"keyword":{}}],["evalu",{"_index":50,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"38":{},"40":{},"41":{},"42":{}},"component":{},"keyword":{}}],["even",{"_index":833,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"40":{}},"component":{},"keyword":{}}],["event",{"_index":1996,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{},"keyword":{}}],["every_build",{"_index":1559,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["evit",{"_index":220,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"41":{},"43":{}},"component":{},"keyword":{}}],["evolu",{"_index":841,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["ex",{"_index":1004,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["exampl",{"_index":932,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["except",{"_index":1900,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["exclu",{"_index":1098,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["exec",{"_index":1122,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"40":{}},"component":{},"keyword":{}}],["execut",{"_index":1688,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["exhaust",{"_index":1679,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["exist",{"_index":605,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"38":{},"41":{},"43":{}},"component":{},"keyword":{}}],["exit",{"_index":255,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"14":{},"17":{},"18":{},"23":{},"26":{},"28":{},"30":{},"35":{},"38":{},"43":{},"44":{}},"component":{},"keyword":{}}],["expect(hellowordservice.greet(\"john\")).tobe(\"hel",{"_index":1339,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["expectedcondit",{"_index":1963,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["explic",{"_index":243,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"12":{},"14":{},"17":{},"22":{},"24":{},"26":{},"28":{},"34":{},"36":{}},"component":{},"keyword":{}}],["explicit",{"_index":1936,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["explor",{"_index":2096,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["expo",{"_index":483,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["export",{"_index":145,"title":{"41-2":{}},"name":{},"text":{"2":{},"14":{},"23":{},"26":{},"35":{},"37":{},"39":{},"41":{}},"component":{},"keyword":{}}],["express",{"_index":1277,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["exten",{"_index":1664,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["extend",{"_index":1434,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["extens",{"_index":100,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"39":{},"43":{}},"component":{},"keyword":{}}],["extension/supplemental_ui",{"_index":2051,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["extra",{"_index":2055,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["f",{"_index":466,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"17":{},"18":{},"22":{},"23":{},"28":{},"30":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["fa",{"_index":436,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["facil",{"_index":2031,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["facilit",{"_index":392,"title":{},"name":{},"text":{"3":{},"9":{},"15":{},"21":{},"27":{},"33":{}},"component":{},"keyword":{}}],["factur",{"_index":1534,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["fail",{"_index":834,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"40":{}},"component":{},"keyword":{}}],["fail(\"pl",{"_index":1920,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["failur",{"_index":2116,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["fal",{"_index":1388,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"41":{}},"component":{},"keyword":{}}],["fall",{"_index":1270,"title":{},"name":{},"text":{"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"38":{},"41":{},"47":{}},"component":{},"keyword":{}}],["falt",{"_index":1798,"title":{},"name":{},"text":{"39":{},"47":{}},"component":{},"keyword":{}}],["famili",{"_index":997,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["familiariz",{"_index":2084,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["faq",{"_index":1865,"title":{"41-13":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["favorit",{"_index":1776,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["fech",{"_index":1504,"title":{},"name":{},"text":{"12":{},"24":{},"36":{},"38":{}},"component":{},"keyword":{}}],["feedback",{"_index":1355,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["fetch",{"_index":830,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"43":{},"47":{}},"component":{},"keyword":{}}],["fi",{"_index":599,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["ficher",{"_index":787,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"43":{},"44":{}},"component":{},"keyword":{}}],["fictici",{"_index":1754,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["field",{"_index":681,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["fig",{"_index":80,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["fij",{"_index":1472,"title":{},"name":{},"text":{"11":{},"41":{}},"component":{},"keyword":{}}],["fil",{"_index":454,"title":{},"name":{},"text":{"4":{},"5":{},"12":{},"16":{},"17":{},"24":{},"28":{},"29":{},"36":{},"44":{},"47":{}},"component":{},"keyword":{}}],["filt",{"_index":714,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["final",{"_index":410,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"17":{},"18":{},"22":{},"23":{},"28":{},"30":{},"34":{},"35":{},"41":{},"43":{}},"component":{},"keyword":{}}],["finaliz",{"_index":129,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"39":{}},"component":{},"keyword":{}}],["findbug",{"_index":885,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["finish",{"_index":967,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["firefox",{"_index":1726,"title":{"41-10":{}},"name":{},"text":{"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["firefoxdriv",{"_index":1844,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["firefoxdriver(firefoxopt",{"_index":1911,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["firefoxopt",{"_index":1909,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["firefoxoptions.setheadless(headless",{"_index":1910,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["firefoxoptions.setheadless(tru",{"_index":1984,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["firewal",{"_index":121,"title":{},"name":{},"text":{"2":{},"10":{},"14":{},"17":{},"22":{},"26":{},"28":{},"34":{}},"component":{},"keyword":{}}],["first",{"_index":452,"title":{},"name":{"6":{},"18":{},"30":{},"44":{}},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["fluj",{"_index":1659,"title":{"38-7":{},"47-7":{}},"name":{},"text":{"38":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"component":{},"keyword":{}}],["focal",{"_index":1571,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["fold",{"_index":2082,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["forev",{"_index":1480,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["fork",{"_index":87,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"14":{},"17":{},"23":{},"26":{},"28":{},"35":{},"41":{}},"component":{},"keyword":{}}],["form",{"_index":34,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"6":{},"8":{},"9":{},"11":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"23":{},"24":{},"25":{},"27":{},"28":{},"30":{},"32":{},"33":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{}},"component":{},"keyword":{}}],["format",{"_index":1356,"title":{},"name":{},"text":{"11":{},"17":{},"23":{},"28":{},"35":{},"38":{},"39":{},"41":{},"47":{}},"component":{},"keyword":{}}],["formatt",{"_index":1414,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["formulari",{"_index":1693,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["found",{"_index":1464,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["framework",{"_index":765,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"38":{}},"component":{},"keyword":{}}],["francisc",{"_index":11,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"37":{},"42":{}},"component":{},"keyword":{}}],["freestyl",{"_index":959,"title":{"6-1":{},"18-1":{},"30-1":{}},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["front",{"_index":1069,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["frontend",{"_index":2074,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["fssl",{"_index":1178,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["fuent",{"_index":497,"title":{},"name":{},"text":{"4":{},"6":{},"17":{},"18":{},"28":{},"30":{},"40":{},"41":{}},"component":{},"keyword":{}}],["funcion",{"_index":418,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"11":{},"16":{},"17":{},"18":{},"23":{},"28":{},"29":{},"30":{},"35":{},"38":{},"39":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["fundament",{"_index":239,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["fusion",{"_index":2086,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["fv",{"_index":717,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["g",{"_index":1189,"title":{},"name":{},"text":{"8":{},"11":{},"20":{},"23":{},"32":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["garc",{"_index":12,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"37":{},"42":{}},"component":{},"keyword":{}}],["gat",{"_index":924,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["gce",{"_index":691,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["gcloud",{"_index":1488,"title":{"12-4":{},"24-4":{},"36-4":{}},"name":{},"text":{},"component":{},"keyword":{}}],["gcloudsdk",{"_index":1542,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["gcp",{"_index":20,"title":{"12-4":{},"24-4":{},"36-4":{}},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"10":{},"12":{},"13":{},"14":{},"17":{},"18":{},"22":{},"24":{},"25":{},"26":{},"28":{},"30":{},"34":{},"36":{}},"component":{},"keyword":{}}],["gcp_project",{"_index":147,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["gcr",{"_index":623,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["gcr.i",{"_index":553,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["gcr.io/$google_cloud_project/nodeapp:1.0",{"_index":1244,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["gcr.io/$google_cloud_project/petclinic:1.0",{"_index":557,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["gcr.io/cn",{"_index":612,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["gcr_cred",{"_index":1627,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["geck",{"_index":1892,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["geckodriv",{"_index":1819,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["geckodriver.ex",{"_index":1908,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["gener",{"_index":130,"title":{"6-8":{},"18-8":{},"30-8":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"47":{}},"component":{},"keyword":{}}],["generat",{"_index":2062,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["gestion",{"_index":23,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"8":{},"13":{},"14":{},"16":{},"20":{},"25":{},"26":{},"29":{},"32":{},"39":{},"43":{}},"component":{},"keyword":{}}],["get.tech",{"_index":332,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["getelementbyid(\"field",{"_index":1706,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["getelementsbyclassnam",{"_index":1714,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["getelementsbynam",{"_index":1708,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["getelementsbyname(\"fieldnam",{"_index":1707,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["getelementsbyname(\"fieldname\")[0",{"_index":1713,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["getelementsbytagnam",{"_index":1715,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["gh",{"_index":2073,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["git",{"_index":629,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"40":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["gitginor",{"_index":1890,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["github",{"_index":219,"title":{"42":{},"44":{},"45":{},"12-5":{},"24-5":{},"36-5":{},"43-5":{},"44-1":{},"47-2":{},"47-7":{}},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"32":{},"34":{},"35":{},"36":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"component":{"42":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"keyword":{}}],["github.event_nam",{"_index":2098,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["github.ref",{"_index":2100,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["github.repositori",{"_index":2101,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["github.workspac",{"_index":2104,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["github/workflow",{"_index":2039,"title":{},"name":{},"text":{"43":{},"44":{}},"component":{},"keyword":{}}],["github/workflows/build.yml",{"_index":2113,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["github/workflows/deploy.yml",{"_index":2134,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["github/workflows/tests.yml",{"_index":2117,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["github_tok",{"_index":2123,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["gitignor",{"_index":108,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"41":{}},"component":{},"keyword":{}}],["gitscm",{"_index":1374,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["giv",{"_index":1061,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{}},"component":{},"keyword":{}}],["gke",{"_index":694,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["global",{"_index":676,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"11":{},"17":{},"20":{},"22":{},"23":{},"28":{},"32":{},"34":{},"35":{}},"component":{},"keyword":{}}],["gnupg2",{"_index":1175,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["go",{"_index":672,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["goal",{"_index":492,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["googl",{"_index":69,"title":{"2":{},"14":{},"26":{},"8-2":{},"12-2":{},"24-2":{},"36-2":{}},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"12":{},"14":{},"17":{},"20":{},"22":{},"24":{},"26":{},"28":{},"32":{},"34":{},"36":{},"40":{},"47":{}},"component":{},"keyword":{}}],["google_cloud_keyfile_json",{"_index":265,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["google_cloud_keyfile_json=path/file.json",{"_index":146,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["google_cloud_project",{"_index":621,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["google_cloud_project=cn",{"_index":554,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["google_cloud_project}_artifact",{"_index":1626,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["grab",{"_index":1770,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{},"keyword":{}}],["grabacion",{"_index":1793,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["grad",{"_index":1151,"title":{},"name":{},"text":{"7":{},"19":{},"31":{}},"component":{},"keyword":{}}],["grafic",{"_index":840,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"40":{}},"component":{},"keyword":{}}],["gran",{"_index":1995,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["gratuit",{"_index":325,"title":{},"name":{},"text":{"2":{},"5":{},"12":{},"14":{},"16":{},"24":{},"26":{},"29":{},"36":{}},"component":{},"keyword":{}}],["greet",{"_index":1328,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["grep",{"_index":716,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["grid",{"_index":1782,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["groupid>junit</group",{"_index":1876,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["groupid>org.apache.maven.plugins</group",{"_index":892,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["groupid>org.seleniumhq.selenium</group",{"_index":1879,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["grup",{"_index":1825,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["guard",{"_index":208,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["gust",{"_index":334,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["h",{"_index":1045,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"47":{}},"component":{},"keyword":{}}],["h2",{"_index":804,"title":{},"name":{},"text":{"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["hab",{"_index":1099,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{},"41":{}},"component":{},"keyword":{}}],["habilit",{"_index":299,"title":{},"name":{},"text":{"2":{},"4":{},"11":{},"14":{},"17":{},"23":{},"26":{},"28":{},"35":{}},"component":{},"keyword":{}}],["habitu",{"_index":396,"title":{"41-5":{}},"name":{},"text":{"3":{},"5":{},"6":{},"9":{},"11":{},"15":{},"16":{},"18":{},"21":{},"23":{},"27":{},"29":{},"30":{},"33":{},"35":{},"39":{},"41":{},"46":{}},"component":{},"keyword":{}}],["hac",{"_index":88,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["haci",{"_index":2144,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["hack",{"_index":235,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["hag",{"_index":1684,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["har",{"_index":697,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["haran",{"_index":39,"title":{},"name":{},"text":{"1":{},"13":{},"25":{}},"component":{},"keyword":{}}],["hard",{"_index":2147,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["hashicorp/googl",{"_index":153,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["hashmap<str",{"_index":1922,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["haz",{"_index":291,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"11":{},"12":{},"14":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"30":{},"32":{},"35":{},"36":{}},"component":{},"keyword":{}}],["hazl",{"_index":1161,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["headeless",{"_index":1830,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["headless",{"_index":1656,"title":{"41-9":{},"41-10":{},"41-11":{},"41-12":{}},"name":{},"text":{"37":{},"40":{},"41":{}},"component":{},"keyword":{}}],["hech",{"_index":971,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["hell",{"_index":969,"title":{},"name":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"text":{"6":{},"10":{},"11":{},"18":{},"22":{},"23":{},"30":{},"34":{},"35":{},"44":{},"47":{}},"component":{},"keyword":{}}],["hello_dock",{"_index":1142,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["hellowordserv",{"_index":1311,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["hellowordservice().greet(req.params.nametosalut",{"_index":1320,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["helloworld",{"_index":1271,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["helloworldserv",{"_index":1332,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["herman",{"_index":1031,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["herrami",{"_index":763,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"12":{},"16":{},"19":{},"20":{},"24":{},"29":{},"31":{},"32":{},"36":{},"39":{}},"component":{},"keyword":{}}],["hibr",{"_index":1758,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["hic",{"_index":698,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["hil",{"_index":1941,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["hiz",{"_index":1242,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["hol",{"_index":1216,"title":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["hom",{"_index":673,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"12":{},"16":{},"17":{},"18":{},"20":{},"24":{},"28":{},"29":{},"30":{},"32":{},"36":{},"40":{}},"component":{},"keyword":{}}],["home/.m2",{"_index":1015,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/.m2:/root/.m2",{"_index":1009,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/.ssh/authorized_key",{"_index":1119,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_hom",{"_index":1100,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/.ssh",{"_index":1086,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/.ssh/id_dsa_deploy",{"_index":1096,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/.ssh/id_dsa_deploy.pub",{"_index":1097,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/.ssh/id_rsa_deploy",{"_index":1093,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/.ssh/id_rsa_deploy.pub",{"_index":1103,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/.ssh/known_host",{"_index":1139,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["home/ubuntu/jenkins_home/secrets/initialadminpassword",{"_index":1209,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["home/usuari",{"_index":1518,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["homepag",{"_index":1567,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["hook",{"_index":1372,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["hor",{"_index":386,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{},"38":{}},"component":{},"keyword":{}}],["host",{"_index":1014,"title":{},"name":{},"text":{"6":{},"8":{},"17":{},"18":{},"20":{},"28":{},"30":{},"32":{},"44":{},"47":{}},"component":{},"keyword":{}}],["hostname]/[project",{"_index":559,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["html",{"_index":856,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"38":{},"43":{},"45":{}},"component":{},"keyword":{}}],["html/j",{"_index":1398,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["html5",{"_index":1694,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["htmlcollect",{"_index":1710,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["htmlunit",{"_index":1864,"title":{"41-12":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["htmlunitdriv",{"_index":1989,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["htmlunitdriver(browserversion.firefox_68",{"_index":1992,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["http",{"_index":1172,"title":{},"name":{},"text":{"8":{},"11":{},"17":{},"20":{},"23":{},"28":{},"32":{},"35":{},"40":{}},"component":{},"keyword":{}}],["http://%2fvar%2frun%2fdocker.sock/v1.24/containers/maven:3.9",{"_index":1025,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["http://localhost:3000",{"_index":1240,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["http://localhost:3000/nombr",{"_index":1330,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["http://localhost:8080",{"_index":520,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["http://mi",{"_index":1809,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["http://{your_jenkins_url}/github",{"_index":1370,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["https://${repo_loc",{"_index":1628,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["https://chromedriver.chromium.org/download",{"_index":1913,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["https://chromedriver.storage.googleapis.com/90.0.4430.24/chromedriver_linux64.zip",{"_index":1821,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["https://console.cloud.google.com/apis/credentials/serviceaccountkey",{"_index":139,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["https://console.cloud.google.com/apis/library/artifactregistry.googleapis.com",{"_index":1588,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["https://docs.antora.org/antora/latest/instal",{"_index":2037,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["https://download.docker.com/linux",{"_index":1179,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["https://gcr.i",{"_index":551,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["https://git",{"_index":1492,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["https://github.com/mi_cuenta/nodeapp.git",{"_index":1646,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["https://github.com/mi_usuario/nodeapp",{"_index":1354,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["https://github.com/mozilla/geckodriver/rel",{"_index":1893,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["https://github.com/mozilla/geckodriver/releases/download/v0.29.1/geckodriv",{"_index":1816,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["https://github.com/shailendravaichalkar/selenium",{"_index":1861,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["https://github.com/spr",{"_index":793,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["https://github.com/tu",{"_index":1835,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["https://github.com/ualcnsa/nodeapp",{"_index":1272,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["https://github.com/ualcnsa/nodeapp.git",{"_index":1248,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"34":{},"47":{}},"component":{},"keyword":{}}],["https://github.com/ualcnsa/spr",{"_index":428,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["https://github.com/ualcnsa/terraformgooglecloudsampl",{"_index":84,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["https://github.com/ualhmis/seleniumwebdriverjunit",{"_index":1886,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["https://locat",{"_index":1581,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["https://organización.github.i",{"_index":2071,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["https://organización.github.io/repositori",{"_index":2072,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["https://sites.google.com/a/chromium.org/chromedriver/download",{"_index":1894,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["https://u",{"_index":1599,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["iam",{"_index":180,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["icmp",{"_index":1621,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["icon",{"_index":1788,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["id",{"_index":607,"title":{"38-7":{},"39-2":{},"41-2":{}},"name":{"38":{},"39":{}},"text":{"4":{},"8":{},"10":{},"16":{},"17":{},"20":{},"22":{},"28":{},"29":{},"32":{},"34":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["id\")/gpg",{"_index":1182,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["id]/[image]:[tag",{"_index":560,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["id_rsa",{"_index":1514,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["id_rsa.pub",{"_index":1515,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["id_rsa_deploy",{"_index":1090,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["id_rsa_deploy.pub",{"_index":1106,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ideal",{"_index":668,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"40":{}},"component":{},"keyword":{}}],["idem",{"_index":1903,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["ident",{"_index":1303,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["identif",{"_index":354,"title":{},"name":{},"text":{"2":{},"14":{},"17":{},"26":{},"28":{},"38":{},"41":{}},"component":{},"keyword":{}}],["idiom",{"_index":1731,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["ido",{"_index":1134,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["ignor",{"_index":223,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["igual",{"_index":1268,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"38":{},"47":{}},"component":{},"keyword":{}}],["imag",{"_index":408,"title":{"10-2":{},"17-4":{},"20-2":{},"22-2":{},"28-4":{},"32-2":{},"34-2":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"16":{},"17":{},"18":{},"20":{},"22":{},"28":{},"29":{},"30":{},"32":{},"34":{},"40":{},"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["image_nam",{"_index":1610,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["image_name}:${env.build_",{"_index":1613,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["image_name}:latest",{"_index":1629,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["imagen",{"_index":528,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"16":{},"17":{},"18":{},"20":{},"22":{},"28":{},"29":{},"30":{},"32":{},"34":{}},"component":{},"keyword":{}}],["img",{"_index":1404,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["implemen",{"_index":705,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["implement",{"_index":725,"title":{"38-5":{},"38-6":{}},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["implic",{"_index":1855,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["implicit",{"_index":1937,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["implicitlywait",{"_index":1967,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["import",{"_index":1461,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"41":{}},"component":{},"keyword":{}}],["inadecu",{"_index":1001,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["incid",{"_index":2089,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["inclu",{"_index":275,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"14":{},"16":{},"18":{},"22":{},"23":{},"24":{},"26":{},"29":{},"30":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["includ",{"_index":832,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["inconsist",{"_index":1421,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["incorpor",{"_index":2030,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["incorrect",{"_index":1657,"title":{"38-6":{}},"name":{},"text":{"38":{},"39":{}},"component":{},"keyword":{}}],["independi",{"_index":1002,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{},"47":{}},"component":{},"keyword":{}}],["index",{"_index":3,"title":{},"name":{"1":{},"2":{},"3":{},"7":{},"9":{},"12":{},"13":{},"14":{},"15":{},"19":{},"21":{},"24":{},"25":{},"26":{},"27":{},"31":{},"33":{},"36":{},"37":{},"42":{},"45":{},"46":{}},"text":{},"component":{},"keyword":{}}],["index.html",{"_index":1393,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["index.j",{"_index":1483,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["indic",{"_index":163,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["indiqu",{"_index":775,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["individu",{"_index":35,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"42":{}},"component":{},"keyword":{}}],["info",{"_index":582,"title":{"40-5":{},"41-14":{}},"name":{},"text":{"4":{},"5":{},"8":{},"16":{},"17":{},"20":{},"28":{},"29":{},"32":{},"40":{}},"component":{},"keyword":{}}],["inform",{"_index":43,"title":{"5-3":{},"11-4":{},"16-3":{},"23-4":{},"29-3":{},"35-4":{},"47-3":{}},"name":{},"text":{"1":{},"5":{},"11":{},"12":{},"13":{},"16":{},"17":{},"23":{},"24":{},"25":{},"28":{},"29":{},"35":{},"36":{},"38":{},"40":{},"41":{},"42":{},"43":{},"47":{}},"component":{},"keyword":{}}],["informat",{"_index":1152,"title":{},"name":{},"text":{"7":{},"19":{},"31":{}},"component":{},"keyword":{}}],["infraestructur",{"_index":18,"title":{"2":{},"14":{},"26":{}},"name":{},"text":{"1":{},"13":{},"25":{},"42":{}},"component":{},"keyword":{}}],["ingeni",{"_index":1149,"title":{},"name":{},"text":{"7":{},"19":{},"31":{}},"component":{},"keyword":{}}],["ingl",{"_index":1752,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["inic",{"_index":957,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["inici",{"_index":344,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"32":{},"34":{},"35":{},"39":{},"40":{},"47":{}},"component":{},"keyword":{}}],["inicializ",{"_index":125,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{}},"component":{},"keyword":{}}],["init",{"_index":58,"title":{"2-4":{},"14-4":{},"26-4":{}},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["inlin",{"_index":1408,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["inlumine.ual.",{"_index":1529,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["inmediat",{"_index":1971,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["innecesari",{"_index":2011,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["input",{"_index":708,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{}},"component":{},"keyword":{}}],["inspect",{"_index":1017,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["inst",{"_index":707,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["instal",{"_index":74,"title":{"8":{},"20":{},"32":{},"8-5":{},"20-5":{},"32-5":{}},"name":{"8":{},"20":{},"32":{}},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"39":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["instaland",{"_index":1158,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["instanc",{"_index":73,"title":{"6-9":{},"18-9":{},"30-9":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"39":{},"47":{}},"component":{},"keyword":{}}],["instancia_deploy",{"_index":1126,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["instantan",{"_index":2107,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["instruccion",{"_index":1530,"title":{},"name":{},"text":{"12":{},"24":{},"36":{},"41":{}},"component":{},"keyword":{}}],["int",{"_index":1904,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["integr",{"_index":404,"title":{"4-4":{},"10-4":{},"22-4":{},"34-4":{}},"name":{},"text":{"4":{},"5":{},"8":{},"11":{},"16":{},"17":{},"20":{},"23":{},"28":{},"29":{},"32":{},"35":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["intent",{"_index":603,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["inter",{"_index":448,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"47":{}},"component":{},"keyword":{}}],["interaccion",{"_index":1791,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["interactu",{"_index":1925,"title":{},"name":{},"text":{"41":{},"44":{}},"component":{},"keyword":{}}],["interf",{"_index":1066,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["interfac",{"_index":1541,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["interfaz",{"_index":1802,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["interruptedexcept",{"_index":1947,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["intervencion",{"_index":723,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["intro",{"_index":1760,"title":{},"name":{"39":{}},"text":{},"component":{},"keyword":{}}],["introduc",{"_index":1208,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"38":{},"39":{},"47":{}},"component":{},"keyword":{}}],["introduccion",{"_index":1652,"title":{"39-1":{},"43-1":{},"44-1":{}},"name":{},"text":{"37":{}},"component":{},"keyword":{}}],["introduzc",{"_index":1697,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["inyect",{"_index":1120,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ip",{"_index":316,"title":{},"name":{},"text":{"2":{},"5":{},"8":{},"14":{},"16":{},"20":{},"26":{},"29":{},"32":{},"47":{}},"component":{},"keyword":{}}],["ip/url",{"_index":1206,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["ir",{"_index":1792,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["isc",{"_index":1292,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["issu",{"_index":1463,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["it(\"say",{"_index":1337,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["it('respond",{"_index":1346,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["item",{"_index":824,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["izquierd",{"_index":1395,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["jacoc",{"_index":852,"title":{},"name":{},"text":{"5":{},"8":{},"16":{},"20":{},"29":{},"32":{}},"component":{},"keyword":{}}],["jacoco(execpattern",{"_index":869,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["jacocoadapter('target/site/jacoco/jacoco.xml",{"_index":872,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["jamesives/github",{"_index":2079,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["jammi",{"_index":1008,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["jammy/json",{"_index":1026,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["jar",{"_index":437,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["jar\",\"/app.j",{"_index":490,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["jar_fil",{"_index":487,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["jar_file=target/*.j",{"_index":486,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["jasmin",{"_index":1279,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["jav",{"_index":29,"title":{"3":{},"15":{},"27":{}},"name":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"text":{"1":{},"3":{},"4":{},"5":{},"6":{},"10":{},"11":{},"13":{},"15":{},"16":{},"17":{},"18":{},"22":{},"23":{},"25":{},"27":{},"28":{},"29":{},"30":{},"34":{},"35":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["java</artifact",{"_index":1881,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["javaformat:appli",{"_index":513,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["javascript",{"_index":1070,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{},"38":{},"39":{},"41":{},"47":{}},"component":{},"keyword":{}}],["javascriptexecutor",{"_index":1921,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["jdk",{"_index":790,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["jekyl",{"_index":2069,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["jenkin",{"_index":2,"title":{"1":{},"7":{},"8":{},"13":{},"19":{},"20":{},"25":{},"31":{},"32":{},"40":{},"6-10":{},"8-1":{},"8-3":{},"8-4":{},"8-6":{},"10-4":{},"11-2":{},"17-6":{},"18-10":{},"20-1":{},"20-3":{},"20-4":{},"20-6":{},"22-4":{},"23-2":{},"28-6":{},"30-10":{},"32-1":{},"32-3":{},"32-4":{},"32-6":{},"34-4":{},"35-2":{},"40-1":{},"40-3":{}},"name":{"8":{},"20":{},"32":{},"40":{}},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"37":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["jenkins.i",{"_index":1639,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["jenkins/jenkins:lt",{"_index":1154,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["jenkins:jenkin",{"_index":1826,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["jenkins:lt",{"_index":965,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["jenkins_hom",{"_index":1195,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["jenkins_home/selenium",{"_index":1813,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["jenkins_home:/var/jenkins_hom",{"_index":1199,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["jenkins_home=/var/jenkins_hom",{"_index":1812,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["jenkinsfil",{"_index":423,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"40":{}},"component":{},"keyword":{}}],["jest",{"_index":1278,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["jjcanada@ual.",{"_index":10,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"37":{},"42":{}},"component":{},"keyword":{}}],["joaquin",{"_index":8,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"37":{},"42":{}},"component":{},"keyword":{}}],["job",{"_index":2044,"title":{},"name":{},"text":{"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["job'",{"_index":2105,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["job.statu",{"_index":2106,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["john",{"_index":1338,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["js",{"_index":1666,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["json",{"_index":136,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"17":{},"22":{},"26":{},"28":{},"34":{},"39":{},"47":{}},"component":{},"keyword":{}}],["jueg",{"_index":1378,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"39":{},"47":{}},"component":{},"keyword":{}}],["junit",{"_index":638,"title":{"41-2":{}},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"39":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["junit5",{"_index":1858,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["junt",{"_index":1091,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["just",{"_index":1896,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["keep",{"_index":1265,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["keepal",{"_index":1390,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["key",{"_index":231,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"12":{},"14":{},"17":{},"20":{},"24":{},"26":{},"28":{},"32":{},"36":{},"40":{},"47":{}},"component":{},"keyword":{}}],["keyfile.json",{"_index":545,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["keyg",{"_index":1087,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["keys.delet",{"_index":2008,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["keysc",{"_index":2142,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["kind",{"_index":680,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["known",{"_index":2141,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["known_host",{"_index":1130,"title":{"47-8":{}},"name":{},"text":{"6":{},"18":{},"30":{},"47":{}},"component":{},"keyword":{}}],["kubernet",{"_index":693,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["l",{"_index":1815,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["labor",{"_index":903,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["lad",{"_index":2091,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["lanc",{"_index":799,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["lanz",{"_index":297,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["lanzal",{"_index":1460,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["larg",{"_index":1579,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["latest",{"_index":1597,"title":{},"name":{},"text":{"17":{},"28":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["lea",{"_index":1366,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["leem",{"_index":2076,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["left",{"_index":678,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["lenguaj",{"_index":1412,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"39":{},"47":{}},"component":{},"keyword":{}}],["less",{"_index":455,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["liber",{"_index":740,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["libr",{"_index":785,"title":{},"name":{},"text":{"5":{},"7":{},"16":{},"19":{},"29":{},"31":{},"41":{}},"component":{},"keyword":{}}],["licen",{"_index":1291,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["liger",{"_index":1555,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["limit",{"_index":1496,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["limpi",{"_index":2004,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{},"keyword":{}}],["lin",{"_index":517,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"12":{},"16":{},"17":{},"23":{},"24":{},"28":{},"29":{},"35":{},"36":{},"40":{}},"component":{},"keyword":{}}],["line",{"_index":510,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"17":{},"18":{},"23":{},"28":{},"30":{},"35":{},"40":{}},"component":{},"keyword":{}}],["link",{"_index":1929,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["lint",{"_index":1452,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["lint:json",{"_index":2126,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["linter",{"_index":1415,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["linux",{"_index":416,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"16":{},"17":{},"18":{},"24":{},"28":{},"29":{},"30":{},"36":{},"40":{}},"component":{},"keyword":{}}],["linux64.tar.gz",{"_index":1818,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["list",{"_index":194,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"12":{},"14":{},"17":{},"18":{},"20":{},"22":{},"24":{},"26":{},"28":{},"30":{},"32":{},"34":{},"36":{},"39":{},"40":{},"44":{}},"component":{},"keyword":{}}],["listen",{"_index":1307,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["llam",{"_index":122,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["llev",{"_index":1761,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["local",{"_index":175,"title":{"5-1":{},"11-1":{},"16-1":{},"23-1":{},"29-1":{},"35-1":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["localiz",{"_index":1587,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["locat",{"_index":1583,"title":{},"name":{},"text":{"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["lock.json",{"_index":1226,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["log",{"_index":285,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"38":{},"44":{}},"component":{},"keyword":{}}],["login",{"_index":547,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{},"37":{},"38":{}},"component":{},"keyword":{}}],["logout",{"_index":1630,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["longitud",{"_index":1716,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["ls",{"_index":1046,"title":{},"name":{},"text":{"6":{},"8":{},"12":{},"18":{},"20":{},"24":{},"30":{},"32":{},"36":{},"40":{},"44":{}},"component":{},"keyword":{}}],["lsb_rel",{"_index":1185,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["lt",{"_index":1035,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{},"40":{}},"component":{},"keyword":{}}],["lueg",{"_index":407,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"17":{},"22":{},"24":{},"28":{},"34":{},"36":{},"38":{}},"component":{},"keyword":{}}],["lug",{"_index":86,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"19":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"38":{},"41":{},"47":{}},"component":{},"keyword":{}}],["m2",{"_index":1554,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["ma",{"_index":1556,"title":{},"name":{},"text":{"16":{},"29":{},"40":{},"41":{}},"component":{},"keyword":{}}],["mac",{"_index":417,"title":{},"name":{},"text":{"4":{},"12":{},"17":{},"24":{},"28":{},"36":{}},"component":{},"keyword":{}}],["machin",{"_index":1484,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["main",{"_index":968,"title":{},"name":{},"text":{"6":{},"11":{},"16":{},"18":{},"23":{},"29":{},"30":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["main.j",{"_index":1297,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["main.tf",{"_index":106,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["mak",{"_index":460,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["malici",{"_index":1399,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["man",{"_index":1854,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["manag",{"_index":674,"title":{},"name":{},"text":{"4":{},"8":{},"11":{},"17":{},"20":{},"23":{},"28":{},"32":{},"35":{}},"component":{},"keyword":{}}],["manej",{"_index":2088,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["maner",{"_index":435,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["manten",{"_index":877,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"43":{}},"component":{},"keyword":{}}],["manteng",{"_index":1040,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["mantien",{"_index":1243,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["manual",{"_index":403,"title":{"4-3":{},"17-5":{},"28-5":{}},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["map",{"_index":1101,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{}},"component":{},"keyword":{}}],["mape",{"_index":1013,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{}},"component":{},"keyword":{}}],["maquin",{"_index":21,"title":{"6-7":{},"18-7":{},"30-7":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["maquina_deploy",{"_index":1143,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["maquina_jenkin",{"_index":1160,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["mar",{"_index":1051,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["marc",{"_index":1213,"title":{},"name":{},"text":{"8":{},"11":{},"20":{},"23":{},"32":{},"35":{},"41":{}},"component":{},"keyword":{}}],["march",{"_index":944,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["marketplac",{"_index":2059,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["mast",{"_index":836,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"18":{},"23":{},"30":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["mat",{"_index":2014,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["materi",{"_index":2028,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["math.floor(math.random()*1500000)+\"@ual.",{"_index":1689,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["mattallty/jest",{"_index":2121,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["mav",{"_index":430,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"16":{},"17":{},"18":{},"20":{},"28":{},"29":{},"30":{},"32":{},"40":{},"41":{}},"component":{},"keyword":{}}],["maven/gradl",{"_index":768,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["maven:3.8.4",{"_index":439,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["maven:3.9",{"_index":1006,"title":{},"name":{},"text":{"6":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["maven:3.9.6",{"_index":1572,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["maveniz",{"_index":1874,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["maxim",{"_index":1718,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["maxlength=\"10",{"_index":1721,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["mayor",{"_index":926,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"41":{}},"component":{},"keyword":{}}],["me",{"_index":1533,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["medi",{"_index":1933,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["mediant",{"_index":41,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"8":{},"9":{},"10":{},"11":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"32":{},"33":{},"34":{},"35":{},"38":{},"40":{},"41":{},"42":{},"43":{},"46":{},"47":{}},"component":{},"keyword":{}}],["medium",{"_index":755,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["medium.com",{"_index":1168,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["mejor",{"_index":909,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"24":{},"29":{},"36":{},"38":{},"41":{},"43":{}},"component":{},"keyword":{}}],["memori",{"_index":803,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["men",{"_index":861,"title":{},"name":{},"text":{"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["mensaj",{"_index":254,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"11":{},"14":{},"17":{},"18":{},"23":{},"26":{},"28":{},"30":{},"35":{},"38":{},"39":{}},"component":{},"keyword":{}}],["menu",{"_index":178,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"11":{},"14":{},"16":{},"17":{},"23":{},"26":{},"28":{},"29":{},"35":{},"38":{},"39":{},"44":{}},"component":{},"keyword":{}}],["merg",{"_index":942,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["messag",{"_index":709,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"38":{}},"component":{},"keyword":{}}],["message:\"proc",{"_index":743,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["met",{"_index":1949,"title":{},"name":{},"text":{"41":{},"47":{}},"component":{},"keyword":{}}],["method",{"_index":1448,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"41":{}},"component":{},"keyword":{}}],["metod",{"_index":530,"title":{},"name":{},"text":{"4":{},"7":{},"17":{},"19":{},"28":{},"31":{},"38":{},"41":{}},"component":{},"keyword":{}}],["metric",{"_index":843,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["mi_ram",{"_index":1353,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["miembr",{"_index":1682,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["min",{"_index":240,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["minim",{"_index":1717,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["minlength=\"6",{"_index":1720,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["minut",{"_index":247,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"14":{},"16":{},"17":{},"20":{},"26":{},"28":{},"29":{},"32":{}},"component":{},"keyword":{}}],["mism",{"_index":51,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"8":{},"10":{},"11":{},"13":{},"14":{},"17":{},"18":{},"20":{},"22":{},"23":{},"25":{},"26":{},"28":{},"30":{},"32":{},"34":{},"35":{},"38":{},"40":{},"41":{},"42":{},"43":{}},"component":{},"keyword":{}}],["miss",{"_index":864,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["mix",{"_index":982,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["mkdir",{"_index":947,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"16":{},"18":{},"20":{},"29":{},"30":{},"32":{},"40":{}},"component":{},"keyword":{}}],["ml",{"_index":1944,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["moch",{"_index":1280,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["mod",{"_index":659,"title":{"41-10":{},"41-11":{},"41-12":{}},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"16":{},"17":{},"18":{},"22":{},"28":{},"29":{},"30":{},"34":{},"37":{},"40":{},"41":{}},"component":{},"keyword":{}}],["model",{"_index":789,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["modif",{"_index":89,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"14":{},"18":{},"23":{},"26":{},"30":{},"35":{},"38":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["modul",{"_index":123,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"16":{},"23":{},"26":{},"29":{},"35":{}},"component":{},"keyword":{}}],["module.export",{"_index":1321,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["moment",{"_index":282,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"41":{}},"component":{},"keyword":{}}],["mont",{"_index":1553,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["mor",{"_index":2013,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["mostr",{"_index":973,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"18":{},"23":{},"24":{},"30":{},"35":{},"36":{},"39":{}},"component":{},"keyword":{}}],["motiv",{"_index":262,"title":{},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{},"39":{},"41":{}},"component":{},"keyword":{}}],["mp4",{"_index":245,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["much",{"_index":734,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"41":{}},"component":{},"keyword":{}}],["muestr",{"_index":127,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"40":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["muevel",{"_index":1301,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["multi",{"_index":398,"title":{"4-1":{},"17-1":{},"28-1":{}},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["multipl",{"_index":1072,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["multirregion",{"_index":1584,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["multistag",{"_index":1614,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["mund",{"_index":1217,"title":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["mvn",{"_index":464,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{},"40":{}},"component":{},"keyword":{}}],["mvnw",{"_index":796,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["mynetwork",{"_index":1619,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["mynetwork.tf",{"_index":110,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["mysql",{"_index":808,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["mysql:5.7",{"_index":815,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["mysql_allow_empty_password=tru",{"_index":818,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["mysql_database=petclin",{"_index":821,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["mysql_password=petclin",{"_index":820,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["mysql_root_password",{"_index":817,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["mysql_user=petclin",{"_index":819,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["nam",{"_index":562,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["name.com",{"_index":326,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["name=nodeapp",{"_index":1254,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["name=petclin",{"_index":715,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["namecheap",{"_index":327,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["nametohel",{"_index":1327,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["nametosalut",{"_index":1310,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["nan",{"_index":1118,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["nativ",{"_index":393,"title":{"41-12":{}},"name":{},"text":{"3":{},"9":{},"15":{},"21":{},"27":{},"33":{},"41":{},"46":{}},"component":{},"keyword":{}}],["nav",{"_index":1552,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["naveg",{"_index":179,"title":{},"name":{},"text":{"2":{},"4":{},"8":{},"11":{},"12":{},"14":{},"17":{},"20":{},"23":{},"24":{},"26":{},"28":{},"32":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["navigat",{"_index":1344,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["navigator.languag",{"_index":1749,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["navigator.userag",{"_index":1740,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["navigatoruseragent}.includes(\"chrom",{"_index":1746,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["navigatoruseragent}.includes(\"firefox",{"_index":1742,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["nece",{"_index":883,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["necesari",{"_index":90,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{}},"component":{},"keyword":{}}],["necesit",{"_index":133,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["necessari",{"_index":1841,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["network.tf",{"_index":131,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["new",{"_index":826,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["next",{"_index":911,"title":{},"name":{},"text":{"5":{},"8":{},"11":{},"16":{},"20":{},"23":{},"29":{},"32":{},"35":{}},"component":{},"keyword":{}}],["ningun",{"_index":504,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"39":{}},"component":{},"keyword":{}}],["nivel",{"_index":1285,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["nod",{"_index":835,"title":{"6-3":{},"6-4":{},"18-3":{},"18-4":{},"30-3":{},"30-4":{}},"name":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"text":{"5":{},"6":{},"10":{},"11":{},"16":{},"18":{},"22":{},"23":{},"29":{},"30":{},"34":{},"35":{},"38":{},"47":{}},"component":{},"keyword":{}}],["node.j",{"_index":1215,"title":{"9":{},"10":{},"11":{},"21":{},"22":{},"23":{},"33":{},"34":{},"35":{}},"name":{},"text":{"9":{},"10":{},"11":{},"21":{},"22":{},"23":{},"33":{},"34":{},"35":{}},"component":{},"keyword":{}}],["node:10",{"_index":1218,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["node:16",{"_index":2046,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["node:20.11.1",{"_index":1077,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["node_modul",{"_index":1236,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["node_modules/@antora/lunr",{"_index":2050,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["nodeapp",{"_index":1245,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["nodej",{"_index":30,"title":{"46":{},"47":{}},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"13":{},"16":{},"17":{},"18":{},"20":{},"22":{},"25":{},"28":{},"29":{},"30":{},"32":{},"34":{},"39":{},"42":{},"43":{},"46":{},"47":{}},"component":{},"keyword":{}}],["nohup",{"_index":950,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["nombr",{"_index":67,"title":{"2-10":{},"2-11":{},"14-10":{},"14-11":{},"26-10":{},"26-11":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["nombreequip",{"_index":1870,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["non",{"_index":1074,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{}},"component":{},"keyword":{}}],["normal",{"_index":1364,"title":{},"name":{},"text":{"11":{},"12":{},"23":{},"24":{},"35":{},"36":{},"43":{}},"component":{},"keyword":{}}],["notep",{"_index":1110,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["notif",{"_index":1269,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["now",{"_index":842,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"16":{},"18":{},"20":{},"29":{},"30":{},"32":{},"44":{}},"component":{},"keyword":{}}],["npm",{"_index":1229,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["npm@5",{"_index":1227,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["npx",{"_index":1432,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"43":{}},"component":{},"keyword":{}}],["nub",{"_index":5,"title":{"38-8":{}},"name":{},"text":{"1":{},"5":{},"13":{},"16":{},"25":{},"29":{},"37":{},"38":{},"42":{}},"component":{},"keyword":{}}],["nuev",{"_index":199,"title":{"6-8":{},"18-8":{},"30-8":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"36":{},"39":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["numer",{"_index":689,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"12":{},"17":{},"18":{},"22":{},"23":{},"24":{},"28":{},"30":{},"34":{},"35":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["nunc",{"_index":216,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["nuv",{"_index":1753,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["object",{"_index":788,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"41":{}},"component":{},"keyword":{}}],["objet",{"_index":16,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"7":{},"9":{},"13":{},"14":{},"15":{},"19":{},"21":{},"25":{},"26":{},"27":{},"31":{},"33":{},"37":{},"38":{},"40":{},"41":{},"42":{},"44":{},"45":{},"46":{}},"component":{},"keyword":{}}],["obten",{"_index":1379,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"44":{},"47":{}},"component":{},"keyword":{}}],["obteng",{"_index":2139,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["obtien",{"_index":1931,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["ocas",{"_index":1930,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["ocup",{"_index":602,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"43":{}},"component":{},"keyword":{}}],["ocurr",{"_index":1109,"title":{},"name":{},"text":{"6":{},"11":{},"17":{},"18":{},"23":{},"28":{},"30":{},"35":{},"47":{}},"component":{},"keyword":{}}],["offlin",{"_index":472,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["ofici",{"_index":891,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["ofrec",{"_index":323,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{},"41":{},"47":{}},"component":{},"keyword":{}}],["olvid",{"_index":542,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"17":{},"18":{},"22":{},"23":{},"28":{},"30":{},"34":{},"35":{}},"component":{},"keyword":{}}],["onlin",{"_index":928,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["only=product",{"_index":1230,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["opcion",{"_index":339,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"32":{},"35":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["openjdk",{"_index":440,"title":{},"name":{},"text":{"4":{},"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["openjdk:11",{"_index":477,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["oper",{"_index":286,"title":{},"name":{},"text":{"2":{},"7":{},"12":{},"14":{},"19":{},"24":{},"26":{},"31":{},"36":{},"39":{}},"component":{},"keyword":{}}],["oportun",{"_index":1675,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["opt/java/openjdk",{"_index":989,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["opta",{"_index":1507,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["optad",{"_index":1570,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["optat",{"_index":1757,"title":{"40-4":{}},"name":{},"text":{"38":{},"40":{},"43":{},"47":{}},"component":{},"keyword":{}}],["optimiz",{"_index":498,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["orden",{"_index":943,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["org.openqa.selenium.chrome.chromeopt",{"_index":1988,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["org.openqa.selenium.firefox.firefoxopt",{"_index":1985,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["org.openqa.selenium.htmlunit.htmlunitdriv",{"_index":1993,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["org.ual.cnsa.nombreequip",{"_index":1869,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["organiz",{"_index":1801,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{},"keyword":{}}],["orig",{"_index":1127,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"41":{},"43":{}},"component":{},"keyword":{}}],["origin",{"_index":420,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["origin/mast",{"_index":2148,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["out",{"_index":2102,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["output.tf",{"_index":111,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["outputdirectori",{"_index":1359,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["outputnam",{"_index":1360,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["outsid",{"_index":482,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["p",{"_index":518,"title":{},"name":{},"text":{"4":{},"5":{},"8":{},"10":{},"16":{},"17":{},"20":{},"22":{},"28":{},"29":{},"32":{},"34":{}},"component":{},"keyword":{}}],["p.e",{"_index":183,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["pa",{"_index":132,"title":{"7":{},"19":{},"31":{},"45":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["pacienc",{"_index":278,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["pack",{"_index":322,"title":{"12-5":{},"24-5":{},"36-5":{}},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["packag",{"_index":459,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{}},"component":{},"keyword":{}}],["package*.json",{"_index":1228,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["package.json",{"_index":1225,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["paco.garcia@ual.",{"_index":13,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"37":{},"42":{}},"component":{},"keyword":{}}],["pag",{"_index":2023,"title":{"43-5":{}},"name":{},"text":{"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["pagin",{"_index":802,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["palabr",{"_index":2060,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["pantal",{"_index":284,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["paquet",{"_index":281,"title":{},"name":{},"text":{"2":{},"7":{},"14":{},"19":{},"26":{},"31":{},"41":{}},"component":{},"keyword":{}}],["par",{"_index":295,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"14":{},"16":{},"17":{},"22":{},"23":{},"26":{},"28":{},"29":{},"34":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["paralel",{"_index":1783,"title":{},"name":{},"text":{"39":{},"40":{}},"component":{},"keyword":{}}],["parallel",{"_index":1859,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["param",{"_index":1326,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["parametr",{"_index":1125,"title":{},"name":{},"text":{"6":{},"8":{},"11":{},"18":{},"20":{},"23":{},"30":{},"32":{},"35":{},"40":{}},"component":{},"keyword":{}}],["parcial",{"_index":863,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["parej",{"_index":960,"title":{"6-8":{},"18-8":{},"30-8":{}},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["parseropt",{"_index":1442,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["part",{"_index":424,"title":{"40-4":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"40":{},"41":{},"43":{}},"component":{},"keyword":{}}],["pass",{"_index":670,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["passphr",{"_index":1094,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["password",{"_index":543,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"17":{},"20":{},"22":{},"28":{},"32":{},"34":{},"38":{}},"component":{},"keyword":{}}],["path",{"_index":263,"title":{},"name":{},"text":{"2":{},"14":{},"23":{},"26":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["path/file.json",{"_index":212,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["path/to/pom.xml",{"_index":1842,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["path/to/your/pom.xml",{"_index":1840,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["path=$path:/home/ubuntu/.nvm/versions/node/v20.11.1/bin",{"_index":1647,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["payl",{"_index":1369,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["págin",{"_index":2067,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["pc",{"_index":1114,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["pe",{"_index":1805,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["ped",{"_index":382,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["peg",{"_index":827,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"18":{},"29":{},"30":{},"47":{}},"component":{},"keyword":{}}],["pegal",{"_index":1113,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["pequeñ",{"_index":748,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["perfil",{"_index":809,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"38":{},"41":{}},"component":{},"keyword":{}}],["period",{"_index":1763,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["permanezc",{"_index":727,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["permi",{"_index":524,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"28":{},"30":{},"32":{},"34":{},"35":{},"36":{},"40":{}},"component":{},"keyword":{}}],["permiss",{"_index":1018,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["permit",{"_index":368,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["persist",{"_index":806,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["person",{"_index":724,"title":{},"name":{},"text":{"4":{},"6":{},"12":{},"17":{},"18":{},"24":{},"28":{},"30":{},"36":{},"38":{}},"component":{},"keyword":{}}],["personaliz",{"_index":1157,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["pestañ",{"_index":201,"title":{},"name":{},"text":{"2":{},"8":{},"14":{},"20":{},"26":{},"32":{},"41":{},"47":{}},"component":{},"keyword":{}}],["pet",{"_index":1800,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["petclin",{"_index":406,"title":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"5-2":{},"16-2":{},"17-6":{},"28-6":{},"29-2":{}},"name":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"text":{"4":{},"5":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{}},"component":{},"keyword":{}}],["petclinic.git",{"_index":429,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["petclinic/*.j",{"_index":951,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["petclinic/yourservice.log",{"_index":952,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["pgrep",{"_index":597,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["pid",{"_index":719,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"17":{},"18":{},"22":{},"28":{},"30":{},"34":{}},"component":{},"keyword":{}}],["pierd",{"_index":805,"title":{},"name":{},"text":{"5":{},"8":{},"11":{},"16":{},"20":{},"23":{},"29":{},"32":{},"35":{}},"component":{},"keyword":{}}],["pipelin",{"_index":394,"title":{"5-2":{},"6-2":{},"6-4":{},"6-5":{},"11-2":{},"16-2":{},"18-2":{},"18-4":{},"18-5":{},"23-2":{},"29-2":{},"30-2":{},"30-4":{},"30-5":{},"35-2":{},"40-3":{}},"name":{},"text":{"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["pkill",{"_index":598,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["plan",{"_index":59,"title":{"2-5":{},"14-5":{},"26-5":{}},"name":{},"text":{"2":{},"6":{},"14":{},"18":{},"26":{},"30":{}},"component":{},"keyword":{}}],["plantil",{"_index":71,"title":{"38-2":{}},"name":{},"text":{"2":{},"14":{},"26":{},"37":{},"38":{}},"component":{},"keyword":{}}],["plantilla(",{"_index":1662,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["plataform",{"_index":692,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"39":{},"41":{},"44":{}},"component":{},"keyword":{}}],["platform",{"_index":990,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["play",{"_index":1794,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["playbook",{"_index":2057,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["playbook.yml",{"_index":2054,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["plugin",{"_index":447,"title":{"8-5":{},"20-5":{},"32-5":{}},"name":{},"text":{"4":{},"5":{},"8":{},"10":{},"11":{},"16":{},"17":{},"20":{},"22":{},"23":{},"28":{},"29":{},"32":{},"34":{},"35":{}},"component":{},"keyword":{}}],["plugin</artifact",{"_index":894,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["pmd",{"_index":886,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["pod",{"_index":351,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["podr",{"_index":561,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{},"39":{},"40":{}},"component":{},"keyword":{}}],["podra",{"_index":1410,"title":{},"name":{},"text":{"11":{},"12":{},"23":{},"24":{},"35":{},"36":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["polit",{"_index":1618,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["poll",{"_index":1375,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["pom",{"_index":453,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["pom.xml",{"_index":457,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"41":{}},"component":{},"keyword":{}}],["pon",{"_index":381,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"16":{},"23":{},"26":{},"29":{},"35":{},"38":{},"47":{}},"component":{},"keyword":{}}],["pong",{"_index":1194,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["pop",{"_index":1696,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["popul",{"_index":1428,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["popular",{"_index":1419,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["porcentaj",{"_index":845,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["port",{"_index":478,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"17":{},"23":{},"28":{},"35":{}},"component":{},"keyword":{}}],["port=8080",{"_index":1482,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["portal",{"_index":2019,"title":{},"name":{},"text":{"42":{},"43":{}},"component":{},"keyword":{}}],["pose",{"_index":1569,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["posibl",{"_index":583,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{},"38":{},"41":{},"44":{}},"component":{},"keyword":{}}],["posicion",{"_index":1711,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["posit",{"_index":1474,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["post",{"_index":636,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["posterior",{"_index":37,"title":{},"name":{},"text":{"1":{},"2":{},"5":{},"13":{},"14":{},"16":{},"25":{},"26":{},"29":{},"47":{}},"component":{},"keyword":{}}],["postgr",{"_index":1548,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["potenti",{"_index":1058,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["practic",{"_index":738,"title":{"38":{}},"name":{},"text":{"4":{},"6":{},"10":{},"17":{},"18":{},"22":{},"28":{},"30":{},"34":{},"38":{},"40":{},"41":{},"43":{}},"component":{},"keyword":{}}],["pre)produccion",{"_index":1755,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["preconfigur",{"_index":807,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["predetermin",{"_index":791,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{},"16":{},"17":{},"18":{},"23":{},"24":{},"28":{},"29":{},"30":{},"35":{},"36":{},"40":{},"41":{}},"component":{},"keyword":{}}],["pregunt",{"_index":1129,"title":{},"name":{},"text":{"6":{},"11":{},"12":{},"18":{},"23":{},"24":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["premi",{"_index":566,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["preocup",{"_index":1471,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"41":{}},"component":{},"keyword":{}}],["prerrequisit",{"_index":1477,"title":{"12":{},"24":{},"36":{}},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["present",{"_index":1970,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{},"keyword":{}}],["presion",{"_index":1521,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["press",{"_index":1523,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["presupon",{"_index":1511,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["pretti",{"_index":1420,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["prettier/pretti",{"_index":1447,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["preven",{"_index":1397,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["previ",{"_index":828,"title":{},"name":{},"text":{"5":{},"8":{},"11":{},"12":{},"16":{},"17":{},"20":{},"23":{},"24":{},"28":{},"29":{},"32":{},"35":{},"36":{},"47":{}},"component":{},"keyword":{}}],["prim",{"_index":85,"title":{"43":{},"6-1":{},"6-2":{},"18-1":{},"18-2":{},"30-1":{},"30-2":{},"44-3":{}},"name":{},"text":{"2":{},"5":{},"6":{},"11":{},"12":{},"14":{},"16":{},"18":{},"23":{},"24":{},"26":{},"29":{},"30":{},"35":{},"36":{},"38":{},"41":{},"43":{},"45":{}},"component":{},"keyword":{}}],["primer",{"_index":287,"title":{"6":{},"7":{},"18":{},"19":{},"30":{},"31":{},"45":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"19":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"40":{},"45":{}},"component":{},"keyword":{}}],["princip",{"_index":118,"title":{"6-4":{},"18-4":{},"30-4":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"11":{},"14":{},"16":{},"17":{},"18":{},"23":{},"26":{},"28":{},"29":{},"30":{},"35":{},"39":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["principi",{"_index":563,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["priv",{"_index":206,"title":{"47-6":{},"47-7":{}},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"11":{},"12":{},"14":{},"17":{},"18":{},"22":{},"23":{},"24":{},"26":{},"28":{},"30":{},"34":{},"35":{},"36":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["privat",{"_index":230,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["prob",{"_index":522,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"38":{},"39":{},"40":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["probabl",{"_index":1506,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["probl",{"_index":663,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["problem",{"_index":507,"title":{"41-13":{}},"name":{},"text":{"4":{},"6":{},"8":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"41":{},"47":{}},"component":{},"keyword":{}}],["proc",{"_index":710,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["proce",{"_index":347,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"10":{},"11":{},"14":{},"16":{},"17":{},"22":{},"23":{},"26":{},"28":{},"29":{},"34":{},"35":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["produc",{"_index":1999,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{},"keyword":{}}],["produccion",{"_index":405,"title":{"4-7":{},"17-9":{},"28-9":{}},"name":{},"text":{"4":{},"5":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{},"38":{},"44":{}},"component":{},"keyword":{}}],["product",{"_index":703,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["produzc",{"_index":2130,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["profe",{"_index":1005,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["profesor",{"_index":45,"title":{},"name":{},"text":{"1":{},"12":{},"13":{},"24":{},"25":{},"36":{},"38":{},"40":{},"41":{},"42":{}},"component":{},"keyword":{}}],["profundiz",{"_index":917,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["program",{"_index":1939,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["progress",{"_index":515,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["project",{"_index":156,"title":{},"name":{"6":{},"18":{},"30":{},"44":{}},"text":{"2":{},"4":{},"5":{},"14":{},"16":{},"17":{},"26":{},"28":{},"29":{},"38":{},"41":{},"43":{}},"component":{},"keyword":{}}],["projects/spr",{"_index":794,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["prompt",{"_index":1135,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["properti",{"_index":1176,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["propi",{"_index":653,"title":{"38-3":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"16":{},"17":{},"18":{},"20":{},"22":{},"28":{},"29":{},"30":{},"32":{},"34":{},"38":{},"41":{}},"component":{},"keyword":{}}],["propiedad",{"_index":185,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"38":{}},"component":{},"keyword":{}}],["propietari",{"_index":355,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["proporcion",{"_index":176,"title":{},"name":{},"text":{"2":{},"11":{},"12":{},"14":{},"23":{},"24":{},"26":{},"35":{},"36":{},"40":{},"43":{},"44":{}},"component":{},"keyword":{}}],["propuest",{"_index":1490,"title":{},"name":{},"text":{"12":{},"24":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["proveedor",{"_index":115,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["provid",{"_index":155,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["provider.tf",{"_index":113,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["proxi",{"_index":587,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["proxim",{"_index":847,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["proyect",{"_index":26,"title":{"2-1":{},"6-1":{},"14-1":{},"18-1":{},"26-1":{},"30-1":{},"38-3":{},"41-3":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["prueb",{"_index":333,"title":{"37":{},"6-10":{},"18-10":{},"30-10":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["ps",{"_index":419,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"17":{},"20":{},"22":{},"28":{},"32":{},"34":{}},"component":{},"keyword":{}}],["pu",{"_index":172,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["public",{"_index":218,"title":{"4-3":{},"4-6":{},"6-9":{},"8-2":{},"10-2":{},"17-4":{},"17-8":{},"18-9":{},"20-2":{},"22-2":{},"28-4":{},"28-8":{},"30-9":{},"32-2":{},"34-2":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["publica/priv",{"_index":1080,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["publiqu",{"_index":1380,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["publish",{"_index":753,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{}},"component":{},"keyword":{}}],["publishcoverag",{"_index":871,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["publishhtml",{"_index":1385,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["pud",{"_index":2010,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["puert",{"_index":584,"title":{},"name":{},"text":{"4":{},"8":{},"10":{},"11":{},"16":{},"17":{},"20":{},"22":{},"23":{},"28":{},"29":{},"32":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["puest",{"_index":1121,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{},"38":{},"41":{}},"component":{},"keyword":{}}],["pul",{"_index":184,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"14":{},"17":{},"18":{},"20":{},"22":{},"26":{},"28":{},"30":{},"32":{},"34":{},"44":{}},"component":{},"keyword":{}}],["pull",{"_index":527,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["pull/push",{"_index":540,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["pull_request",{"_index":2042,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["punt",{"_index":1737,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["puntual",{"_index":1165,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["push",{"_index":523,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["públic",{"_index":2070,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["pwd",{"_index":1145,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["python",{"_index":1773,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["q",{"_index":713,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["qu",{"_index":690,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"39":{},"41":{},"43":{}},"component":{},"keyword":{}}],["qualiti",{"_index":923,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["qualitygat",{"_index":1467,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["quer",{"_index":771,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"16":{},"18":{},"23":{},"29":{},"30":{},"35":{},"38":{},"39":{},"41":{},"43":{}},"component":{},"keyword":{}}],["quickstart",{"_index":2038,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["quier",{"_index":1544,"title":{},"name":{},"text":{"12":{},"17":{},"24":{},"28":{},"36":{},"39":{},"41":{},"44":{}},"component":{},"keyword":{}}],["quit",{"_index":1641,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["r",{"_index":2049,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["raiz",{"_index":450,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{}},"component":{},"keyword":{}}],["ram",{"_index":1274,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["rap",{"_index":1981,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["rapid",{"_index":1418,"title":{},"name":{},"text":{"11":{},"17":{},"23":{},"28":{},"35":{},"47":{}},"component":{},"keyword":{}}],["raton",{"_index":1104,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["rdp",{"_index":1620,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["re",{"_index":1316,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["read",{"_index":1062,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["readi",{"_index":2103,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["readme.md",{"_index":109,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["readonli",{"_index":1440,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["realic",{"_index":411,"title":{},"name":{},"text":{"4":{},"10":{},"16":{},"17":{},"22":{},"28":{},"29":{},"34":{}},"component":{},"keyword":{}}],["realiz",{"_index":31,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"47":{}},"component":{},"keyword":{}}],["realment",{"_index":907,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"39":{},"41":{}},"component":{},"keyword":{}}],["reassign",{"_index":1449,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reboot",{"_index":1044,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["reci",{"_index":196,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["recib",{"_index":258,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{}},"component":{},"keyword":{}}],["recien",{"_index":211,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"17":{},"22":{},"26":{},"28":{},"34":{}},"component":{},"keyword":{}}],["recog",{"_index":1924,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["recom",{"_index":919,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"24":{},"29":{},"36":{}},"component":{},"keyword":{}}],["recomend",{"_index":433,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"11":{},"12":{},"16":{},"17":{},"18":{},"23":{},"24":{},"28":{},"29":{},"30":{},"35":{},"36":{},"41":{}},"component":{},"keyword":{}}],["recomiend",{"_index":222,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"12":{},"14":{},"17":{},"18":{},"20":{},"24":{},"26":{},"28":{},"30":{},"32":{},"36":{}},"component":{},"keyword":{}}],["reconstruccion",{"_index":499,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["record",{"_index":776,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"16":{},"18":{},"23":{},"29":{},"30":{},"35":{},"40":{}},"component":{},"keyword":{}}],["recordcoverage(tool",{"_index":1557,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["recordissu",{"_index":914,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["recoveri",{"_index":1665,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["recuerd",{"_index":215,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"39":{},"40":{},"47":{}},"component":{},"keyword":{}}],["recur",{"_index":226,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"41":{},"44":{}},"component":{},"keyword":{}}],["red",{"_index":119,"title":{},"name":{},"text":{"2":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["rediseñ",{"_index":1856,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["reduc",{"_index":1994,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["reemplaz",{"_index":1574,"title":{},"name":{},"text":{"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["refer",{"_index":552,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"12":{},"16":{},"17":{},"22":{},"23":{},"24":{},"28":{},"29":{},"34":{},"35":{},"36":{},"41":{},"47":{}},"component":{},"keyword":{}}],["reformat",{"_index":1417,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["region",{"_index":158,"title":{},"name":{},"text":{"2":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["registr",{"_index":353,"title":{"4-6":{},"10-2":{},"17-8":{},"20-2":{},"22-2":{},"28-8":{},"32-2":{},"34-2":{},"38-1":{},"38-5":{}},"name":{},"text":{"2":{},"4":{},"8":{},"10":{},"14":{},"17":{},"20":{},"22":{},"26":{},"28":{},"32":{},"34":{},"37":{},"38":{},"39":{},"40":{},"47":{}},"component":{},"keyword":{}}],["registrart",{"_index":350,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["registri",{"_index":402,"title":{"4-2":{},"8-2":{},"17-2":{},"28-2":{}},"name":{},"text":{"4":{},"8":{},"10":{},"17":{},"20":{},"22":{},"28":{},"32":{},"34":{}},"component":{},"keyword":{}}],["regl",{"_index":120,"title":{},"name":{},"text":{"2":{},"10":{},"11":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["reinici",{"_index":581,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"11":{},"16":{},"17":{},"18":{},"20":{},"23":{},"28":{},"29":{},"30":{},"32":{},"35":{},"40":{}},"component":{},"keyword":{}}],["rel",{"_index":1181,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{},"43":{},"44":{}},"component":{},"keyword":{}}],["relacion",{"_index":1377,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["relat",{"_index":214,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"41":{}},"component":{},"keyword":{}}],["relev",{"_index":1777,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["remot",{"_index":1147,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["remov",{"_index":728,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["rep",{"_index":1589,"title":{},"name":{},"text":{"17":{},"23":{},"28":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["repart",{"_index":1683,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["repet",{"_index":1766,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["repetid",{"_index":1685,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["repit",{"_index":649,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{}},"component":{},"keyword":{}}],["repo/petclinic:1.0",{"_index":1592,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["repo_loc",{"_index":1609,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["repo_nam",{"_index":1608,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["report",{"_index":874,"title":{},"name":{},"text":{"5":{},"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["reportd",{"_index":1391,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reporter@v1",{"_index":2120,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["reporters=default",{"_index":1357,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reporters=jest",{"_index":1358,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reportfil",{"_index":1392,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reportnam",{"_index":1394,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reports/test",{"_index":640,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"40":{}},"component":{},"keyword":{}}],["repositori",{"_index":83,"title":{"17-3":{},"17-4":{},"28-3":{},"28-4":{},"43-2":{},"44-2":{},"47-1":{},"47-6":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"40":{},"41":{},"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["repostori",{"_index":1732,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["req",{"_index":1315,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["requ",{"_index":1510,"title":{},"name":{},"text":{"12":{},"24":{},"36":{},"41":{}},"component":{},"keyword":{}}],["requer",{"_index":1670,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["request",{"_index":940,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["request(app).get('/').expect('hel",{"_index":1348,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["request(app).get('/john').expect('hel",{"_index":1349,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["requier",{"_index":722,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["requir",{"_index":913,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["require(\"./app",{"_index":1304,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["require(\"./hel",{"_index":1335,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["require(\"supertest",{"_index":1342,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["require('express",{"_index":1312,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["required_provid",{"_index":151,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["requisit",{"_index":1478,"title":{},"name":{},"text":{"11":{},"12":{},"23":{},"24":{},"35":{},"36":{},"47":{}},"component":{},"keyword":{}}],["res.send('hel",{"_index":1317,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["res.send(new",{"_index":1319,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["reserv",{"_index":367,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["reset",{"_index":2146,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["resolu",{"_index":1866,"title":{"41-13":{}},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["resolv",{"_index":512,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["respect",{"_index":890,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"24":{},"29":{},"36":{}},"component":{},"keyword":{}}],["respon",{"_index":1345,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["respond",{"_index":1340,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["respositori",{"_index":427,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["respuest",{"_index":1615,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["rest",{"_index":306,"title":{},"name":{},"text":{"2":{},"8":{},"14":{},"17":{},"20":{},"23":{},"26":{},"28":{},"32":{},"35":{}},"component":{},"keyword":{}}],["restablec",{"_index":1505,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["restant",{"_index":1501,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["restart",{"_index":1200,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["restrict",{"_index":1396,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["resuelv",{"_index":1942,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["result",{"_index":267,"title":{"44-4":{}},"name":{},"text":{"2":{},"5":{},"6":{},"11":{},"14":{},"16":{},"18":{},"23":{},"26":{},"29":{},"30":{},"35":{},"38":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["result.json",{"_index":2127,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["result.xml",{"_index":1455,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["resum",{"_index":2108,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["return",{"_index":1329,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"38":{}},"component":{},"keyword":{}}],["reutiliz",{"_index":1887,"title":{},"name":{},"text":{"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["revi",{"_index":261,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"34":{},"35":{},"36":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["revis",{"_index":49,"title":{},"name":{},"text":{"1":{},"13":{},"25":{},"38":{},"40":{},"41":{},"42":{},"44":{}},"component":{},"keyword":{}}],["rm",{"_index":648,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["rmi",{"_index":730,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["robot",{"_index":227,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["rockin",{"_index":1266,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["roj",{"_index":868,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["rol",{"_index":186,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["root",{"_index":1049,"title":{},"name":{},"text":{"6":{},"8":{},"11":{},"12":{},"18":{},"20":{},"23":{},"24":{},"30":{},"32":{},"35":{},"36":{},"40":{}},"component":{},"keyword":{}}],["rsa",{"_index":1088,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["rsync",{"_index":2077,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["rubi",{"_index":1774,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["rul",{"_index":1446,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["run",{"_index":463,"title":{},"name":{},"text":{"4":{},"5":{},"8":{},"10":{},"11":{},"16":{},"17":{},"20":{},"22":{},"23":{},"28":{},"29":{},"32":{},"34":{},"35":{},"40":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["runn",{"_index":2045,"title":{},"name":{},"text":{"43":{},"44":{}},"component":{},"keyword":{}}],["runner.",{"_index":2099,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["runtim",{"_index":476,"title":{},"name":{},"text":{"4":{},"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["rut",{"_index":213,"title":{},"name":{},"text":{"2":{},"6":{},"11":{},"14":{},"18":{},"23":{},"26":{},"30":{},"35":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["rw",{"_index":1048,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["s",{"_index":467,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{}},"component":{},"keyword":{}}],["s.o",{"_index":1029,"title":{},"name":{},"text":{"6":{},"12":{},"18":{},"24":{},"30":{},"36":{}},"component":{},"keyword":{}}],["s/n",{"_index":362,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["saa",{"_index":935,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["sab",{"_index":916,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"47":{}},"component":{},"keyword":{}}],["sacrament",{"_index":361,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["sail",{"_index":1667,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["sailsj",{"_index":1663,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["sal",{"_index":128,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"11":{},"12":{},"14":{},"17":{},"18":{},"23":{},"24":{},"26":{},"28":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["salt",{"_index":509,"title":{},"name":{},"text":{"4":{},"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["salv",{"_index":1508,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["sandbox",{"_index":1403,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["sav",{"_index":1214,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"20":{},"23":{},"24":{},"32":{},"35":{},"36":{},"47":{}},"component":{},"keyword":{}}],["scann",{"_index":929,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["scm",{"_index":628,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["scm.com",{"_index":1493,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["scp",{"_index":568,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["script",{"_index":644,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"11":{},"17":{},"18":{},"22":{},"23":{},"28":{},"30":{},"34":{},"35":{},"38":{},"39":{},"47":{}},"component":{},"keyword":{}}],["scritp",{"_index":1401,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["seccion",{"_index":244,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"11":{},"12":{},"14":{},"17":{},"18":{},"22":{},"23":{},"24":{},"26":{},"28":{},"30":{},"34":{},"35":{},"36":{},"41":{},"47":{}},"component":{},"keyword":{}}],["second",{"_index":1605,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["secret",{"_index":541,"title":{"47-6":{}},"name":{},"text":{"4":{},"17":{},"28":{},"47":{}},"component":{},"keyword":{}}],["secret/file.json",{"_index":569,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["secrets.github_tok",{"_index":2124,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["secrets.ssh_host",{"_index":2143,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["secrets.ssh_private_key",{"_index":2137,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["secur",{"_index":1059,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["segu",{"_index":2036,"title":{},"name":{},"text":{"43":{},"44":{}},"component":{},"keyword":{}}],["segun",{"_index":442,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["segund",{"_index":501,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"11":{},"16":{},"17":{},"18":{},"20":{},"23":{},"28":{},"29":{},"30":{},"32":{},"35":{},"41":{}},"component":{},"keyword":{}}],["segur",{"_index":920,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"12":{},"16":{},"17":{},"18":{},"23":{},"24":{},"28":{},"29":{},"30":{},"35":{},"36":{}},"component":{},"keyword":{}}],["seleccion",{"_index":177,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"41":{},"43":{},"44":{}},"component":{},"keyword":{}}],["select",{"_index":679,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["selector",{"_index":1863,"title":{"41-6":{}},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["selenium",{"_index":665,"title":{"37":{},"39":{},"40":{},"41":{},"38-4":{},"38-7":{},"39-1":{},"39-2":{},"40-1":{},"41-2":{}},"name":{"38":{},"39":{},"40":{},"41":{}},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"37":{},"38":{},"39":{},"40":{},"41":{}},"component":{"37":{},"38":{},"39":{},"40":{},"41":{}},"keyword":{}}],["selenium.git",{"_index":1837,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["seleniumhmis21",{"_index":1857,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["self",{"_index":1405,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["seman",{"_index":1497,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["semaphoreci",{"_index":1262,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["sencil",{"_index":1234,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{},"39":{},"44":{}},"component":{},"keyword":{}}],["send",{"_index":756,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{}},"component":{},"keyword":{}}],["sendkey",{"_index":1934,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["sendkeys(\"nuevovalor",{"_index":2000,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["sentenc",{"_index":1738,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["separ",{"_index":2026,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["ser",{"_index":38,"title":{},"name":{},"text":{"1":{},"4":{},"5":{},"6":{},"11":{},"13":{},"16":{},"17":{},"18":{},"23":{},"25":{},"28":{},"29":{},"30":{},"35":{},"38":{},"39":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["seri",{"_index":1424,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"39":{},"47":{}},"component":{},"keyword":{}}],["serv",{"_index":981,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"44":{},"47":{}},"component":{},"keyword":{}}],["servic",{"_index":538,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{},"47":{}},"component":{},"keyword":{}}],["services/hel",{"_index":1313,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["servici",{"_index":6,"title":{"2-2":{},"14-2":{},"26-2":{}},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"34":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"42":{},"43":{}},"component":{},"keyword":{}}],["servidor",{"_index":379,"title":{},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"16":{},"23":{},"26":{},"29":{},"35":{},"39":{},"47":{}},"component":{},"keyword":{}}],["servlet",{"_index":774,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["sesion",{"_index":345,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"12":{},"14":{},"16":{},"17":{},"20":{},"24":{},"26":{},"28":{},"29":{},"32":{},"36":{}},"component":{},"keyword":{}}],["set",{"_index":1368,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"43":{},"47":{}},"component":{},"keyword":{}}],["setup",{"_index":1260,"title":{},"name":{},"text":{"10":{},"22":{},"34":{},"41":{}},"component":{},"keyword":{}}],["sh",{"_index":634,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["share",{"_index":1037,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["sharedarraybuff",{"_index":1441,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["shell",{"_index":505,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"12":{},"17":{},"18":{},"20":{},"24":{},"28":{},"30":{},"32":{},"36":{}},"component":{},"keyword":{}}],["shimataro/ssh",{"_index":2135,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["show",{"_index":309,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["si",{"_index":234,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["sid",{"_index":1678,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{},"keyword":{}}],["siempr",{"_index":576,"title":{},"name":{},"text":{"4":{},"5":{},"8":{},"11":{},"16":{},"17":{},"20":{},"23":{},"28":{},"29":{},"32":{},"35":{},"39":{}},"component":{},"keyword":{}}],["sig",{"_index":658,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"12":{},"16":{},"17":{},"22":{},"24":{},"28":{},"29":{},"34":{},"36":{},"40":{},"41":{}},"component":{},"keyword":{}}],["signif",{"_index":2024,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["sigu",{"_index":1795,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["siguient",{"_index":192,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["siguietn",{"_index":897,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["simil",{"_index":377,"title":{},"name":{},"text":{"2":{},"11":{},"14":{},"23":{},"26":{},"35":{},"38":{},"41":{},"47":{}},"component":{},"keyword":{}}],["similar",{"_index":1067,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{},"47":{}},"component":{},"keyword":{}}],["simpl",{"_index":1259,"title":{},"name":{},"text":{"10":{},"22":{},"34":{},"41":{}},"component":{},"keyword":{}}],["simplement",{"_index":304,"title":{},"name":{},"text":{"2":{},"5":{},"6":{},"8":{},"10":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"36":{},"38":{},"40":{},"41":{}},"component":{},"keyword":{}}],["simplif",{"_index":2133,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["simul",{"_index":1806,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["sin",{"_index":1470,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"29":{},"35":{},"41":{}},"component":{},"keyword":{}}],["sirv",{"_index":1980,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["sistem",{"_index":1148,"title":{},"name":{},"text":{"7":{},"12":{},"19":{},"24":{},"31":{},"36":{},"39":{},"41":{},"43":{}},"component":{},"keyword":{}}],["sit",{"_index":899,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"43":{}},"component":{},"keyword":{}}],["siti",{"_index":1889,"title":{},"name":{},"text":{"41":{},"43":{}},"component":{},"keyword":{}}],["size=1920,1080",{"_index":1918,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["sleep",{"_index":1972,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["slim",{"_index":441,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["sobr",{"_index":1923,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["socket",{"_index":1023,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{}},"component":{},"keyword":{}}],["softwar",{"_index":777,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"16":{},"19":{},"20":{},"29":{},"31":{},"32":{},"40":{},"43":{}},"component":{},"keyword":{}}],["sol",{"_index":1163,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["solicit",{"_index":1744,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["solicitud",{"_index":2085,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["solucion",{"_index":593,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{},"41":{}},"component":{},"keyword":{}}],["son",{"_index":930,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["sonar:son",{"_index":938,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["sonarcloud",{"_index":934,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["sonarqub",{"_index":887,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["soport",{"_index":764,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"41":{},"43":{}},"component":{},"keyword":{}}],["sourc",{"_index":152,"title":{},"name":{},"text":{"2":{},"10":{},"14":{},"22":{},"26":{},"34":{}},"component":{},"keyword":{}}],["sourcecoderetent",{"_index":1558,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["sourcetyp",{"_index":1445,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["spac",{"_index":732,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["spain",{"_index":364,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["spring",{"_index":445,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["spring.profiles.active=mysql",{"_index":810,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["src",{"_index":1300,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["src/**/*.j",{"_index":1453,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["src/app.j",{"_index":1308,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["src/app.test.j",{"_index":1341,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["src/main",{"_index":1289,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["src/main.j",{"_index":1288,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["src/servic",{"_index":1333,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["src/services/hel",{"_index":1322,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["srw",{"_index":1047,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ssh",{"_index":571,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"47":{}},"component":{},"keyword":{}}],["ssh/id_r",{"_index":1598,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["ssh/id_rsa_deploy",{"_index":711,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{}},"component":{},"keyword":{}}],["ssh/known_host",{"_index":1137,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"47":{}},"component":{},"keyword":{}}],["ssh_host",{"_index":2138,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["ssh_private_key",{"_index":2132,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["stabl",{"_index":1187,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["stackoverflow",{"_index":758,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["stag",{"_index":399,"title":{"4-1":{},"17-1":{},"28-1":{}},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["stage",{"_index":651,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["stage(\"build",{"_index":643,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["stage(\"checkout",{"_index":625,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["stage(\"deploy",{"_index":655,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["stage(\"git",{"_index":1247,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["stage(\"push",{"_index":684,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["stage(\"run",{"_index":1253,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["stage('analysi",{"_index":1462,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["stage('back",{"_index":1075,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["stage('build",{"_index":970,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["stage('clon",{"_index":1352,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["stage('compil",{"_index":632,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["stage('deploy",{"_index":702,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{}},"component":{},"keyword":{}}],["stage('end",{"_index":667,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["stage('firefox",{"_index":1838,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["stage('front",{"_index":1076,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["stage('git",{"_index":829,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"40":{}},"component":{},"keyword":{}}],["stage('instal",{"_index":1249,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["stage('remov",{"_index":741,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["stage('test",{"_index":1250,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["start",{"_index":475,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["stash",{"_index":2145,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["stat",{"_index":308,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["statu",{"_index":610,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"44":{}},"component":{},"keyword":{}}],["stdin",{"_index":550,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["step",{"_index":626,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"10":{},"11":{},"16":{},"17":{},"18":{},"22":{},"23":{},"28":{},"29":{},"30":{},"34":{},"35":{},"40":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["stop",{"_index":656,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{}},"component":{},"keyword":{}}],["stopal",{"_index":1481,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["stopp",{"_index":729,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["storag",{"_index":534,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["string",{"_index":502,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{}},"component":{},"keyword":{}}],["student",{"_index":321,"title":{"12-5":{},"24-5":{},"36-5":{}},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{}},"component":{},"keyword":{}}],["studi",{"_index":1513,"title":{},"name":{},"text":{"12":{},"16":{},"24":{},"29":{},"36":{}},"component":{},"keyword":{}}],["style",{"_index":1406,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["sub",{"_index":217,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"43":{},"47":{}},"component":{},"keyword":{}}],["sublim",{"_index":1111,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["success",{"_index":637,"title":{},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"40":{},"47":{}},"component":{},"keyword":{}}],["suce",{"_index":1016,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["sud",{"_index":574,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"11":{},"12":{},"17":{},"18":{},"20":{},"24":{},"28":{},"30":{},"32":{},"36":{},"40":{},"47":{}},"component":{},"keyword":{}}],["suel",{"_index":2109,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["sufici",{"_index":188,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"40":{},"41":{}},"component":{},"keyword":{}}],["suggest",{"_index":1210,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["sugier",{"_index":1549,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["suit",{"_index":1677,"title":{},"name":{},"text":{"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["superior",{"_index":1546,"title":{},"name":{},"text":{"16":{},"29":{},"41":{}},"component":{},"keyword":{}}],["supertest",{"_index":1282,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["supon",{"_index":1053,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"41":{}},"component":{},"keyword":{}}],["supong",{"_index":908,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["supplement",{"_index":2052,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["support",{"_index":1990,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["supuest",{"_index":1780,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["sustitu",{"_index":162,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"40":{},"41":{}},"component":{},"keyword":{}}],["switch",{"_index":1907,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["syntax",{"_index":1860,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["system.getproperty(\"hudson.model.directorybrowsersupport.csp",{"_index":1409,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["system.setproperty(\"hudson.model.directorybrowsersupport.csp",{"_index":1402,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["system.setproperty(\"webdriver.chrome.driv",{"_index":1901,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["system.setproperty(\"webdriver.gecko.driv",{"_index":1845,"title":{},"name":{},"text":{"40":{},"41":{}},"component":{},"keyword":{}}],["t",{"_index":506,"title":{},"name":{},"text":{"4":{},"6":{},"10":{},"12":{},"17":{},"18":{},"22":{},"24":{},"28":{},"30":{},"34":{},"36":{}},"component":{},"keyword":{}}],["tabl",{"_index":1736,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["tactic",{"_index":1264,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["tag",{"_index":1190,"title":{},"name":{},"text":{"8":{},"10":{},"11":{},"17":{},"20":{},"22":{},"23":{},"28":{},"32":{},"34":{},"35":{},"40":{},"43":{}},"component":{},"keyword":{}}],["tags/v0.1",{"_index":1275,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["tal",{"_index":95,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"7":{},"10":{},"14":{},"16":{},"17":{},"19":{},"22":{},"26":{},"28":{},"29":{},"31":{},"34":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["tamañ",{"_index":1974,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["tampoc",{"_index":1849,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["tant",{"_index":1796,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["tap",{"_index":1281,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["tar",{"_index":616,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{},"40":{}},"component":{},"keyword":{}}],["tard",{"_index":274,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"14":{},"16":{},"17":{},"20":{},"26":{},"28":{},"29":{},"32":{},"41":{},"44":{},"47":{}},"component":{},"keyword":{}}],["target",{"_index":1386,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"29":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["target/*.j",{"_index":503,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{}},"component":{},"keyword":{}}],["target/jacoco.exec",{"_index":870,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["target/sit",{"_index":901,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["target/site/jacoc",{"_index":855,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["target/surefir",{"_index":639,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"40":{}},"component":{},"keyword":{}}],["target=<recur",{"_index":313,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["tarjet",{"_index":1526,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["tcp",{"_index":588,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["tcp:8081",{"_index":1622,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["tech",{"_index":328,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["tecl",{"_index":2006,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["tecnic",{"_index":881,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["tecnolog",{"_index":750,"title":{},"name":{},"text":{"4":{},"6":{},"11":{},"17":{},"18":{},"23":{},"28":{},"30":{},"35":{},"38":{}},"component":{},"keyword":{}}],["tem",{"_index":918,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["templat",{"_index":103,"title":{},"name":{},"text":{"2":{},"14":{},"26":{},"40":{}},"component":{},"keyword":{}}],["temurin",{"_index":977,"title":{},"name":{},"text":{"6":{},"16":{},"17":{},"18":{},"28":{},"29":{},"30":{}},"component":{},"keyword":{}}],["ten",{"_index":277,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["tendenc",{"_index":1367,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["tenl",{"_index":1728,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["terc",{"_index":1781,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["termin",{"_index":210,"title":{},"name":{},"text":{"2":{},"6":{},"8":{},"12":{},"14":{},"18":{},"20":{},"24":{},"26":{},"30":{},"32":{},"36":{},"44":{}},"component":{},"keyword":{}}],["terraform",{"_index":24,"title":{"2-1":{},"2-3":{},"2-4":{},"2-5":{},"2-6":{},"2-7":{},"12-3":{},"14-1":{},"14-3":{},"14-4":{},"14-5":{},"14-6":{},"14-7":{},"24-3":{},"26-1":{},"26-3":{},"26-4":{},"26-5":{},"26-6":{},"26-7":{},"36-3":{}},"name":{},"text":{"1":{},"2":{},"6":{},"12":{},"13":{},"14":{},"18":{},"24":{},"25":{},"26":{},"30":{},"36":{}},"component":{},"keyword":{}}],["terraformgooglecloudsampl",{"_index":104,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["test",{"_index":633,"title":{"40":{},"38-4":{},"38-5":{},"38-6":{},"38-9":{},"41-4":{}},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"44":{},"47":{}},"component":{"37":{},"38":{},"39":{},"40":{},"41":{}},"keyword":{}}],["test*.xml",{"_index":1251,"title":{},"name":{},"text":{"10":{},"11":{},"22":{},"23":{},"34":{},"35":{}},"component":{},"keyword":{}}],["test.j",{"_index":1473,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["test.results.xml",{"_index":1361,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["test/*.j",{"_index":1475,"title":{},"name":{},"text":{"11":{}},"component":{},"keyword":{}}],["text",{"_index":1108,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{},"38":{},"39":{},"41":{}},"component":{},"keyword":{}}],["tf",{"_index":101,"title":{},"name":{},"text":{"2":{},"4":{},"14":{},"17":{},"26":{},"28":{}},"component":{},"keyword":{}}],["thoubleshout",{"_index":1867,"title":{"41-13":{}},"name":{},"text":{},"component":{},"keyword":{}}],["thread.sleep(1000",{"_index":1945,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["threat",{"_index":1060,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["threshold",{"_index":1468,"title":{},"name":{},"text":{"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["through",{"_index":757,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["throw",{"_index":1899,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["tiemp",{"_index":1787,"title":{},"name":{},"text":{"39":{},"41":{},"44":{}},"component":{},"keyword":{}}],["time.sleep",{"_index":1950,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["timeunit.second",{"_index":1969,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["tip",{"_index":204,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"38":{},"39":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["tipic",{"_index":1671,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["tir",{"_index":1204,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["tirigg",{"_index":1373,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["tmp",{"_index":1814,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["tmp/dkey",{"_index":1183,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["toc",{"_index":1853,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["tod",{"_index":745,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"12":{},"16":{},"17":{},"22":{},"23":{},"24":{},"28":{},"29":{},"34":{},"35":{},"36":{},"41":{},"47":{}},"component":{},"keyword":{}}],["tok",{"_index":936,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"47":{}},"component":{},"keyword":{}}],["token",{"_index":233,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["tom",{"_index":1668,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["tomcat",{"_index":773,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["tool",{"_index":624,"title":{"8-6":{},"20-6":{},"32-6":{}},"name":{},"text":{"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"40":{}},"component":{},"keyword":{}}],["top",{"_index":1263,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["total",{"_index":1503,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["tra",{"_index":140,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"41":{},"43":{}},"component":{},"keyword":{}}],["trabaj",{"_index":413,"title":{"47-7":{}},"name":{},"text":{"4":{},"11":{},"12":{},"16":{},"17":{},"23":{},"24":{},"28":{},"29":{},"35":{},"36":{},"38":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{}},"component":{},"keyword":{}}],["traduc",{"_index":1765,"title":{},"name":{},"text":{"39":{},"41":{}},"component":{},"keyword":{}}],["transf",{"_index":514,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["transicion",{"_index":1576,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["transport",{"_index":1171,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["trat",{"_index":905,"title":{},"name":{},"text":{"5":{},"8":{},"16":{},"20":{},"29":{},"32":{},"41":{},"43":{}},"component":{},"keyword":{}}],["trave",{"_index":1079,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["tre",{"_index":98,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["trend",{"_index":873,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["tri",{"_index":1020,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"41":{}},"component":{},"keyword":{}}],["triger",{"_index":1371,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["trigger",{"_index":2097,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["tru",{"_index":657,"title":{},"name":{},"text":{"4":{},"5":{},"10":{},"11":{},"16":{},"17":{},"22":{},"23":{},"28":{},"29":{},"34":{},"35":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["tutori",{"_index":652,"title":{},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{},"38":{}},"component":{},"keyword":{}}],["type",{"_index":1469,"title":{},"name":{},"text":{"11":{},"12":{},"23":{},"24":{},"35":{},"36":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["type=\"dat",{"_index":1725,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["type=\"email",{"_index":1695,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["type=\"password",{"_index":1719,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["u",{"_index":548,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"38":{},"40":{}},"component":{},"keyword":{}}],["ual",{"_index":168,"title":{},"name":{},"text":{"2":{},"8":{},"11":{},"14":{},"20":{},"23":{},"26":{},"32":{},"35":{},"38":{},"41":{}},"component":{},"keyword":{}}],["ualjjcan",{"_index":1193,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["ualjjcanada/jenkin",{"_index":1191,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{}},"component":{},"keyword":{}}],["ubic",{"_index":1092,"title":{},"name":{},"text":{"6":{},"17":{},"18":{},"28":{},"30":{}},"component":{},"keyword":{}}],["ubuntu",{"_index":955,"title":{},"name":{},"text":{"5":{},"7":{},"8":{},"16":{},"19":{},"20":{},"29":{},"31":{},"32":{},"40":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["ubuntu@${dns_deploy_instanc",{"_index":1633,"title":{},"name":{},"text":{"17":{},"23":{},"28":{},"35":{}},"component":{},"keyword":{}}],["ubuntu@deploy_machin",{"_index":946,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"29":{}},"component":{},"keyword":{}}],["ubuntu@deploy_machine:~/spr",{"_index":949,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["ubuntu@dns_deploy_instanc",{"_index":712,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["ubuntu@dns_maquina_deploy",{"_index":572,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["ubuntu@dns_maquina_deploy:~/keyfile.json",{"_index":570,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["ubuntu@inst",{"_index":1085,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ubuntu@instancia_deploy",{"_index":1123,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ubuntu@maquina_deploy",{"_index":1144,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ubuntu@maquina_jenkin",{"_index":1159,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["ubuntu@web",{"_index":606,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["ui",{"_index":2053,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["ultim",{"_index":124,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"39":{},"40":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["una",{"_index":671,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["unic",{"_index":798,"title":{},"name":{},"text":{"5":{},"12":{},"16":{},"24":{},"29":{},"36":{},"38":{},"41":{}},"component":{},"keyword":{}}],["unid",{"_index":1586,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["unitari",{"_index":850,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{}},"component":{},"keyword":{}}],["univ",{"_index":358,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["unix",{"_index":998,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["unix:///var/run/docker.sock",{"_index":1024,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["unsaf",{"_index":1407,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["unstabl",{"_index":1562,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["unu",{"_index":742,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{}},"component":{},"keyword":{}}],["unzip",{"_index":1823,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["up",{"_index":814,"title":{},"name":{},"text":{"5":{},"11":{},"16":{},"23":{},"29":{},"35":{},"38":{}},"component":{},"keyword":{}}],["updat",{"_index":1170,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"40":{},"43":{}},"component":{},"keyword":{}}],["uplo",{"_index":683,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"43":{}},"component":{},"keyword":{}}],["upload",{"_index":2061,"title":{},"name":{},"text":{"43":{}},"component":{},"keyword":{}}],["upstream",{"_index":421,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["url",{"_index":426,"title":{"38-9":{}},"name":{},"text":{"4":{},"11":{},"17":{},"23":{},"28":{},"35":{},"38":{},"39":{},"40":{},"43":{}},"component":{},"keyword":{}}],["url/systeminf",{"_index":1810,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["url:'https://github.com/spr",{"_index":831,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["url:'https://github.com/ualcnsa/spr",{"_index":631,"title":{},"name":{},"text":{"4":{}},"component":{},"keyword":{}}],["url:'https://github.com/ualcnsa2024/spr",{"_index":1612,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["us",{"_index":289,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"11":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["usa",{"_index":356,"title":{"38-3":{}},"name":{},"text":{"2":{},"4":{},"8":{},"11":{},"14":{},"17":{},"20":{},"23":{},"26":{},"28":{},"32":{},"35":{},"38":{},"40":{},"41":{},"43":{}},"component":{},"keyword":{}}],["usad",{"_index":1203,"title":{},"name":{},"text":{"8":{},"20":{},"32":{},"39":{},"43":{}},"component":{},"keyword":{}}],["usal",{"_index":731,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["usand",{"_index":444,"title":{"6-6":{},"18-6":{},"30-6":{}},"name":{},"text":{"4":{},"5":{},"11":{},"12":{},"16":{},"17":{},"23":{},"24":{},"28":{},"29":{},"35":{},"36":{},"38":{},"39":{},"40":{},"47":{}},"component":{},"keyword":{}}],["usar",{"_index":94,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"34":{},"35":{},"36":{},"38":{},"40":{},"43":{},"47":{}},"component":{},"keyword":{}}],["usarl",{"_index":301,"title":{},"name":{},"text":{"2":{},"12":{},"14":{},"24":{},"26":{},"36":{},"38":{}},"component":{},"keyword":{}}],["usepathforsuitenam",{"_index":1362,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["user",{"_index":580,"title":{},"name":{},"text":{"4":{},"6":{},"8":{},"17":{},"18":{},"20":{},"28":{},"30":{},"32":{},"40":{}},"component":{},"keyword":{}}],["user123",{"_index":556,"title":{},"name":{},"text":{"4":{},"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["userland",{"_index":586,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["usermod",{"_index":578,"title":{},"name":{},"text":{"4":{},"8":{},"17":{},"20":{},"28":{},"32":{},"40":{}},"component":{},"keyword":{}}],["username>/nodeapp",{"_index":1238,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["users/usuari",{"_index":1517,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["uso",{"_index":585,"title":{},"name":{},"text":{"4":{},"10":{},"12":{},"17":{},"22":{},"24":{},"28":{},"34":{},"36":{},"38":{},"39":{},"40":{},"42":{},"43":{}},"component":{},"keyword":{}}],["usr/share/mav",{"_index":1038,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["usr/share/maven/ref/set",{"_index":468,"title":{},"name":{},"text":{"4":{},"17":{},"28":{}},"component":{},"keyword":{}}],["usr/src/app",{"_index":1221,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["usuari",{"_index":167,"title":{"38-1":{},"38-5":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"40":{},"41":{},"44":{}},"component":{},"keyword":{}}],["usuario/contraseñ",{"_index":1083,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["usuario/tu",{"_index":1836,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["utf",{"_index":992,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["util",{"_index":63,"title":{"2-8":{},"14-8":{},"26-8":{}},"name":{},"text":{"4":{},"17":{},"28":{},"41":{}},"component":{},"keyword":{}}],["utiliz",{"_index":70,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["v",{"_index":962,"title":{},"name":{},"text":{"6":{},"8":{},"12":{},"16":{},"18":{},"20":{},"24":{},"29":{},"30":{},"32":{},"36":{}},"component":{},"keyword":{}}],["v0.1",{"_index":1273,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["v0.29.1",{"_index":1817,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["v1.1.6",{"_index":1539,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["va",{"_index":171,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"7":{},"11":{},"14":{},"17":{},"18":{},"19":{},"23":{},"26":{},"28":{},"30":{},"31":{},"35":{},"40":{},"41":{},"47":{}},"component":{},"keyword":{}}],["vac",{"_index":1722,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["vaci",{"_index":2112,"title":{},"name":{},"text":{"45":{}},"component":{},"keyword":{}}],["val",{"_index":888,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"38":{}},"component":{},"keyword":{}}],["valid",{"_index":1133,"title":{},"name":{},"text":{"6":{},"18":{},"30":{},"38":{},"43":{}},"component":{},"keyword":{}}],["validationmessag",{"_index":1702,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["valor",{"_index":126,"title":{"47-8":{}},"name":{},"text":{"2":{},"5":{},"11":{},"14":{},"16":{},"23":{},"26":{},"29":{},"35":{},"38":{},"41":{},"47":{}},"component":{},"keyword":{}}],["valor_navigatoruserag",{"_index":1741,"title":{},"name":{},"text":{"38":{}},"component":{},"keyword":{}}],["valu",{"_index":1690,"title":{},"name":{},"text":{"38":{},"41":{}},"component":{},"keyword":{}}],["vam",{"_index":320,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"7":{},"8":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"19":{},"20":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"31":{},"32":{},"34":{},"35":{},"38":{},"41":{},"43":{},"44":{},"45":{},"47":{}},"component":{},"keyword":{}}],["van",{"_index":739,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{},"39":{}},"component":{},"keyword":{}}],["var",{"_index":974,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{},"41":{}},"component":{},"keyword":{}}],["var.gcp_project",{"_index":157,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["var/jenkins_hom",{"_index":1102,"title":{},"name":{},"text":{"6":{},"8":{},"18":{},"20":{},"30":{},"32":{},"40":{}},"component":{},"keyword":{}}],["var/jenkins_home/.ssh/id_rsa_deploy",{"_index":1124,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["var/jenkins_home/.ssh/known_host",{"_index":1138,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["var/jenkins_home/tools/hudson.tasks.maven_maveninstallation/default_mav",{"_index":985,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["var/run/docker.sock",{"_index":1028,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["var/run/docker.sock:/var/run/docker.sock",{"_index":1198,"title":{},"name":{},"text":{"8":{},"20":{},"32":{}},"component":{},"keyword":{}}],["vari",{"_index":324,"title":{"6-6":{},"18-6":{},"30-6":{}},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"11":{},"14":{},"16":{},"17":{},"18":{},"20":{},"23":{},"26":{},"28":{},"29":{},"30":{},"32":{},"35":{},"38":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["variabl",{"_index":92,"title":{},"name":{},"text":{"2":{},"4":{},"10":{},"14":{},"17":{},"22":{},"23":{},"26":{},"28":{},"34":{},"35":{},"38":{},"40":{},"41":{}},"component":{},"keyword":{}}],["vay",{"_index":1790,"title":{},"name":{},"text":{"39":{}},"component":{},"keyword":{}}],["ve",{"_index":200,"title":{},"name":{},"text":{"2":{},"8":{},"14":{},"20":{},"26":{},"32":{},"41":{},"47":{}},"component":{},"keyword":{}}],["vea",{"_index":1953,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["veam",{"_index":1276,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"40":{},"41":{}},"component":{},"keyword":{}}],["vec",{"_index":650,"title":{},"name":{},"text":{"4":{},"17":{},"28":{},"39":{},"41":{}},"component":{},"keyword":{}}],["vem",{"_index":2111,"title":{},"name":{},"text":{"44":{}},"component":{},"keyword":{}}],["ven",{"_index":964,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["vendor",{"_index":986,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["ventan",{"_index":1207,"title":{},"name":{},"text":{"8":{},"12":{},"20":{},"24":{},"32":{},"36":{},"39":{},"41":{}},"component":{},"keyword":{}}],["ver",{"_index":266,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"38":{},"39":{},"40":{},"41":{},"44":{}},"component":{},"keyword":{}}],["vera",{"_index":283,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"8":{},"14":{},"16":{},"17":{},"20":{},"26":{},"28":{},"29":{},"32":{},"41":{}},"component":{},"keyword":{}}],["verd",{"_index":859,"title":{},"name":{},"text":{"5":{},"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["verdadero/f",{"_index":867,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["verif",{"_index":1136,"title":{},"name":{},"text":{"6":{},"11":{},"18":{},"23":{},"30":{},"35":{},"39":{},"43":{}},"component":{},"keyword":{}}],["verifi",{"_index":937,"title":{},"name":{},"text":{"5":{},"16":{},"29":{},"41":{}},"component":{},"keyword":{}}],["verl",{"_index":224,"title":{},"name":{},"text":{"2":{},"10":{},"14":{},"22":{},"26":{},"34":{},"40":{},"47":{}},"component":{},"keyword":{}}],["version",{"_index":14,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"5":{},"6":{},"8":{},"10":{},"11":{},"12":{},"13":{},"14":{},"16":{},"17":{},"18":{},"20":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"29":{},"30":{},"32":{},"34":{},"35":{},"36":{},"37":{},"40":{},"41":{},"42":{},"43":{}},"component":{},"keyword":{}}],["version>${mav",{"_index":1565,"title":{},"name":{},"text":{"16":{},"29":{}},"component":{},"keyword":{}}],["version>3.1.0</vers",{"_index":895,"title":{},"name":{},"text":{"5":{}},"component":{},"keyword":{}}],["version>3.141.59</vers",{"_index":1882,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["version>4.13.1</vers",{"_index":1878,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["vez",{"_index":249,"title":{},"name":{},"text":{"2":{},"4":{},"5":{},"6":{},"10":{},"11":{},"14":{},"16":{},"17":{},"18":{},"22":{},"23":{},"26":{},"28":{},"29":{},"30":{},"34":{},"35":{},"41":{},"43":{},"47":{}},"component":{},"keyword":{}}],["via",{"_index":752,"title":{},"name":{},"text":{"4":{},"5":{},"16":{},"17":{},"28":{},"29":{},"47":{}},"component":{},"keyword":{}}],["vid",{"_index":781,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["videotutori",{"_index":242,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["viend",{"_index":2058,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["vigil",{"_index":1426,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["vim",{"_index":1531,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["violacion",{"_index":1427,"title":{},"name":{},"text":{"11":{},"23":{},"35":{},"47":{}},"component":{},"keyword":{}}],["virtual",{"_index":22,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"6":{},"10":{},"11":{},"12":{},"13":{},"14":{},"17":{},"18":{},"22":{},"23":{},"24":{},"25":{},"26":{},"28":{},"30":{},"34":{},"35":{},"36":{},"38":{}},"component":{},"keyword":{}}],["visibilityofelementlocat",{"_index":1962,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["visibl",{"_index":1952,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["vist",{"_index":1997,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["visual",{"_index":1512,"title":{},"name":{},"text":{"12":{},"16":{},"24":{},"29":{},"36":{},"41":{},"47":{}},"component":{},"keyword":{}}],["visualiz",{"_index":854,"title":{},"name":{},"text":{"5":{},"6":{},"11":{},"16":{},"18":{},"23":{},"29":{},"30":{},"35":{},"40":{},"41":{}},"component":{},"keyword":{}}],["vm",{"_index":77,"title":{"5-5":{},"10-3":{},"11-6":{},"16-5":{},"22-3":{},"23-6":{},"29-5":{},"34-3":{},"35-6":{},"47-5":{}},"name":{},"text":{"2":{},"4":{},"6":{},"14":{},"17":{},"18":{},"26":{},"28":{},"30":{}},"component":{},"keyword":{}}],["void",{"_index":1898,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["volum",{"_index":822,"title":{},"name":{},"text":{"5":{},"6":{},"8":{},"16":{},"18":{},"20":{},"29":{},"30":{},"32":{}},"component":{},"keyword":{}}],["volv",{"_index":312,"title":{},"name":{},"text":{"2":{},"4":{},"6":{},"10":{},"14":{},"17":{},"18":{},"22":{},"26":{},"28":{},"30":{},"34":{},"39":{}},"component":{},"keyword":{}}],["voy",{"_index":331,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["vs",{"_index":1112,"title":{},"name":{},"text":{"6":{},"16":{},"18":{},"29":{},"30":{}},"component":{},"keyword":{}}],["vuelv",{"_index":296,"title":{},"name":{},"text":{"2":{},"8":{},"10":{},"11":{},"14":{},"20":{},"22":{},"23":{},"26":{},"32":{},"34":{},"35":{},"41":{}},"component":{},"keyword":{}}],["vulner",{"_index":921,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["w3c",{"_index":1986,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["wait",{"_index":1958,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["wait.until(expectedconditions.elementtobeclick",{"_index":1973,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["wait.until(expectedconditions.elementtobeclickable(by.xpath(\"//h2[contains(.,\\'ingeni",{"_index":1965,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["wait.until(expectedconditions.visibilityofelementlocated(by.xpath(\"//h2[contains(.,\\'ingeni",{"_index":1961,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["waitforelementvi",{"_index":1951,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["warn",{"_index":910,"title":{},"name":{},"text":{"5":{},"8":{},"16":{},"20":{},"29":{},"32":{}},"component":{},"keyword":{}}],["warp",{"_index":797,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["web",{"_index":380,"title":{"3":{},"15":{},"27":{}},"name":{},"text":{"2":{},"3":{},"5":{},"8":{},"9":{},"10":{},"12":{},"14":{},"15":{},"16":{},"20":{},"21":{},"22":{},"24":{},"26":{},"27":{},"29":{},"32":{},"33":{},"34":{},"36":{},"37":{},"38":{},"39":{},"41":{},"43":{},"46":{}},"component":{},"keyword":{}}],["webdriv",{"_index":1653,"title":{"41":{},"40-1":{},"41-1":{}},"name":{"41":{}},"text":{"37":{},"39":{},"40":{},"41":{}},"component":{},"keyword":{}}],["webdriverwait",{"_index":1957,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["webdriverwait(driv",{"_index":1959,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["webhook",{"_index":1267,"title":{"11-3":{},"23-3":{},"35-3":{}},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["wget",{"_index":1827,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["wherei",{"_index":1648,"title":{},"name":{},"text":{"23":{},"35":{}},"component":{},"keyword":{}}],["whoami",{"_index":961,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["wildcard",{"_index":1222,"title":{},"name":{},"text":{"10":{},"22":{},"34":{}},"component":{},"keyword":{}}],["window",{"_index":415,"title":{},"name":{},"text":{"4":{},"5":{},"12":{},"16":{},"17":{},"24":{},"28":{},"29":{},"36":{}},"component":{},"keyword":{}}],["windows_amd64",{"_index":1540,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["withcredenti",{"_index":1631,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["withcredentials([file(credenti",{"_index":1625,"title":{},"name":{},"text":{"17":{},"28":{}},"component":{},"keyword":{}}],["workaround",{"_index":1056,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["workd",{"_index":451,"title":{},"name":{},"text":{"4":{},"10":{},"17":{},"22":{},"28":{},"34":{}},"component":{},"keyword":{}}],["workflow",{"_index":2021,"title":{"43-3":{},"44-3":{},"47-2":{}},"name":{},"text":{"43":{},"44":{},"47":{}},"component":{},"keyword":{}}],["workflow_dispatch",{"_index":2043,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["workflow_run",{"_index":2118,"title":{},"name":{},"text":{"47":{}},"component":{},"keyword":{}}],["workspace/target/*.j",{"_index":948,"title":{},"name":{},"text":{"5":{},"16":{},"29":{}},"component":{},"keyword":{}}],["world",{"_index":481,"title":{},"name":{},"text":{"4":{},"10":{},"11":{},"17":{},"22":{},"23":{},"28":{},"34":{},"35":{},"47":{}},"component":{},"keyword":{}}],["world.j",{"_index":1323,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["world.test.j",{"_index":1334,"title":{},"name":{},"text":{"11":{},"23":{},"35":{}},"component":{},"keyword":{}}],["writ",{"_index":1063,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["write",{"_index":2016,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["x",{"_index":1803,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["x11",{"_index":1804,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["xml",{"_index":641,"title":{},"name":{},"text":{"4":{},"5":{},"11":{},"16":{},"17":{},"23":{},"28":{},"29":{},"35":{},"40":{},"41":{}},"component":{},"keyword":{}}],["xpath",{"_index":1927,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["xpath=\"//h2[contains(.,\\'ingeni",{"_index":1954,"title":{},"name":{},"text":{"41":{}},"component":{},"keyword":{}}],["xvf",{"_index":1820,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["xvfb",{"_index":1807,"title":{},"name":{},"text":{"40":{}},"component":{},"keyword":{}}],["y/o",{"_index":1759,"title":{},"name":{},"text":{"38":{},"39":{}},"component":{},"keyword":{}}],["yaml",{"_index":2041,"title":{},"name":{},"text":{"43":{},"44":{}},"component":{},"keyword":{}}],["ye",{"_index":1132,"title":{},"name":{},"text":{"6":{},"18":{},"30":{}},"component":{},"keyword":{}}],["year",{"_index":341,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}],["your_email@inlumine.ual.",{"_index":1520,"title":{},"name":{},"text":{"12":{},"24":{},"36":{}},"component":{},"keyword":{}}],["zip",{"_index":2065,"title":{},"name":{},"text":{"43":{},"47":{}},"component":{},"keyword":{}}],["zon",{"_index":160,"title":{},"name":{},"text":{"2":{},"14":{},"26":{}},"component":{},"keyword":{}}]],"pipeline":["stemmer-es","stemmer"]},"store":{"documents":{"1":{"id":1,"text":"Computación en la Nube, Servicios y Aplicaciones. Joaquín Cañadas <jjcanada@ual.es>, Francisco García <paco.garcia@ual.es> Version 0.22.2 Objetivos Crear una infraestructura de CI/CD en GCP con Máquinas Virtuales gestionadas con Terraform Diseñar proyectos Jenkins para la construcción y despliegue automatizado de aplicaciones en Java y NodeJs Realización y entrega La realización de estas actividades se realizará de forma individual. Serán la base para actividades posteriores que ser harán en equipo. La entrega será mediante el envío de un informe y el acceso al profesor a los servicios configurados por cada estudiante, para la revisión y evaluación de los mismos. Esta es la versión 0.22.2 de este documento.","title":"Despliegue continuo con Jenkins","component":"despliegue-continuo","version":"0.22.2","name":"index","url":"/despliegue-continuo/0.22.2/index.html","titles":[]},"2":{"id":2,"text":"Objetivos Utilizando una plantilla de terraform crea 2 instancias de máquina virtuales en tu proyecto en Google Cloud: Instancia para instalar Jenkins mediante un contenedor Docker. Instancia de despliegue (VM Deploy) con Docker y Docker Composer instalados. Fig. 1. Máquinas virtuales creadas con Terraform Para crear las instancias, utiliza la plantilla de terraform disponible en el repositorio https://github.com/ualcnsa/terraformGoogleCloudSample. En primer lugar realiza un fork del repositorio, para hacer las modificaciones al mismo que sean necesarias. Después, sobre tu fork, modifica las variables correspondientes para usar tu proyecto en la plantilla, tal y como se describe a continuación. El repositorio consta de tres archivos con extension .tf, y una carpeta con un template para la creación de instancias. terraformGoogleCloudSample ├── instance │ └── main.tf (4) ├── .gitignore ├── README.md ├── mynetwork.tf (2) ├── output.tf (3) └── provider.tf (1) 1 Descripción del proveedor sobre el que ejecutar la plantilla, en nuestro caso Google Cloud. 2 Plantilla principal. Crea la red, las reglas de firewall, las 2 instancias llamando al módulo main.tf de la carpeta instance, y por último realiza la inicialización de cada instancia. 3 Plantilla con los valores que se muestran de salida al finalizar la ejecución 4 Módulo genérico para crear una instancia. Es llamado desde network.tf pasándole las variables que necesita para crear la instancia. El archivo provider.tf deberás modificarlo: provider.tf # Descargar json con credenciales de aquí: # https://console.cloud.google.com/apis/credentials/serviceaccountkey # Tras ello definir la variable de entorno apuntando a el json # export GOOGLE_CLOUD_KEYFILE_JSON=path/file.json variable \"gcp_project\" { # Configurar el nombre del proyecto en GCP default = \"cnsa-2024\" (1) } terraform { required_providers { google = { source = \"hashicorp/google\" version = \"5.18.0\" (2) } } } provider \"google\" { project = var.gcp_project region = \"us-central1\" zone = \"us-central1-c\" } 1 Sustituye este valor por el nombre de tu proyecto, indicando el año correcto y concatenando tu nombre de usuario de la UAL (cnsa2024-abc123) 2 Versión del proveedor de Google Cloud que se va a utilizar. Utiliza la última disponible, que puedes consultar en aquí. Para que terraform pueda conectar al provider Google Cloud desde tu máquina local, debes proporcionar clave para la Cuenta de servicio. Seleccionar el proyecto Google Cloud. En el menú de navegación seleccionar IAM y administración | Cuentas de servicio. Fig. 2. Creación del archivo de credenciales Google Cloud 1 Selecciona el proyecto 2 Selecciona Crear Cuenta de Servicio Da un nombre a la cuenta de servicio (p.e. terraform), y pulsa Crear y Continuar Fig. 3. Propiedades del archivo de credenciales Google Cloud Selecciona el rol Administrador de Compute Engine (también es suficiente con Proyecto → Editor), y pulsa Continuar Fig. 4. Rol de administrador de la cuenta de servicio Deja en blanco los siguiente campos, y pulsa Listo. A continuación, accede a la cuenta de servicio recien creada: Fig. 5. Detalles de la nueva cuenta de servicio Ve a la pestaña Claves, Agregar Claves, Crear nueva Clave. Fig. 6. Nueva clave de cuenta de servicio Dejar JSON en el tipo de clave. Fig. 7. Nueva clave de cuenta de servicio JSON Seleccionar Crear. A continuación se descargará la clave privada. Fig. 8. Nueva clave descargada Guarda el archivo .json en la carpeta credentials del proyecto terraform. A continuación, en tu terminal define la variable de entorno apuntando a el archivo recién descargado, sustituyendo path/file.json por la ruta relativa y el nombre del archivo de credenciales: export GOOGLE_CLOUD_KEYFILE_JSON=path/file.json Recuerda: NUNCA subas tu archivo de credenciales json a un repositorio público como GitHub. Para evitarlo, añade el nombre el archivo de credenciales al .gitignore. Se recomienda guardar el archivo .json en una carpeta llamada credentials, porque ya estaría ignorado, puedes verlo en el .gitignore del repositorio que has forkeado. En el archivo de credenciales va tu clave privada que sustituye a tu usuario y contraseña para crear recursos en GCP. Hay robots que continuamente analizan repositorios públicos de GitHub buscando PRIVATE KEYS y API TOKENS. Si un hacker accede a ese archivo, lo usará para crear servicios hasta agotar tu crédito por completo, fundamentalmente para minar bitcoins. Videotutorial Accede al videotutorial explicativo de esta sección (mp4, 20 minutos, 171M). Una vez configurado el provider comprueba que la conexión es correcta: en tu terminal, ejecuta el comando terraform init para inicializar el proyecto como un proyecto terraform. Si todo es correcto aparecerá un mensaje de éxito. Fig. 9. terraform init correcto Si por el contrario recibes algún mensaje de error, revisa el motivo del error: Terraform puede que no esté accesible. Debería estar en el PATH Revisa si la variable de entorno si se ha guardado correctamente, ejecuta echo $GOOGLE_CLOUD_KEYFILE_JSON y comprueba que es la ruta y nombre de archivo correctos. Ejecuta el comando terraform plan para ver el resultado de elementos que se crearán o eliminarán al ejecutar la plantilla. Debe aparecer que se crearán 7 elementos. Fig. 10. terraform plan correcto Ejecuta el comando terraform apply --auto-approve para ejecutar la plantilla. Comenzará a crear los 7 elementos definidos en la plantilla. Tardará unos 5 minutos o incluso más, así que ten paciencia. Sobre todo tardará en ejecutar los bloques de inicialización de las instancias, en las que se actualizan los paquetes, se instala Docker y otros paquetes. En todo momento verás en pantalla el log de las operaciones que se están realizando. Si la primera vez que aplicas el plan aparece un mensaje de Error: …​ Error 403: Compute Engine API has not been used in project…​ es debido a que aun no se ha activado la API de Compute Engine en el proyecto. Haz clic en el enlace del error y activa la API. Espera un par de minutos y vuelve a lanzar terraform. Fig. 11. Habilitar la API de Compute Engine Tras la ejecución, comprueba que las instancias se han creado correctamente en tu proyecto Google Cloud. Apaga las instancias cuando dejes de usarlas, para evitar que consuman crédito. Cuando desees eliminar todos los recursos que hemos creado con esta plantilla, simplemente ejecuta terraform destroy. Por ahora debes simplemente apagar las instancias cuando no las uses, porque las necesitaremos en el resto de la asignatura. terraform state list: Muestra todos los recursos que gestiona terraform. terraform state show <recurso>: Muestra los detalles de un recurso concreto. terraform show: Muestra los detalles de todos los recursos. Si necesitas destruir y volver a crear un recurso concreto, y no todo el plan: terraform plan -destroy -target=<recurso>: Muestra el plan de destrucción de un recurso concreto. terraform destroy -target=<recurso> --auto-approve: Destruye un recurso concreto. Google Cloud ha asignado una IP pública estática a cada una de tus instancias (la IP no cambiará al apagar la instancia y volver a encenderla). A continuación, vamos a asignar nombres de DNS a esas IPs con Cloud DNS y uno de los servicios de DNS disponibles en el Student Pack de GitHub. GitHub Student pack ofrece varios servicios de nombres dominios gratuitos durante 1 año. Puedes usar name.com, namecheap, o .tech domains. En uno de ellos vamos a dar de alta un nombre de dominio para nuestras instancias en Google Cloud. Voy a describir cómo hacerlo con .tech. Accede a get.tech y prueba un nombre de dominio que te guste y que esté disponible. Cuando encuentres el adecuado, añadeló al carrito con la opción Buy for 1 year seleccionada. Fig. 12. Comprobar si el dominio está disponible en get.tech A continuación, inicia sesión con tu cuenta de github, y verás que tienes el descuento por un año. Procede a la compra gratuita. Además, tendrás que registrarte para poder acceder posteriormente a la configuración. Debes completar los datos de registro ya que te identifican como propietario del nombre de dominio. Si lo deseas, usa como dirección Universidad de Almería, Ctra. Sacramento s/n, 04120, Almería, Spain. Para configurar el nombre de dominio que acabas de adquirir a las IPs reservadas, debes usar Cloud DNS en Google Cloud. Cloud DNS permite asignar los nombres de dominio a las direcciones IP públicas de las instancias. Recuerda comprobar que las IPs son estáticas. En el menú de la consola de Google Cloud, entra en Servicios de red, Cloud DNS. Fig. 13. Cloud DNS Haz clic en Crear Zona. Fig. 14. Cloud DNS, crear zona A continuación, haz clic en Añadir Conjunto de registros. Para cada instancia, crea un conjunto de registros. Fig. 15. Cloud DNS. Crear conjunto de registros, instancia Jenkins Fig. 16. Cloud DNS. Crear conjunto de registros, instancia de despliegue de apps Tras la creación, debes tener un resultado similar a este: Fig. 17. Cloud DNS. Detalles de la Zona El último paso será modificar los servidores de DNS de la configuración en la web .tech, para poner los valores de los servidores de Google Cloud. Para ello, inicia sesión en get.tech. Entra en tu pedido. Fig. 18. get.tech. Acceso al pedido Modifica los nombres de los servidores con los valores de tu zona en Cloud DNS Fig. 19. get.tech. Nombres de los servidores Guarda los cambios. Hasta pasadas 24 horas no estarán disponibles.","title":"Creación de la infraestructura en Google Cloud","component":"despliegue-continuo","version":"0.22.2","name":"index","url":"/despliegue-continuo/0.22.2/infraestructura/index.html","titles":[{"text":"Estructura del proyecto terraform","hash":"_estructura_del_proyecto_terraform","id":1},{"text":"Creación de la clave para la Cuenta de servicio","hash":"_creación_de_la_clave_para_la_cuenta_de_servicio","id":2},{"text":"Ejecución de terraform","hash":"_ejecución_de_terraform","id":3},{"text":"terraform init","hash":"_terraform_init","id":4},{"text":"terraform plan","hash":"_terraform_plan","id":5},{"text":"terraform apply","hash":"_terraform_apply","id":6},{"text":"terraform destroy","hash":"_terraform_destroy","id":7},{"text":"Más comandos útiles","hash":"_más_comandos_útiles","id":8},{"text":"Cloud DNS","hash":"_cloud_dns","id":9},{"text":"Alta de nombre de dominio","hash":"_alta_de_nombre_de_dominio","id":10},{"text":"Configuración de nombres de dominio","hash":"_configuración_de_nombres_de_dominio","id":11}]},"3":{"id":3,"text":"Objetivos Como construir y desplegar apliaciones web Java con Jenkins Dockerizar la aplicacion web Java para facilitar su despliegue Desplegar la aplicación Java tanto de forma nativa como mediante contenedor Definir un pipeline con las etapas más habituales en CI/CD","title":"Aplicación Web Java","component":"despliegue-continuo","version":"0.22.2","name":"index","url":"/despliegue-continuo/0.22.2/java-web-app/index.html","titles":[]},"4":{"id":4,"text":"Para realizar el despliegue de PetClinic como contenedor, primero tenemos que dockerizar la aplicación, luego publicar la imagen de contenedor en un registro como DockerHub o Google Container Registry, y por último ejecutar el contenedor en la instancia de despliegue. A continuación se describe cómo crear un contenedor Docker de la aplicación PetClinic. Los pasos se realizan en local, y al final configuraremos el pipeline de Jenkins para que se realicen automáticamente. Para trabajar con contenedores Docker en tu equipo local, debes tener Docker instalado. Recuerda iniciar Docker Desktop en Windows, o iniciar el servicio Docker en Linux o Mac. Comprueba que está funcionado ejecutando el comando docker ps Hasta ahora nos estamos basando en el proyecto PetClinic original (genericamente llamado upstream) disponible en GitHub. En esta sección necesitarás poder hacer cambios sobre el mismo, básicamente vamos a añadir al proyecto un archivo Dockerfile y un archivo Jenkinsfile, así que crea un fork y trabaja con tu fork a partir de ahora. Verás que en los bloques de código de este documento indica como URL del respositorio https://github.com/ualcnsa/spring-petclinic.git, que deberás cambiar por la URL de tu repositorio forkeado. Para construir aplicaciones Maven con Docker y luego crear el contendedor de Docker que empaquete la aplicación, la opción recomendada es usar Multi-Stage Builds en tu Dockerfile, de manera que: Una primera fase o stage construye el .jar a partir de una imagen de Maven, como por ejemplo maven:3.8.4-openjdk-11-slim Y luego en una seguna fase, ese .jar lo copia en el contenedor basado en la imagen OpenJDK-11, que es el entorno de ejecución Java necesario. La documentación de PetClinic indica cómo construir el contenedor usando Spring Boot build plugin. A nosotros nos interesa ver cómo hacerlo de forma genérica para cualquier aplicación Java basada en Maven. Vamos a definir el siguiente archivo Dockerfile que debe estar en la carpeta raíz del proyecto PetClinic: Dockerfile multi-stage FROM maven:3.8.4-openjdk-11-slim AS build (1) WORKDIR /app # First copy only the pom file. This is the file with less change COPY ./pom.xml . # Download the package and make dependencies cached in docker image RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean dependency:go-offline # Copy the actual code COPY ./ . # Then build the code RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean package # Start with a base image containing Java runtime FROM openjdk:11-slim (2) # Make port 8080 available to the world outside this container EXPOSE 8080 # The application's jar file ARG JAR_FILE=target/*.jar # Copy the application's jar to the container COPY ${JAR_FILE} app.jar # Run the jar file ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"] 1 Primera fase o stage de build, construye la aplición llamando a los goals clean package de Maven. Contiene los pasos básicos para construir una aplicación Java basada en Maven. Dicha construcción la divide en dos partes, primero copia el pom.xml y descarga las dependencias con dependency:go-offline, y luego copia todos los fuentes y construye el proyecto con package. De esta forma se optimiza la reconstrucción del contenedor ya que la descarga de dependencias es una etapa que dura varios minutos. 2 Segunda fase, crea una imagen con el entorno de ejecución de Java 11 y el empaquetado .jar de la aplicación PetClinic. Contiene los pasos básicos para ejecutar una aplicación String Boot en un contenedor: partiendo de una imagen de openjdk, copia el archivo target/*.jar en el contenedor con el nombre app.jar y lo ejecuta mediante el comando ENTRYPOINT para que no haya ninguna shell sobre el proceso java. Construye el contenedor con docker build, y ten paciencia, tardará varios minutos!!! docker build -t petclinic-docker . Fig. 1. Docker build Si estás trabajando en Windows, la construcción da un error por problemas de codificación de los saltos de línea diferentes entre Windows y Linux. Para resolverlo, sustituye en la primera fase del Dockerfile la linea de construcción que llama a package por estas dos: # Then build the code - on Linux (1) # RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean package # Then build the code - On Windows (2) RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean spring-javaformat:apply --no-transfer-progress RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml package --no-transfer-progress 1 Ejecución de maven package para la construcción del proyecto cuando ejecutas Docker en Linux. La linea aparece comentada. 2 Ejecución de maven package para la construcción del proyecto cuando ejecutas Docker en Windows. Las dos lineas se ejecutan (no están comentadas). Tras la construcción de la imagen, prueba la ejecución del contenedor en local: docker run -it -p 8080:8080 -t petclinic-docker Comprueba que se ha iniciado la aplicación en http://localhost:8080. Para el contenedor con CTRL+C. Una vez creada la imagen con docker build y probada su ejecución con docker run, el siguiente paso será publicar la imagen en un registro de contenedores, mediante docker push. Podemos usar DockerHub pero en este caso vamos a usar Google Cloud Container Registry. Para poder hacer push debemos tener permisos de escritura, y por tanto debemos autenticarnos en el servicio Container Registry. Authentication permite conectar al Registro de Contenedores con tus credenciales, y hacer push y pull de imágenes. Para ello debes configurar los los permisos necesarios para accdeder al registro, utilizando un JSON key file como método de autenticación: En la Consola Google Cloud, seleccionar el proyecto Google Cloud. En el menú de navegación seleccionar IAM y administración | Cuentas de servicio. Seleccionar Crear cuenta de servicio. Darle un nombre (p.e. container-registry) Seleccionar \"Crear y continuar\". En el paso Conceder a esta cuenta de servicio acceso al proyecto del asistente, seleccionar el rol Cloud Storage → Admisnitrador de almacenamiento. Continuar y Listo. Editar la Cuenta de servicio. En la sección Claves seleccionar Agregar clave | Crear nueva clave. Dejar JSON en el tipo de clave. Seleccionar Crear. A continuación se descargará la clave privada. Fig. 2. Creación Service Account Key for pull/push on Container Registry Guarda el archivo .json en la carpeta secret de tu proyecto PetClinic. No olvides añadir la carpeta secret/ al archivo .gitignore para evitar publicar en GitHub tu archivo de credenciales. Use the service account key as your password to authenticate with Docker. Sustituye keyfile.json por el nombre de tu archivo de credenciales: En Linux: cat keyfile.json | docker login -u _json_key --password-stdin https://gcr.io En Windows: docker login -u _json_key --password-stdin https://gcr.io < keyfile.json Fig. 3. Autenticación de Docker contra Container Registry Construir el contenedor con el nombre completo incluyendo la referencia a Container registry (gcr.io). Primero definimos una variable de entorno con el nombre de nuestro proyecto GCP, y luego construimos de nuevo la imagen con el nombre completo del registro de contenedores: GOOGLE_CLOUD_PROJECT=cnsa-2022-user123 docker build -t gcr.io/$GOOGLE_CLOUD_PROJECT/petclinic:1.0 . A continuación vamos a publicar con docker push: habilita la API de Container Registry en tu proyecto GCP, accediendo en el menú a Contaner Registry > Images: Fig. 4. Habilitar la API Container Registry Publica la imagen con docker push [HOSTNAME]/[PROJECT-ID]/[IMAGE]:[TAG]: docker push gcr.io/$GOOGLE_CLOUD_PROJECT/petclinic:1.0 Comprueba que se ha publicado correctamente. Fig. 5. Lista de imágenes en Container Registry La imagen del contenedor PetClinic ya está disponible en el registro privado de nuestro proyecto GCP. Utilizando nuestras credenciales podremos hacer docker pull de dicha imagen para descargarla en cualquier máquina con docker, y ejecutarlo con docker run. GOOGLE_CLOUD_PROJECT=cnsa-2022-user123 docker run -p 8080:8080 -t --name petclinic gcr.io/$GOOGLE_CLOUD_PROJECT/petclinic:1.0 Si conectas a la instancia de despliegue que creamos al principio de esta actividad, y ejecutas el comando docker run anterior, dará un error de autenticación: Fig. 6. Error de autenticación en Container Registry Para arreglarlo, habrá que copiar en la máquina de despliegue el archivo de credenciales .json con premisos sobre Container Registry. A continuación se muestran los comandos necesarios para ello. Una vez disponible este archivo en la instancia de despliegue ejecutar el comando docker login y tras ello ya si podremos hacer docker pull y docker run. # Compiamos el archivo de credenciales scp ./secret/file.json ubuntu@DNS_MAQUINA_DEPLOY:~/keyfile.json # Conectamos a la máquina de despliegue ssh ubuntu@DNS_MAQUINA_DEPLOY # Autenticamos docker contra Container Registry cat keyfile.json | docker login -u _json_key --password-stdin https://gcr.io # Variable de entorno con el nombre del proyecto GOOGLE_CLOUD_PROJECT=cnsa-2022-user123 # ejecutamos el contenedor desde gcr.io docker run -d -p 8080:8080 -t --name petclinic gcr.io/$GOOGLE_CLOUD_PROJECT/petclinic:1.0 Si la ejecución de docker run te da error, prueba a ejecutarlo con sudo. Para evitar tener que escribir siempre sudo delante de cualquier comando docker, ejecuta: sudo usermod -aG docker $USER. Tras ello, reinicia la sesión. Prueba ahora sin sudo, a partir de ahora llama siempre a docker sin sudo. Más info aquí Es posible que la ejecución del contenedor de un error, porque el puerto 8080 ya esté en uso: Error starting userland proxy: listen tcp 0.0.0.0:8080: bind: address already in use. Para solucionarlo, bien detén el proceso java que está corriendo con la aplicación PetClinic tal y como la desplegamos en la sección anterior (if pgrep java; then pkill java; fi), o bien utiliza otro puerto, por ejemplo, el 80, que debe estar disponible: docker run -p 80:8080 -t --name petclinic gcr.io/$GOOGLE_CLOUD_PROJECT/petclinic:1.0 Pero ten en cuenta que si el contenedor ya se ha creado y no ha podido iniciarse porque el puerto 8080 estaba ocupado, si intentas volver a crearlo con docker run te dirá que el contenedor ya existe. Revisa si está ya creado y en ese caso inicialó. ubuntu@web-deploy-vm-tf:~$ docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 6e174d959f3b gcr.io/cnsa-2022/petclinic:1.0 \"java -jar /app.jar\" About a minute ago Created petclinic ubuntu@web-deploy-vm-tf:~$ docker start petclinic petclinic Ya puedes comprobar en tu navegador que la aplicación PetClinic se está ejecutando en el puerto 8080 de la máquina de despliegue. Hasta ahora hemos realizado todos los pasos de construcción, prueba y despliegue manualmente. A continuación, vamos a automatizar en Jenkins todo el proceso, cuyas principales tareas son: la construcción de la imagen del contenedor, la publicación de la imagen en el registro, y el despliegue del contenedor. En Jenkins, son necesarios los siguientes plugins para trabajar con Docker y pipelines, y con Container Registry: Docker Pipeline, que ya está instalado, y tendrás que instalar Google Container Registry Auth. Definimos un nuevo proyecto en Jenkins de tipo pipeline, con el nombre PetClinic-Docker-abc123 sustituyendo abc123 por nuestro nombre de usuario. Son necesarios 3 fases (stages) en el pipeline: build image, push image, y deploy container. Comenzamos por la construcción de la imagen: pipeline { agent any environment { CONTAINER_REGISTRY = 'gcr.io' GOOGLE_CLOUD_PROJECT = 'cnsa-2022-abc123' CREDENTIALS_ID = 'cnsa-2022-gcr' } tools { maven \"Default Maven\" } stages { stage(\"Checkout code\") { steps { // checkout scm git branch:'main', url:'https://github.com/ualcnsa/spring-petclinic.git' } } stage('Compile, Test, Package') { steps { sh \"mvn clean package -Dcheckstyle.skip\" } post { success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } stage(\"Build image\") { steps { script { dockerImage = docker.build( \"${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/petclinic:${env.BUILD_ID}\", \"--rm -f Dockerfile .\" ) } } } } } Si consultas la salida por consola de la ejecución del pipeline, verás que se algunas tareas se repiten dos veces, como por ejemplo la ejecución de los tests. ¿Por qué crees que es debido? ¿Podría eliminarse alguna fase del pipeline? Para probar que la imagen del contenedor se ha creado bien, añade esta fase que hace un despliegue en un entorno de \"Staging\" o \"Testing\", que en este tutorial va a ser \"local\" en la propia máquina de Jenkins, es decir, ejecuta un contenedor basado en la imagen que acabamos de crear: stage(\"Deploy to Testing (locally)\") { steps { sh \"docker stop petclinic || true && docker rm petclinic || true\" (1) sh \"docker run -d -p 8080:8080 -t --name petclinic ${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/petclinic:${env.BUILD_ID}\" (2) } } 1 Por si ya se ha ejecutado el pipeline anteriormente, y no se ha eliminado el contenedor de la ejecución anterior, es necesario comprobar si el contenedor petclinic ya se está ejecutando y, en tal caso, pararlo con docker stop y eliminarlo con docker rm 2 Con docker run ejecuta el contenedor petclinic a partir de la imagen recién construida. Para que el pipeline pueda finalizar y el contenedor siga ejecutándose, se añade -d que indica modo detached que ejecuta el contenedor en background. La aplicación debe estar accesible en el puerto 8080 en tu máquina de Jenkins. Para asegurarnos que la aplicación se está ejecutando bien, debemos problarlo \"manualmente\". Para automatizar esta prueba, lo adecuado sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test image') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed\"' } } El siguiente paso es publicar la imagen en el registro. Primero, es necesario crear unas credenciales en Jenkins para poder hacer push en Container Registry: Go to jenkins home, Manage Jenkins, click on “Manage credentials” and “(global)” Click on “Add Credentials” in left menu. Select Google Service Account from private key for the “Kind” field, and enter your project. Then upload the JSON private key. Fig. 7. Credenciales en Jenkins para Container Registry Una vez guardadas las credenciales, vamos a definir la fase para publicar la imagen del contenedor: stage(\"Push image\") { steps { script { docker.withRegistry('https://'+ CONTAINER_REGISTRY, 'gcr:'+ GOOGLE_CLOUD_PROJECT) { dockerImage.push(\"latest\") dockerImage.push(\"${env.BUILD_ID}\") } } } } Comprobar que se ha publicado correctamente en el registro. Fig. 8. Imagen publicada en Container Registry, etiquetada con el número de build Por último, quedaría el paso de desplegar al entorno de producción. Una vez empaquetada como un contenedor, Google Cloud permite desplegar de varias formas: en máquina virtual con GCE, en plataforma como servicio con Google App Engine, en Kubernetes con GKE, y en Cloud Run, un servicio de Google Cloud específico para el despliegue de contenedores. Para nosotros, la máquina virtual de despliegue es nuestro entorno de producción en el que vamos a desplegar el contenedor. Los pasos para el despliegue de la nueva imagen del contenedor consistirán en ejecutar los siguientes comandos sobre la máquina de despliegue: docker stop del contenedor por si estuviera ejecutándose docker rm para eliminar el contenedor existente, que puede estar basado en una imagen de una versión anterior docker run para ejecutar el contenedor, que automáticamente hará un docker pull de la imagen actualizada del registro. Lo lanzaremos en el puerto 80 ya que el 8080 está ocupado por el despliegue que hicimos sin contenedor. Estas acciones debemos añadirlas a un stage del pipeline de Jenkins que se encargará de desplegar el nuevo contenedor automáticamente. En el siguiente código, sustituye DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia de despliegue. También puedes definirla como una variable de entorno al inicio del pipeline. stage('Deploy to Production') { steps{ // Check to manual approving deploy to production. // It implemenents Continuous Delivery instead of Continuous Deployment input message: \"Proceed Deploy to Production?\" (1) sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -q --filter name=petclinic | grep . ; then docker stop petclinic ; fi\" (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -a -q --filter name=petclinic | grep . ; then docker rm -fv petclinic ; fi\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"docker run -d -p 80:8080 -t --name petclinic ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/petclinic:latest\" (4) ''' } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline. Permite asegurar que el despliegue a producción requiere intervención de una persona, implementando entrega continua (continuous delivery) en lugar de despliegue continuo (continuous deployment). 2 Ejecuta en la instancia de despliegue el comando docker stop que detiene el contenedor petclinic en caso de que ya se estuviera ejecutando de un despliegue anterior. Esto se comprueba con docker ps …​. 3 Ejecuta en la instancia de despliegue el comando docker rm que elimina el contenedor petclinic en caso de que exista de un despliegue anterior. Esto se comprueba con docker ps -a …​. Estos dos pasos, primero parar el contenedor y luego eliminar el contenedor, son necesarios antes de volver a lanzar un nuevo contenedor con el mismo nombre. Se ejecuta en dos pasos para evitar errores en caso de que el contenedor exista pero no esté en ejecución, lo que podría dar lugar a un error en el despliegue. 4 Ejecuta en la instancia de despliegue el comando para ejecutar el contenedor basado en la última versión de la imagen, lanzándolo con -d que indica modo detached que ejecuta el contenedor en background, para que el pipeline finalice y el contenedor permanezca en ejecución. Fig. 9. Proceed deploy to production? Algunos comandos útiles de Docker: # Remove all stopped containers docker rm $(docker ps -a -q) # Remove all images docker rmi $(docker images -q) Usalos si te aparece algun mensaje de error del tipo no space left on device, ya que la máquina Jenkins están construyendo muchas imágenes y se queda sin espacio de disco. La aplicación PetClinic debe estar accesible en producción, en el puerto 8080 en la instancia de despliegue. Para asegurarnos, debemos problarlo \"manualmente\". Para automatizar esta prueba en producción, lo adecuado de nuevo sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test on Production') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed on Production\"' } } Por último, es una buena práctica eliminar las imágenes que se van generando en cada build, para liberar espacio en la máquina de Jenkins. Primero paramos y eliminamos el contenedor que desplegamos anteriormente en la fase del pipeline Deploy to Testing (locally); luego eliminamos la imagen. stage('Remove Unused docker image') { steps{ // input message:\"Proceed with removing image locally?\" (1) sh 'if docker ps -q --filter name=petclinic | grep . ; then docker stop petclinic && docker rm -fv petclinic; fi' (2) sh 'docker rmi ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/petclinic:$BUILD_NUMBER' (3) } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline 2 Para y elimina el contenedor local 3 Elimina la imagen de contenedor en local con docker rmi para liberar espacio. Fig. 10. Input message (paso comentado en el ejemplo) El pipeline completo, con todas sus fases, debe quedar así: Fig. 11. Pipeline completo ENHORABUENA!!! Has conseguido definir un pipeline completo de integración y despliegue continuos, y con contenedores. Este proceso se puede aplicar, con pequeñas adaptaciones, a cualquier otro proyecto Java basados en Maven. Si usas otras tecnologías, como NodeJs, hay que adaptar cada una de las fases a su equivalente en en la tecnología concreta. Vamos a ver como hacerlo con NodeJs en la siguiente sección. Referencias Deploy via ssh: How to build on Jenkins and publish artifacts via ssh with Pipelines @ Medium Jenkins Building Docker Image and Sending to Registry @ Medium Pushing docker image through jenkins @ StackOverflow","title":"PetClinic con Docker","component":"despliegue-continuo","version":"0.22.2","name":"java-petclinic-docker","url":"/despliegue-continuo/0.22.2/java-web-app/java-petclinic-docker.html","titles":[{"text":"Creación del Dockerfile multi-stage","hash":"_creación_del_dockerfile_multi_stage","id":1},{"text":"Autenticación en Container Registry","hash":"_autenticación_en_container_registry","id":2},{"text":"Publicación y despliegue manual","hash":"_publicación_y_despliegue_manual","id":3},{"text":"Integración y despliegue continuo","hash":"_integración_y_despliegue_continuo","id":4},{"text":"Construcción y despliegue del contenedor","hash":"_construcción_y_despliegue_del_contenedor","id":5},{"text":"Publicación en el registro","hash":"_publicación_en_el_registro","id":6},{"text":"Despliegue en producción","hash":"_despliegue_en_producción","id":7}]},"5":{"id":5,"text":"Una vez que hemos configurado correctamente nuestro entorno de CI/CD con Jenkins, vamos a estudiar varios ejemplos tanto en Java como en NodeJs. Para comprender los ejemplos, primero los vamos a construir y ejecutar en local, para después automatizar el proceso de construcción y despliegue con Jenkins. En este primer ejemplo en Java, nos vamos a basar en el proyecto PetClinic con Spring Boot, disponible en GitHub. Petclinic es una aplicación Spring Boot construida usando Maven como herramienta de soporte a la gestión y construcción (build). Spring Boot es un framework de código abierto para el desarrollo de aplicaciones Java basadas en Spring. Spring Boot genera una proyecto Maven/Gradle con todo lo necesario y que se autoconfigura en el arranque. Por ejemplo, si decimos que queremos una aplicación web, Spring Boot automáticamente embebe un Tomcat y lo configura con el servlet de Spring. Toda la configuración la añade al archivo de la herramienta de build que indiquemos, en caso de Maven, al archivo pom.xml. Recordemos que Maven es una herramienta software para la gestión y construcción de proyectos Java. Apache Maven estandariza la configuración de un proyecto en todo su ciclo de vida, como son todas las fases de compilación, ejecución de pruebas, empaquetado, etc. Maven permite la gestión de dependencias entre módulos y distintas versiones de librerías, simplemente indicando los módulos que componen el proyecto, y las dependencias utiliza el software que estamos desarrollando, en un fichero XML de configuración llamado POM (Project Object Model). Para el proyecto PetClinic, en tu máquina de desarrollo local puedes construir el .jar (empaquetado) y ejecutarlo: Requiere JDK 11 en la máquina local. Si estás en Windows y tienes varias instalaciones, cambia la version de Java predeterminada a la 11. git clone https://github.com/spring-projects/spring-petclinic.git cd spring-petclinic ./mvnw package (1) java -jar target/*.jar (2) 1 Llama a mvnw, el warper de Maven que instala Maven (si es necesario), y ejecuta el goal package que se encarga de compilar, ejecutar los test y empaquetar la aplicación en un único archivo ejecutable .jar. La primera vez que lances la construcción tardará más de 5 minutos, ya que tiene que descargar todas las dependencias necesarias desde los repositorios de Maven (Maven Central), y después lanzar los tests. Toda la configuración necesaria está contenida en el archivo pom.xml de Maven. 2 Ejecuta la aplicación a partir del .jar. Puedes acceder a PetClinic en: http://localhost:8080/ Fig. 1. Página principal de PetClinic En su configuración predeterminada, Petclinic utiliza una base de datos en memoria (H2) que se inicia con datos predeterminados, y los nuevos datos que se guarden se pierden al reiniciar la aplicación. En caso de necesitar persistencia de los datos, PetClinic también está preconfigurada para usar MySql. Para cambiar el tipo de base de datos, la aplicación debe ejecutarse con un perfil de MySql: spring.profiles.active=mysql. java -Dspring.profiles.active=mysql -jar target/*.jar Recuerda que para ejecutarla en este modo, debes tener un MySql funcionando en local, o bien lanzar MySql como contenedor con docker o con docker-compose. Existe un archivo docker-compose.yml disponible en el repositorio del proyecto PetClinic, por tanto puedes iniciar MySql así: docker-compose up -d El archivo docker-compose.yml que permite iniciar MySql puedes consultarlo en la carpeta raíz del proyecto, y es el siguiente: mysql: image: mysql:5.7 ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD= - MYSQL_ALLOW_EMPTY_PASSWORD=true - MYSQL_USER=petclinic - MYSQL_PASSWORD=petclinic - MYSQL_DATABASE=petclinic volumes: - \"./conf.d:/etc/mysql/conf.d:ro\" Una vez que hemos probado la ejecución y funcionamiento de la aplicación PetClinic en local, vamos a configurar el proyecto en el servidor Jenkins de CI/CD para que este se encargue de la construcción y el despliegue automatizados. Conecta a tu Jenkins, y crea un nuevo item de tipo Pipeline. Dale el nombre 'spring-petclinic-pipeline': Fig. 2. New Item, PetClinic pipeline En el bloque Pipeline, pega la configuración siguiente: pipeline { agent any (1) tools { // Previamente has debido instalar Maven con el nombre \"Default Maven\" maven \"Default Maven\" (2) } stages { (3) stage('Git fetch') { (4) steps { // Get some code from a GitHub repository git branch:'main', url:'https://github.com/spring-projects/spring-petclinic.git' } } stage('Compile, Test, Package') { (5) steps { // Run goal 'package' includes compile, test and package. sh \"mvn clean package -Dcheckstyle.skip\" } post { (6) // If Maven was able to run the tests, even if some of the test // failed, record the test results and archive the jar file. success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } } } 1 agente o nodo de Jenkins en que ejecuta la construcción del proyecto. En el ejemplo, any indica que se ejecutará cualquier nodo, en nuestro caso será en master ya que es el único nodo que hay definido en nuestro Jenkins. 2 como herramienta para la construcción se usará maven. Pon aquí el nombre que diste a tu instalación de Maven configurada previamente en Tools Configuration. 3 Bloque de stages: fases o etapas que conforman el pipeline 4 Fase de descarga del repositorio git 5 Fase de compilación, ejecución de test y empaquetado de la aplicación. Se realizarán con los goals clean package: primero se elimina todo lo generado en la construcción anterior, y a continuación se lanza la construcción con package tal y como está definida en el archivo pom.xml. La opcion -Dcheckstyle.skip anula el análisis de CheckStyle, que lo añadiremos en una fase posterior. 6 Paso posterior que guarda los resultados de los test de JUnit para generar la gráfica de evolución de los test. Tras ejecutar el pipeline, con \"Build now\", el resultado debe ser el siguiente: Fig. 3. Construcción del pipeline PetClinic Si realizamos una segunda ejecución, ya aparecerá la gráfica de evolución de los tests de JUnit. Jenkins nos permite publicar métricas asociadas al proyecto. Una de ellas, es la cobertura de código ejecutado por las pruebas. La Cobertura de código nos indica el porcentaje de código de producción que está siendo ejecutado por los test. Es deseable tener un valor de cobertura lo más próximo posible al 100% El proyecto PetClinic contiene 40 test unitarios en JUnit, y está configurado (ver pom.xml) para que se calcule la cobertura cuando se lanzan los tests mediante el plugin JaCoCo (Java Code Coverage). Puedes visualizar el resultado de la cobertura en tu construcción local, en la carpeta target/site/jacoco: Fig. 4. Archivos generados por Jacoco Fig. 5. Informe html de la cobertura Jacoco Y si haces clic en el nombre de una clase, verás el código coloreado: Fig. 6. Detalle la cobertura de las lineas de código 1 Las lineas verdes están cubiertas, es decir, han sido ejecutadas por al menos 1 test. 2 Las lineas amarillas están parcialmente cubiertas (missed branches): un resultado de la condición (verdadero/falso) ha sido ejecutado por algún test pero el otro no ha sido ejecutado por ningún test. 3 Las líneas rojas no están cubiertas, no han sido ejecutadas por ningún test. Para visualizar el resultado de la cobertura en Jenkins: Instala el plugin de Jacoco y el plugin Code Coverage API Fig. 7. Instalación del plugin Jacoco Fig. 8. Instalación del plugin Code Coverage API Añade las dos siguientes lineas al bloque post para que se guarde y muestre el informe de cobertura. ... success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' jacoco(execPattern: 'target/jacoco.exec') (1) publishCoverage adapters: [jacocoAdapter('target/site/jacoco/jacoco.xml')] (2) } ... 1 Añade el informe Coverage Trend 2 Añade el informe Coverage Report Tras la construcción de nuevo del proyecto, verás la gráfica de los resultados de los test y debajo la gráfica de evolución de cobertura: Fig. 9. Informe de cobertura en el dashboard Haciendo clic sobre la gráfica accedes a los detalles: Fig. 10. Detalle de de cobertura Para mantener y aumentar la calidad de nuestro código debemos ayudarnos, entre otras herramientas, de técnicas de análisis estático de código. Básicamente, se encargan de buscar defectos en el código sin necesidad de que este se ejecute. En Java una de las más habituales es Checkstyle, aunque hay otras como FindBugs, PMD, y SonarQube que integra a los anteriores. CheckStyle valida el estilo del código respecto al estilo oficial de Java. El proyecto PetClinic tiene configurado el plugin de CheckStyle en el pom.xml: ... <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> <version>3.1.0</version> ... </plugin> ... Para ejectutar CheckStyle en local, ejecuta el comando de maven (mvn) con los siguietnes goals: mvn checkstyle:checkstyle site -DgenerateReports=false Tras la ejecución, en la carpeta target/site/ verás el archivo checkstyle.html: Fig. 11. Informe de CheckStyle Sería labor del equipo de desarrollo revisar los errores detectados y tratar de corregirlos, siempre que realmente supongan una mejora para la calidad del código. Para ejecutar y visualizar el informe en Jenkins: Instalar el plugin Warnings Next Generation. Añadir al pipeline un nuevo stage con la siguiente descripción: stage ('Analysis') { steps { // Warnings next generation plugin required sh \"mvn checkstyle:checkstyle site -DgenerateReports=false\" recordIssues enabledForFailure: true, tool: checkStyle() } } Tras la construcción, el pipeline tiene una nueva fase y además en el menú tenemos acceso al informe de CheckStyle. Fig. 12. Pipeline con la nueva fase de Análisis Fig. 13. Detalles del informe de CheckStyle Saber más…​ Si estás interesado en profundizar en este tema, te recomiendo integrar SonarQube con Jenkins, ya que SonarQube realiza un análisis mucho más detallado de la calidad y seguridad del código, realizando tanto análisis estático de código (CheckStyle y otros), como de análisis de seguridad (vulnerabilidades), y definiendo lo que denomina Quality Gates que permiten definir condiciones que se deben cumplir basadas en los valores de las métricas del proyecto (por ejemplo, que la cobertura de código sea mayor del 80%). Puedes encontrar mucha documentación online sobre cómo hacerlo: Instalar SonarQube como aplicación o como contenedor Docker (recomendado) Instalar el plugin SonarQube Scanner for Jenkins Configurar SonarQube Scanner for Jenkins Añadir al pipeline la fase de análisis de Sonar (Declarative pipeline example:). Más info de Sonar en pipeline: SonarQube Scanner for Jenkins Además, Si tu proyecto está en un repositorio público en GitHub, puedes ahorrarte tener que instalar tu propio SonarQube utilizando SonarCloud, el servicio de SonarQube en la nube (SaaS) gratuito para proyectos públicos, con el que evitas tener que instalar y mantener tu propio SonarQube. Para lanzar el análisis de Sonar con maven: Genera el login TOKEN Ejecuta los goals de maven: clean verify sonar:sonar -Dsonar.login=$SONAR_LOGIN_TOKEN Incluso puedes configurar SonarCloud y Jenkins para que analizar los pull request de tu repositorio y conocer el resultado del análisis de Sonar antes de hacer el merge del pull request. Para desplegar la aplicación PetClinic en la instancia de despliegue vamos a copiar sobre ella el archivo JAR y a continuación ejecutaremos en ella la orden de java para ponerla en marcha: Copia este nueva fase en tu pipeline, sustituyendo DEPLOY_MACHINE por la IP o el nombre DNS de tu instancia: stage('Deploy'){ steps { sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"mkdir -p ~/spring-petclinic\" (1) scp -i ~/.ssh/id_rsa_deploy $WORKSPACE/target/*.jar ubuntu@DEPLOY_MACHINE:~/spring-petclinic (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"if pgrep java; then pkill java; fi\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"nohup java -jar ~/spring-petclinic/*.jar > ~/spring-petclinic/yourservice.log 2>&1 &\" (4) ''' } } 1 Crea la carpeta spring-petclinic dentro de la carpeta HOME del usuario ubuntu en la máquina de despliegue 2 Copia con scp el archivo .jar, que se ha generado tras la construcción con maven, en la máquina de despligue 3 Detiene el proceso java si existe de un despliegue anterior. 4 Ejecuta la aplicación java empaquetada en el .jar, en background y con nohup, que hace que el proceso siga funcionando incluso si el usuario que lo inició cierra la sesión. De esta manera finaliza el comando ssh y el proceso sigue funcionando, es decir, la aplicación PetClinic estará desplegada y funcionando. Referencias: How to build on Jenkins and publish artifacts via ssh with Pipelines","title":"PetClinic","component":"despliegue-continuo","version":"0.22.2","name":"java-petclinic","url":"/despliegue-continuo/0.22.2/java-web-app/java-petclinic.html","titles":[{"text":"Construcción y ejecución en local","hash":"_construcción_y_ejecución_en_local","id":1},{"text":"Creación del Pipeline para PetClinic","hash":"_creación_del_pipeline_para_petclinic","id":2},{"text":"Informe de Cobertura de código","hash":"_informe_de_cobertura_de_código","id":3},{"text":"Análisis estático de código: Checkstyle","hash":"_análisis_estático_de_código_checkstyle","id":4},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":5}]},"6":{"id":6,"text":"Creamos el primer proyecto de Jenkins. Comprueba que Jenkins puede llamar a Docker. Para ello crea un nuevo proyecto tipo freestyle. Fig. 1. Nuevo proyecto, freestyle En la sección Build Steps, añade un nuevo paso, Ejecutar linea de comandos (shell) . Pega estos comandos: whoami git --version java -version docker -v Guarda los cambios. Haz clic sobre Build now. Haz clic sobre la bolita verde para ver el la salida por consola. Fig. 2. Build now. Resultado del build Fig. 3. Salida por consola Por consola se visualiza el resultado de ejecutar los comandos dentro del contenedor. Como puedes ver, git y java están instalados, venían ya en la imagen jenkins:lts de la que hemos partido en la definición del Dockerfile. Además, docker también está disponible, se ha instalado correctamente mediante la definición incluida en el Dockerfile. La ejecución finaliza correctamente, con el mensaje Finished: SUCCESS, por ello la bolita verde. De forma predeterminada, Jenkins ejecuta los proyectos sobre el nodo principal (main), que es el nodo (contenedor o máquina virtual) donde se ejecuta el propio Jenkins. Puedes consultar los nodos disponibles en Jenkins en la sección Administrar Jenkins > Nodos. Fig. 4. Nodos disponibles en Jenkins Hasta ahora no hemos configurado otros nodos ni clouds donde ejecutar los proyectos, así que por defecto se ejecutan en el principal. Creamos el primer proyecto de Jenkins tipo pipeline. Vamos a darle el nombre hello-maven-pipeline-on-master-node. Este pipeline se ejecutará sobre el nodo (agent) master, es decir, sobre el mismo contenedor que está ejecutando Jenkins. Copia la siguiente definición de pipeline en el bloque Pipeline, Pipeline script. pipeline { agent any tools { maven 'Default Maven' (1) } stages { stage('Build') { steps { sh ''' java -version mvn -v ''' (2) } } } } 1 Utiliza la instalación de Maven que hemos hecho en la sección anterior, y le dimos el nombre Default Maven. 2 En la shell ejecutará los comandos para mostrar las versiones de Java y Maven. Haz clic sobre Build now, y visualiza la consola. Como parte de la salida, se debe visualizar algo así (puede que los números de versiones varíen): [Pipeline] sh + java -version openjdk version \"17.0.10\" 2024-01-16 OpenJDK Runtime Environment Temurin-17.0.10+7 (build 17.0.10+7) OpenJDK 64-Bit Server VM Temurin-17.0.10+7 (build 17.0.10+7, mixed mode) + mvn -v Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/Default_Maven Java version: 17.0.10, vendor: Eclipse Adoptium, runtime: /opt/java/openjdk Default locale: en, platform encoding: UTF-8 OS name: \"linux\", version: \"6.5.0-1014-gcp\", arch: \"amd64\", family: \"unix\" Lanzar las construcciones de proyectos en el nodo principal puede acarrear problemas de seguridad. De hecho, Jenkins (dependiendo de la versión) avisa de que esta configuración es inadecuada, y recomienda configurar agentes independientes donde lanzar las ejecuciones de los proyectos. Fig. 5. Aviso de evitar ejecuciones en el nodo máster de Jenkins La alternativa es que el pipeline se ejecute, en lugar de en el nodo principal, en un nodo tipo \"agente\" que se creará ex profeso a partir de un contenedor Docker disponible de DockerHub. A continuación creamos el segundo proyecto de Jenkins tipo pipeline. Vamos a darle el nombre hello-maven-pipeline-on-container-node pipeline { agent { docker { image 'maven:3.9-eclipse-temurin-21-jammy' (1) args '-v $HOME/.m2:/root/.m2' (2) } } stages { stage('Build') { steps { sh ''' java -version mvn -v ''' } } } } 1 Elige entre las imágenes de Maven disponibles. En este caso, se ha elegido la versión 3.9 con Java 21, que es distinta a la que hemos instalado en el nodo principal. 2 Mapea el volumen del host $HOME/.m2 donde se almacenan las dependencias de Maven, para que estén disponibles en el contenedor, eliminando así la necesidad de volver a descargarlas en sucesivas ejecuciones. Te dará error al construir el proyecto. [Pipeline] sh + docker inspect -f . maven:3.9-eclipse-temurin-21-jammy permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/maven:3.9-eclipse-temurin-21-jammy/json\": dial unix /var/run/docker.sock: connect: permission denied El motivo es que en la máquina Jenkins, sobre el S.O. host, hay que abrir permisos en el socket de Docker para que desde dentro del contenedor Jenkins permita crear otros contenedores hermanos. Para ello, mediante el terminal ssh modifica los permisos así: sudo chmod 666 /var/run/docker.sock Tras ello deben construirse correctamente. La nueva salida será algo así: [Pipeline] sh + java -version openjdk version \"21.0.2\" 2024-01-16 LTS OpenJDK Runtime Environment Temurin-21.0.2+13 (build 21.0.2+13-LTS) OpenJDK 64-Bit Server VM Temurin-21.0.2+13 (build 21.0.2+13-LTS, mixed mode, sharing) + mvn -v Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /usr/share/maven Java version: 21.0.2, vendor: Eclipse Adoptium, runtime: /opt/java/openjdk Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"6.5.0-1014-gcp\", arch: \"amd64\", family: \"unix\" Para que tras reiniciar la máquina se mantengan los permisos del socket de Docker: Crea el archivo /etc/rc.local, y añade el siguiente contenido: #!/bin/sh -e chmod 666 /var/run/docker.sock Por último, dale los permisos adecuados al archivo /etc/rc.local: sudo chmod 755 /etc/rc.local Tras ello reinicia la máquina. sudo reboot -h now Tras ello, comprueba que el socket de Docker tiene los permisos adecuados: $ ls -la /var/run/docker.sock srw-rw-rw- 1 root docker 0 Mar 2 19:24 /var/run/docker.sock No olvides que abrir permisos aL archivo /var/run/docker.sock supone ciertos problemas de seguridad: Avoid workarounds like this which could be a big potential security threat. The result of your chmod practically gives all local users read and write permissions to the docker-socket which allows anyone to interfere with your docker images. (fuente). Otros ejemplos similares con contenedores NodeJS están disponibles en la documentación de Jenkins Es habitual tener varias tecnologías en un mismo proyecto. Por ejemplo, un repositorio puede tener tanto un back-end basado en Java como un front-end basado en JavaScript. Combinar Docker y Pipeline permite usar diferentes agentes en diferentes fases (stages) del pipeline. Crea un nuevo pipeline `hello-pipeline-multiple-containers`con el siguiente contenido: pipeline { agent none stages { stage('Back-end') { agent { docker { image 'maven:3.9-eclipse-temurin-21-jammy' args '-v $HOME/.m2:/root/.m2' } } steps { sh 'mvn --version' } } stage('Front-end') { agent { docker { image 'node:20.11.1-alpine3.19' } } steps { sh 'node --version' } } } } Fig. 6. Pipeline con varios contenedores como agentes Para automatizar el despliegue sobre la instancia que tenemos creada para ello, deberás permitir que Jenkins ejecute comandos sobre la máquina de despliegue a través de SSH. Para ello, la instancia Jenkins debe poder conectarse a la instancia de despliegue mediante una conexión SSH basada en autenticación por pareja de claves pública/privada, que ha demostrado ser más seguro sobre la autenticación estándar de nombre de usuario/contraseña. Fig. 7. Esquema de despliegue con Jenkins Para ello, los pasos que se detallan a continuación permiten: generar una nueva pareja de claves que usaremos para el despliegue, copiar la clave pública generada en la instancia de despliegue, y por último probar que la conexión se realiza correctamente. Ejecuta los siguientes pasos: Conecta por SSH a la máquina Jenkins: ssh ubuntu@instancia-jenkins Fig. 8. Conexión SSH a la instancia Jenkins Crea la carpeta donde se va a guardar la nueva pareja de claves: mkdir /home/ubuntu/jenkins_home/.ssh Crea una pareja de claves ssh de despliegue: ssh-keygen -t rsa -b 4096 Cuando pida el nombre, escribe el nuevo nombre id_rsa_deploy junto con la ubicación donde Jenkins va a buscar las claves de forma predeterminada, que es: /home/ubuntu/jenkins_home/.ssh/id_rsa_deploy Por último, deja la contraseña en blanco (pulsa ENTER): Enter passphrase (empty for no passphrase): Esto crea la clave privada en /home/ubuntu/jenkins_home/.ssh/id_dsa_deploy y una clave pública asociada en /home/ubuntu/jenkins_home/.ssh/id_dsa_deploy.pub. Esta nueva pareja de claves la usaremos exclusivamente para el despliegue de nuestros proyectos. Al haberla guardado en la carpeta /home/ubuntu/jenkins_home/ los archivos están accesibles dentro del contenedor de Jenkins, porque como recordarás, al lanzar el contenedor Jenkins esa carpeta del host la habíamos mapeado con la carpeta /var/jenkins_home del contenedor. Fig. 9. Pareja de claves id_rsa_deploy Muestra el contenido de la clave pública: cat /home/ubuntu/jenkins_home/.ssh/id_rsa_deploy.pub Copia el contenido: con el ratón, selecciona el contenido de la clave, desde “ssh-rsa” hasta el final, y pulsa ENTER (o CTRC+C) Fig. 10. Copia el contenido de id_rsa_deploy.pub Debido a que algunos terminales añaden saltos delinea al copiar texto desde el terminal, como ocurre con cloud shell de GCP, es recomendable copiar el contenido de la clave pública en cualquier editor de texto \"plano\" (Notepad++, Sublime, VS Code, etc) y eliminar los saltos de línea, si los hubiera. Ahora pégalo en tu PC, lo necesitaremos más adelante. Desconecta de la máquina Jenkins: exit Conecta por ssh a la instancia de despliegue Fig. 11. Conexión SSH a la instancia Jenkins Edita el archivo authorized_keys: nano /home/ubuntu/.ssh/authorized_keys Ese archivo ya tenía una clave pública, la correspondiente a tu pareja de claves personal que inyectamos en la creación de la instancia con Terraform (por eso has podido conectar por ssh a esa máquina). Pega el contenido de la clave pública de despliegue. Ahora debe tener 2 claves públicas. Ya puedes desconectar de la instancia de despliegue. Vamos a probar que funciona: Fig. 12. Conexión SSH desde la instancia Jenkins a la de despliegue Conecta de nuevo a la instancia jenkins y prueba la conexión ssh a la instancia de despliegue. Recuerda que puesto que Jenkins se está ejecutando como un contenedor, debes probar la conexión ssh desde dentro del contenedor: docker exec -it jenkins-docker ssh ubuntu@instancia_deploy -i /var/jenkins_home/.ssh/id_rsa_deploy En el comando anterior: docker exec -it indica ejecutar un comando desde dentro del contenedor jenkins-docker es el nombre del contenedor ssh ubuntu@instancia_deploy -i /var/jenkins_home/.ssh/id_rsa_deploy es el comando a ejecutar en el contenedor. En este caso, ssh con el parámetro -i …​ para indica la clave privada que debe usar para conectar. Antes de ejecutar el comando, modifica instancia_deploy por el nombre DNS de tu instancia de despliegue. Recuerda que /var/jenkins_home es la carpeta HOME del usuario jenkins dentro del contenedor, y jenkins es el usuario del contenedor que ejecuta Jenkins. La primera vez que realizas una conexión ssh desde un usuario en una máquina origen a una destino, te pregunta si deseas almacenar la clave de host de destino en la lista de hosts conocidos (known_hosts) de tu máquina origen. Contesta: yes Fig. 13. Validar la clave del host: yes Si todo ha ido bien, la conexión se ha debido realizar. Puedes comprobarlo porque en el prompt te aparecerá que estás en la máquina de despliegue. Sal con exit. Ahora el prompt te muestra que estás en la máquina Jenkins. Fig. 14. Conexión correcta Si no ha correcto, verifica que la ruta al archivo de la clave privada es correcta, y que el nombre de la máquina de despliegue es correcto. Comprueba que la clave de host de la máquina de destino (despliegue) se ha guardado en la máquina origen (jenkins) en el archivo ~/.ssh/known_hosts del usuario que ha ejecutado el comando ssh, en nuestro caso, del usuario jenkins de contenedor: docker exec -it jenkins-docker cat /var/jenkins_home/.ssh/known_hosts Fig. 15. Contenido del archivo known_hosts en el contenedor Puedes comprobarlo también mostrando el contenido de known_hosts en el archivo /home/ubuntu/jenkins_home/.ssh/known_hosts. Ambos coinciden, recuerda que hay un volumen mapeado entre la carpeta local /home/ubuntu/jenkins_home y la carpeta del contenedor /var/jenkins_home. Fig. 16. Contenido del archivo known_hosts en la carpeta local Ahora que la conexión por SSH entre la máquina Jenkins y la máquina de despliegue es correcta, vamos a hacer que Jenkins automatice la ejecución de comandos sobre la máquina de despliegue: entra en Jenkins y añade el siguiente comando al proyecto hello_docker existente, sustituyendo MAQUINA_DEPLOY por el nombre DNS de la máquina de despliegue. ssh -i ~/.ssh/id_rsa_deploy ubuntu@MAQUINA_DEPLOY \"pwd && ls -la\" Como aclaración de este comando: el parámetro -i indica la clave privada que queremos usar en la conexión ssh \"pwd && ls -la\" son comandos básicos que ejecuta sobre la máquina remota. Hemos indicado estos comandos simplemente para probar que la conexión se realiza correctamente. Fig. 17. Modificación del proyecto para que ejecute un comando sobre la instancia de despliegue Tras ejecutar el proyecto en Jenkins, el resultado debe ser correcto. Fig. 18. Salida por consola. El comando se ha ejecutado correctamente.","title":"Primeros ejemplos","component":"despliegue-continuo","version":"0.22.2","name":"first-projects","url":"/despliegue-continuo/0.22.2/jenkinsdocker/first-projects.html","titles":[{"text":"Creación del primer proyecto freestyle","hash":"_creación_del_primer_proyecto_freestyle","id":1},{"text":"Creación del primer pipeline","hash":"_creación_del_primer_pipeline","id":2},{"text":"Nodos de ejecución","hash":"_nodos_de_ejecución","id":3},{"text":"Pipeline sobre el nodo principal","hash":"_pipeline_sobre_el_nodo_principal","id":4},{"text":"Pipeline con un contenedor como agente","hash":"_pipeline_con_un_contenedor_como_agente","id":5},{"text":"Usando varios contenedores como agente","hash":"_usando_varios_contenedores_como_agente","id":6},{"text":"Conexión con la máquina de despliegue","hash":"_conexión_con_la_máquina_de_despliegue","id":7},{"text":"Generar la nueva pareja de claves de despliegue","hash":"_generar_la_nueva_pareja_de_claves_de_despliegue","id":8},{"text":"Copiar la clave pública a la instancia de despliegue","hash":"_copiar_la_clave_pública_a_la_instancia_de_despliegue","id":9},{"text":"Prueba de la conexión desde jenkins a despliegue","hash":"_prueba_de_la_conexión_desde_jenkins_a_despliegue","id":10}]},"7":{"id":7,"text":"Objetivos Vamos a usar la primera instancia para instalar Jenkins. En lugar de realizar una instalación completa sobre el sistema operativo, utilizando los paquetes de Ubuntu, tal como se hace en la asignatura Herramientas y Métodos de Ingeniería del Software, de 3º del Grado en Ingeniería Informática, aquí vas a desplegar Jenkins como un contenedor de Docker. Después, crearemos los primeros ejemplos de proyectos en jenkins, tanto un proyecto libre como un proyecto de tipo pipeline. Además, realizaremos la configuración para poder conectar con la instancia de despliegue que nos permitirá automatizar el despliegue sobre ella.","title":"Primeros pasos con Jenkins ","component":"despliegue-continuo","version":"0.22.2","name":"index","url":"/despliegue-continuo/0.22.2/jenkinsdocker/index.html","titles":[]},"8":{"id":8,"text":"A continuación se describe cómo desplegar Jenkins como un contenedor de Docker. La imagen pública del contenedor de Jenkins está disponible en DockerHub, con el nombre jenkins/jenkins:lts. Esta imagen genérica necesita instalarle algunos plugins y herramientas. En concreto, hay que instalarle el propio Docker para permitir que Jenkins ejecute tareas de docker, como por ejemplo docker build para construir imágenes de contenedores. Esto es lo que se conoce como Docker-in-Docker (dind), y hay que gestionarlo correctamente cuando se trata de entornos de CI. Por tanto, vamos a crear una imagen personalizada del contenedor de Jenkins basándonos en la imagen pública e instalándo Docker dentro del contenedor. Lo más adecuado es que construyas la imagen de Jenkins con Docker en la propia máquina donde lo vamos a ejecutar, es decir en la instancia de jenkins. Conecta por ssh a la instancia de jenkins. Recuerda que el usuario de la instancia es ubuntu. Por tanto, la conexión a la misma consistiría en ejecutar desde el terminal el comando ssh ubuntu@MAQUINA_JENKINS sustituyendo MAQUINA_JENKINS por la IP o el nombre DNS de la misma. Si utilizas la shell de la consola web de Google Cloud para conectar por ssh a la máquina, verás que estarás conectado como tu usuario de la UAL, del tipo abc123. En este caso RECUERDA sustituir ubuntu por tu usuario abc123 en todos los comandos y ejemplos de este documento. Realiza las actividades conectando a las instancias bien con el usuario ubuntu de la máquina, o bien si usas la shell de la consola web de Google Cloud, con tu usuario de la UAL (del tipo abc123). Se consistente, es decir, hazlo siempre con el mismo usuario. Se DESACONSEJA ejecutar los comandos como root mediante sudo su. Solamente en caso de que sea absolutamente necesario, ejecuta los comandos con sudo delante para tener permisos de root puntualmente. Si haces las actividades como root, tendrás problemas de permisos de acceso los archivos y carpetas, como por ejemplo a las claves SSH. Prueba que docker se ejecuta correctamente. Si la ejecución de docker ps -a te da error, prueba a ejecutarlo con sudo. Para evitar tener que escribir siempre sudo delante de cualquier comando docker`, ejecuta: sudo usermod -aG docker $USER Tras ello, reinicia la sesión. Prueba ahora sin sudo, a partir de ahora llama siempre a docker sin sudo. Más info aquí Crea una carpeta jenkins-docker y crea el archivo Dockerfile. Usa el siguiente Dockerfile (descrito en esta entrada de medium.com: Jenkins Building Docker Image and Sending to Registry. Dockerfile FROM jenkins/jenkins:lts USER root RUN apt-get update && \\ apt-get -y install apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common && \\ curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \\ add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\ $(lsb_release -cs) \\ stable\" && \\ apt-get update && \\ apt-get -y install docker-ce RUN apt-get install -y docker-ce RUN usermod -a -G docker jenkins USER jenkins Construimos la imagen a partir del Dockerfile: docker build --tag ualjjcanada/jenkins-docker:1.0 . (1) 1 Sustituye ualjjcanada/ por tu usuario de Dockerhub si estás registrado, si no simplemente no lo pongas. Fig. 1. docker build de Jenkins con Docker Fig. 2. docker build successful Comprueba que la imagen ha sido creada, y está disponible en tu máquina: docker image ls Fig. 3. docker image ls Opcionalmente podemos publicar nuestra imagen personalizada en DockerHub, o alternativamente el Google Container Registry. Más adelante se describirá cómo hacerlo. Ejecutamos el contenedor a partir de la imagen creada previamente. Crear una carpeta para jenkins_home que configuraremos como volumen para que los datos de Jenkins se guarden fuera del contenedor. mkdir ~/jenkins_home chmod 777 ~/jenkins_home Ejecutamos el contenedor con docker run: docker run -d --name jenkins-docker -p 80:8080 -p 50000:50000 -v /var/run/docker.sock:/var/run/docker.sock -v ~/jenkins_home:/var/jenkins_home --restart always ualjjcanada/jenkins-docker:1.0 Los parámetros de docker run son: --name jenkins-docker: nombre que le asignamos al contenedor -p 80:8080: jenkins se ejecutará en el puerto 80 en el host, que está mapeado al puerto 8080 del contenedor -v /var/run/docker.sock:/var/run/docker.sock: volumen para compartir el docker socket (usado en la máquina host) con el contenedor. -v ~/jenkins_home:/var/jenkins_home: mapea la carpeta local ~/jenkins_home con la carpeta /var/jenkins_home del contenedor. En el contenedor, la carpeta HOME del usuario jenkins es /var/jenkins_home, donde Jenkins guarda todos los archivos que utiliza. Si se tira el contenedor o se actualiza, no se pierden los datos ya que se guardan \"fuera\" del contenedor. --restart always: inicia el contenedor cuando se enciende la instancia. ualjjcanada/jenkins-docker:1.0: imagen del contenedor a ejecutar, la que hemos construido en el paso anterior. Comprueba que el contenedor está ejecutándose con docker ps Fig. 4. docker ps A continuación se muestran los pasos a realizar en el inicio y configuración básica de Jenkins. Además, se describe la instalación de algunos plugins adicionales. Conectamos a la IP/URL de la instancia con el navegador web. Aparecerá la ventana para introducir el password inicial. Para ver el password ejecuta: cat /home/ubuntu/jenkins_home/secrets/initialAdminPassword Fig. 5. Contraseña inicial de Jenkins Selecciona Install suggested plugins. Fig. 6. Install suggested plugins Tras unos minutos, introduce los datos del usuario administrador de Jenkins. Introduce un nombre de usuario y contraseña. Acepta el nombre de dominio de la máquina. Si aun no has registrado el nombre de dominio, lo puedes hacer más tarde en la configuración general de Jenkins. Jenkins está listo. Fig. 7. Bienvenida a Jenkins Vamos a instalar varios plugins: NodeJs, GitHub integration, Docker Pipeline, Warnings (Next Generation), JaCoCo, Coverage, Google Container Registry Auth. Haz clic en Manage Jenkins > Manage Plugins. En la pestaña Available busca Github integration, seleccionalo y pulsa en Download now and install after restart. Fig. 8. Instalación del plugin Github integration Repite los pasos para los plugins el resto de plugins. Fig. 9. Instalación del plugin NodeJS Marca Restart Jenkins para completar la instalación. Tras unos segundos, vuelve a iniciar sesión y tendrás los plugins instalados. Fig. 10. Reiniciar para completar la instalación Tras la instalación del plugin NodeJS, es necesario realizar la siguiente configuración: Ve a Manage Jenkins, Global Tool configuration. En NodeJS, añade un instalador (se recomienda la última versión lts disponible). Dale por nombre \"nodejs lts\" y marca instalar automáticamente. Guarda los cambios con Save. Fig. 11. Configuración de herramienta NodeJS De la misma forma, instala la última versión de Maven. En este caso dale el nombre Default Maven y marca instalar automáticamente. Fig. 12. Configuración de herramienta Maven","title":"Instalación y configuración de Jenkins","component":"despliegue-continuo","version":"0.22.2","name":"install-jenkins","url":"/despliegue-continuo/0.22.2/jenkinsdocker/install-jenkins.html","titles":[{"text":"Construcción del contenedor Jenkins","hash":"_construcción_del_contenedor_jenkins","id":1},{"text":"Publicación en Google Container Registry","hash":"_publicación_en_google_container_registry","id":2},{"text":"Ejecución del contenedor de Jenkins","hash":"_ejecución_del_contenedor_de_jenkins","id":3},{"text":"Configuración básica de Jenkins","hash":"_configuración_básica_de_jenkins","id":4},{"text":"Instalación de plugins adicionales","hash":"_instalación_de_plugins_adicionales","id":5},{"text":"Configuración las Tools en Jenkins","hash":"_configuración_las_tools_en_jenkins","id":6}]},"9":{"id":9,"text":"Objetivos Como construir y desplegar apliaciones web Node.js con Jenkins Dockerizar la aplicacion Node.js para facilitar su despliegue Desplegar la aplicación Node.js tanto de forma nativa como mediante contenedor Definir un pipeline para automatizar las etapas más habituales en CI/CD","title":"Aplicación en Node.js","component":"despliegue-continuo","version":"0.22.2","name":"index","url":"/despliegue-continuo/0.22.2/node-app/index.html","titles":[]},"10":{"id":10,"text":"Para realizar el despliegue de la app Hola mundo en Node.js como un contenedor, primero tenemos que dockerizar la aplicación. Una vez construido el contenedor, habrá que publicar la imagen de contenedor en un registro como Google Container Registry, y por último ejecutar el contenedor en la instancia de despliegue. A continuación se describe cómo crear un contenedor Docker de la aplicación Node.js. Los pasos se realizan en local, y al final configuraremos el pipeline de Jenkins para que se realicen automáticamente. Para crear el contendedor de Docker que empaquete la aplicación Node.js, vamos a definir el siguiente archivo Dockerfile que debe estar en la carpeta raíz del proyecto: Dockerfile FROM node:10-alpine # Create app directory WORKDIR /usr/src/app # Install app dependencies # A wildcard is used to ensure both package.json AND package-lock.json are copied # where available (npm@5+) COPY package*.json ./ RUN npm install # If you are building your code for production # RUN npm ci --only=production # Bundle app source COPY . . EXPOSE 3000 CMD [ \"npm\", \"start\" ] El Dockerfile es muy sencillo, contiene los pasos básicos para ejecutar una aplicación en un contenedor. Crea además un archivo .dockerignore en la misma carpeta que tu Dockerfile con el siguiente contenido: node_modules/ .git/ .gitignore npm-debug.log Puedes construir la imagen del contenedor: docker build -t <your username>/nodeapp . Tras ello, ejecuta: docker images. La imagen debe aparecer en la lista de imágenes de Docker en tu equipo: Prueba la ejecución del contenedor en local: docker run -p 3000:3000 -d --name hello-node <your username>/nodeapp Comprueba que se ha iniciado la aplicación en http://localhost:3000. Comprueba que el contenedor está ejecutándose con docker ps Detén el contenedor con docker stop <ID> Comprueba que ya no está ejecutándose, pero el contenedor sigue existiendo, lo puedes ver con docker ps -a Podrías volver a arrancarlo con docker start <ID>, pero en su lugar, elimina el contenedor con docker rm <ID> La imagen sigue existiendo, puedes verlo con docker images Una vez creada la imagen con docker build y probada su ejecución con docker run, el siguiente paso será publicar la imagen en un registro de contenedores, mediante docker push. De nuevo vamos a usar Google Cloud Container Registry. Para poder hacer push debemos tener permisos de escritura, y por tanto debemos autenticarnos en el servicio Container Registry. Este proceso ya se hizo en la para el ejemplo de Java en la sección Autenticación en Container Registry. Ahora, simplemente comprueba que mantienes el login del Container Registry. Comprueba el login al registro: docker login https://gcr.io Fig. 1. Comprobar docker login Si docker login te da error, revisa los pasos de la sección anterior de Autenticación en Container Registry. No es necesario que vuelvas a generar el archivo de credenciales, simplemente copia ese archivo .json en el proyecto actual y úsalo para hacer login. En tal caso, no olvides añadir el archivo de credenciales al .gitignore para evitar publicar en GitHub tus credenciales. Etiqueta el contenedor con el nombre completo incluyendo la referencia a Container registry (gcr.io). Primero definimos una variable de entorno con el nombre de nuestro proyecto GCP, y luego etiquetamos la imagen ya construida con un nuevo nombre completo del registro de contenedores: GOOGLE_CLOUD_PROJECT=cnsa-2022-user123 docker tag <your username>/nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Comprueba que se ha etiquetado correctamente Fig. 2. Imagen etiquetada A continuación, publica la imagen en el registro con docker push docker push gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Comprueba que se ha publicado correctamente. Fig. 3. Lista de imágenes en Container Registry La imagen del contenedor nodeapp ya está disponible en el registro privado de nuestro proyecto GCP. Utilizando nuestras credenciales podremos hacer docker pull de dicha imagen para descargarla en cualquier máquina con docker, y ejecutarlo con docker run. docker run -p 3000:3000 -t --name nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Conecta a la instancia de despliegue para ejecutar el contenedor. Antes vamos a comprobar el login al registro. En la máquina de despliegue ya habíamos copiado el archivo de credenciales .json con premisos sobre Container Registry. A continuación se recuerdan los comandos necesarios para ello. # Conectamos a la máquina de despliegue ssh ubuntu@DNS_MAQUINA_DEPLOY # Autenticamos docker contra Container Registry cat keyfile.json | docker login -u _json_key --password-stdin https://gcr.io # ejecutamos el contenedor desde gcr.io docker run -p 8080:3000 -t --name nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Hemos publicado el contenedor en el puerto 8080 ya que es el que está abierto en las reglas del firewall de nuestro proyecto GCP. Es posible que la ejecución del contenedor de un error, porque el puerto 8080 ya esté en uso: Error starting userland proxy: listen tcp 0.0.0.0:8080: bind: address already in use. Para solucionarlo, bien detén el proceso o contenedor java que está corriendo con la aplicación PetClinic del ejemplo anterior. O bien utiliza el puerto 80 que también está abierto. A continuación, vamos a automatizar en Jenkins todo el proceso: la construcción de la imagen del contenedor, la publicación de la imagen en el registro, y el despliegue del contenedor. Los plugins de Jenkins necesarios ya los tenemos configurados el ejemplo en Java. Definimos un nuevo proyecto en Jenkins de tipo pipeline, con el nombre nodeapp-Docker-abc123 sustituyendo abc123 por nuestro nombre de usuario. Son necesarios 3 fases (stages) en el pipeline: build image, push image, y deploy container. Comenzamos por la construcción de la imagen: pipeline { agent any environment { CONTAINER_REGISTRY = 'gcr.io' GOOGLE_CLOUD_PROJECT = 'cnsa-2022' CREDENTIALS_ID = 'cnsa-2022-gcr' } tools { // In Global tools configuration, install Node configured as \"nodejs\" nodejs \"nodejs\" } stages { stage(\"Git Checkout\") { steps { // checkout scm git 'https://github.com/ualcnsa/nodeapp.git' } } stage('Install dependencies') { steps { sh 'npm install' } } stage('Test') { steps { sh 'npm run test-jenkins' } post { success { junit '**/test*.xml' } } } stage(\"Build image\") { steps { script { dockerImage = docker.build( \"${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/nodeapp:${env.BUILD_ID}\", \"-f Dockerfile .\" ) } } } } } Para probar que la imagen del contenedor se ha creado bien, añade la siguiente fase que hace un despliegue \"local\" en la propia máquina de Jenkins, es decir, ejecuta un contenedor basado en la imagen que acabamos de crear: stage(\"Run image locally\") { steps { sh \"docker stop nodeapp || true && docker rm nodeapp || true\" (1) sh \"docker run -d -p 8080:3000 -t --name nodeapp ${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/nodeapp:${env.BUILD_ID}\" (2) } } 1 Por si ya se ha ejecutado el pipeline anteriormente, es necesario comprobar si el contenedor nodeapp ya se está ejecutando, y en tal caso pararlo con docker stop y eliminarlo con docker rm 2 Con docker run ejecuta el contenedor nodeapp a partir de la imagen recién construida. Para que el pipeline pueda finalizar y el contenedor siga ejecutándose, se añade -d que indica modo detached que ejecuta el contenedor en background. Tras ello, la aplicación debe estar accesible en el puerto 8080 en tu máquina de Jenkins. Para asegurarnos que la aplicación se está ejecutando bien, debemos problarlo \"manualmente\". Para automatizar esta prueba, lo adecuado sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test image') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed\"' } } El siguiente paso es publicar la imagen en el registro. Primero, las credenciales en Jenkins para poder hacer push en Container Registry ya están creadas del ejemplo anterior (Si tienes algún problema, consulta la sección correspondiente del ejemplo de Java) Define la fase para publicar la imagen del contenedor: stage(\"Push image\") { steps { script { docker.withRegistry('https://'+ CONTAINER_REGISTRY, 'gcr:'+ GOOGLE_CLOUD_PROJECT) { dockerImage.push(\"latest\") dockerImage.push(\"${env.BUILD_ID}\") } } } } Comprueba que se ha publicado correctamente en el registro. Fig. 4. Imagen publicada en Container Registry, etiquetada con el número de build Por último, quedaría el paso de desplegar al entorno de producción: la máquina virtual de despliegue. Los pasos para el despliegue de la nueva imagen del contenedor consistirán en ejecutar los siguientes comandos sobre la máquina de despliegue: docker stop del contenedor por si estuviera ejecutándose docker rm para eliminar el contenedor existente, que puede estar basado en una imagen de una versión anterior docker run que primero hará un docker pull de la imagen actualizada del registro. Lo lanzaremos en el puerto 80 ya que el 8080 está ocupado por el despliegue que hicimos sin contenedor. Estas acciones debemos añadirlas a un stage del pipeline de Jenkins que se encargará de desplegar el nuevo contenedor automáticamente. En el siguiente código, sustituye DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia de despliegue. También puedes definirla como una variable de entorno al inicio del pipeline. stage('Deploy to Production') { steps{ sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -q --filter name=nodeapp | grep . ; then docker stop nodeapp ; fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -a -q --filter name=nodeapp | grep . ; then docker rm -fv nodeapp ; fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"docker run -d -p 8080:3000 -t --name nodeapp ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/nodeapp:latest\" (2) ''' } } 1 Ejecuta en la instancia de despliegue el comando que detiene y elimina el contenedor nodeapp en caso de que ya se estuviera ejecutando 2 Ejecuta en la instancia de despliegue el comando para ejecutar el contenedor basado en la última versión de la imagen, lanzándolo en background y con -d para que el pipeline finalice y el contenedor permanezca en ejecución. La aplicación nodeapp debe estar accesible en producción, en el puerto 8080 en la instancia de despliegue. Para asegurarnos, debemos problarlo \"manualmente\". Para automatizar esta prueba en producción, lo adecuado de nuevo sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test on Production') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed on Production\"' } } Por último, es una buena práctica eliminar las imágenes que se van generando en cada build, para liberar espacio en la máquina de Jenkins. Primero paramos y eliminamos el contenedor local, luego eliminamos la imagen. stage('Remove Unused docker image') { steps{ // input message:\"Proceed with removing image locally?\" (1) sh 'if docker ps -q --filter name=nodeapp | grep . ; then docker stop nodeapp && docker rm -fv nodeapp; fi' (2) sh 'docker rmi ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/nodeapp:$BUILD_NUMBER' (3) } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline 2 Para y elimina el contenedor local 3 Elimina la imagen de contenedor en local con docker rmi para liberar espacio. El pipeline completo, con todas sus fases, debe quedar así: Fig. 5. Pipeline completo Referencias Dockerizing a Node.js web app @ Node.js Docs A simple docker setup for hello world nodejs application @ Medium Dockerizing a Node.js Web Application @ SemaphoreCI Top 4 Tactics To Keep Node.js Rockin’ in Docker","title":"Hola mundo en Node.js con Docker","component":"despliegue-continuo","version":"0.22.2","name":"node-hello-docker","url":"/despliegue-continuo/0.22.2/node-app/node-hello-docker.html","titles":[{"text":"Creación del Dockerfile","hash":"_creación_del_dockerfile","id":1},{"text":"Publicación de la imagen en el registro","hash":"_publicación_de_la_imagen_en_el_registro","id":2},{"text":"Despliegue en VM","hash":"_despliegue_en_vm","id":3},{"text":"Integración y despliegue continuos con Jenkins","hash":"_integración_y_despliegue_continuos_con_jenkins","id":4}]},"11":{"id":11,"text":"A continuación se muestra un ejemplo de integración y despliegue continuos en Jenkins de un proyecto NodeJs. Los pasos a realizar son similares al ejemplo anterior con Java, el decir, el pipeline tendrá las mismas fases; eso si, adaptaremos las ordenes o comandos a ejecutar a la tecnología Node.js. Al igual con el ejemplo anterior en Java, en primer lugar trabajaremos con la aplicación Node.js sin dockerizar, y después dockerizaremos la aplicación. La mayoría de los pasos siempre los ejecutaremos primero en local, y tras comprobar que funcionan correctamente, los automatizaremos en Jenkins. La implementación de la integración y despliegue continuos permitirá que, para cada cambio de código en el repositorio, Jenkins será notificado y descargará los cambios, instalará las dependencias y ejecutará los tests. Si los tests pasan correctamente, Jenkins desplegará la aplicación en el servidor de despliegue. Y si fallan, se notificará al desarrollador. Nos vamos a basar en el proyecto HelloWorld en NodeJs, disponible en https://github.com/ualcnsa/nodeapp. Necesitarás poder hacer cambios sobre el mismo, así que crea un fork y trabaja con tu fork a partir de ahora. Tras clonar tu fork a local, haz checkout del tag v0.1 en una nueva rama cuyo nombre sea tu usuario de la UAL, para que tus archivos estén en el estado inicial de este tutorial: git checkout tags/v0.1 -b <branch> (1) 1 Usa tu nombre de usuario de la UAL como nombre de la rama. Veamos los archivos que componen la aplicación: El archivo package.json contienen información básica de la aplicación y las dependencias: express: Node framework jest: framework de testing para NodeJs (existen numerosos framework de testing en NodeJs, como Jasmine, Mocha, Tape, etc.) supertest: proporciona abstracción a alto nivel para testing HTTP package.json { \"name\": \"nodeapp\", \"version\": \"1.0.0\", \"description\": \"\", \"main\": \"src/main.js\", \"scripts\": { \"start\": \"node src/main\", \"test\": \"jest\" }, \"author\": \"\", \"license\": \"ISC\", \"dependencies\": { \"express\": \"^4.17.3\" }, \"devDependencies\": { \"jest\": \"^27.5.1\", \"supertest\": \"^6.2.2\" } } Comprueba que los archivos main.js, app.js y app.test.js, así como la carpeta services, estén dentro de una carpeta src. Si no es así, crea la carpeta src y muevelos dentro. Revisa el conetenido de package.json para que sea idéntico al mostrado aquí. Fig. 1. Archivos y carpetas en el estado inicial Para instalar las dependencias ejecuta npm install. El archivo principal del proyecto src/main.js se encarga de arrancar la aplicación en el puerto 3000. src/main.js const app = require(\"./app\"); const port = 3000 app.listen(port, () => { console.log(`Example app listening on port ${port}`) }) El archivo src/app.js es un sencillo hola mundo con dos rutas: / devuelve \"Hello World!\" /:nameToSalute devuelve \"Hello \" + nameToSalute + \"!\" mediante el servicio HelloWordService src/app.js const express = require('express') const HelloWordService = require( \"./services/hello-world\" ); const app = express() app.get('/', (req, res) => { res.send('Hello World!') }) app.get('/:nameToSalute', (req, res) => { res.send(new HelloWordService().greet(req.params.nameToSalute)); }) module.exports = app El archivo src/services/hello-world.js es un servicio de hola mundo. src/services/hello-world.js class HelloWordService { /** * @description Create an instance of HelloWordService */ constructor () { } /** * @description Says Hello to a given name * @param nameToHello {string} Name to greet * greet name * @returns a string that starts with Hello */ greet ( nameToHello ) { return \"Hello \" + nameToHello+\"!\"; } } module.exports = HelloWordService; Para ejecutar la aplicación, ejecuta: npm start Puedes ver la aplicación en el navegador accediendo a http://localhost:3000 o a http://localhost:3000/nombre Test unitarios y end2end En primer lugar tenemos un test unitario para probar el servicio HelloWorldService que comprueba que la salida sea la esperada. Se guardará en la carpeta src/services/ con el nombre hello-world.test.js. src/services/hello-world.test.js const HelloWordService = require(\"./hello-world\"); describe(\"HelloWordService Test\", () => { const helloWordService = new HelloWordService(); it(\"says 'Hello John!' to greet John\", () => { expect(helloWordService.greet(\"John\")).toBe(\"Hello John!\"); }); }); En segundo lugar tenemos varios test end2end. El primer test va a navegar a la raiz de la aplicación (/) y verificar que la página responde con el texto esperado Hello World!. El segundo test navega a /John y comprueba que la página responde con Hello John!. src/app.test.js const request = require(\"supertest\"); const app = require(\"./app\"); describe(\"GET /\", () => { //navigate to root and check the the response is \"Hello World!\" it('responds with \"Hello World!\"', (done) => { request(app).get('/').expect('Hello World!', done); }); }); describe(\"GET /John\", () => { //navigate to /John and check the the response is \"Hello John!\" it('responds with \"Hello John!\"', (done) => { request(app).get('/John').expect('Hello John!', done); }); }); Para ejecutar los tests: npm test Fig. 2. npm test Si todo funciona correctamenente, haz commit y push de tu rama. Definimos un nuevo proyecto tipo Pipeline. Añadimos la descripción del pipeline: pipeline { agent any tools { // In Global tools configuration, install Node configured as \"nodejs\" nodejs \"nodejs\" } stages { stage('Cloning Git') { steps { git branch: 'MI_RAMA', url: 'https://github.com/MI_USUARIO/nodeapp' (1) } } stage('Install dependencies') { steps { sh 'npm install' } } stage('Test') { steps { sh 'npm test' } } } } 1 Cambia el nombre de la rama y la URL del repositorio por las tuyas. El resultado sera: Fig. 3. Nodeapp pipeline La evolución de las métricas del proyecto es uno de los indicadores que habitualmente muestra Jenkins como feedback para los desarrolladores. Vamos a publicar los resultados de los test en un gráfico. Editamos package.json y añadimos el script test-jenkins para generar los resultados de los test en formato xml que usará Jenkins para generar el gráfico, y la dependencia necesaria para ello: package.json: jenkins-test y dependencia mocha-junit-reporter ... \"scripts\": { \"start\": \"node src/main\", \"test\": \"jest\", \"test-jenkins\": \"jest --reporters=default --reporters=jest-junit\", (1) }, \"jest-junit\": { (2) \"outputDirectory\": \"./coverage/\", \"outputName\": \"test.results.xml\", \"usePathForSuiteName\": \"true\" }, ... \"devDependencies\": { \"jest\": \"^27.5.1\", \"jest-junit\": \"^13.0.0\", (3) \"supertest\": \"^6.2.2\" } 1 Añadimos el script test-jenkins que define los formatos de salida de los test: el normal y usando el plugin jest-junit para formato xml. 2 Configuración para jest-junit que genera los resultados de los test en el archivo ./coverage/test.results.xml 3 Dependencia a jest-junit que permite generar los resultados de los test en xml. Podemos probar en local, llamamos a la ejecución de los test y generación del xml: npm run test-jenkins. Añade al .gitignore la carpeta /coverage, ya que su contenido se generará al lanzar los tests y no se debe guardar en el repositorio. Guarda los cambios en el repositorio, para que estén actualizados cuando los lea Jenkins. Actualizamos el pipeline, la fase Test: stage('Test') { steps { sh 'npm run test-jenkins' } post { success { junit '**/test*.xml' } } } Guardamos los cambios. Tras un par de ejecuciones del build, se visualiza el gráfico Test Result Trend: Fig. 4. Publicado el gráfico de tendencia de los test Configura en GitHub un nuevo Webhook para que tras cada cambio de código en el repositorio, Jenkins sea notificado y lance automáticamente la construcción del pipeline: En GitHub, seleccionamos el repositorio sobre el que queremos activar la construcción en Jenkins y hacemos clic en: Settings > WebHooks > Add webhook En Payload URL: http://{YOUR_JENKINS_URL}/github-webhook/ Fig. 5. Nuevo Webhook Finalmente, en la configuración del proyecto en Jenkins, en la sección Build Trigers, marca la opción GitHub hook tirigger from GITScm polling Fig. 6. Activar el Webhook en build trigers A partir de ahora, cuando el repositorio en GitHub reciba un push notificará a Jenkins para que lance la construcción automáticamente. Como ya sabemos, la cobertura de código nos va a ofrecer un valor directamente relacionado con la calidad de los juegos de prueba. Para obtener la cobertura y publicarla en Jenkins, debemos hacer: Añadir a package.json un script para cobertura que permite obtener la cobertura con Jest. Modificar la fase Test de Jenkins para que llame al script de cobertura y publique, en el bloque post, el informe de cobertura generado. 1.Modifica package.json, añadiendo el nuevo script y la dependencia: package.json: cobertura ... \"scripts\": { ... \"coverage-jenkins\": \"jest --reporters=default --reporters=jest-junit --coverage --coverageReporters=text --coverageReporters=html --coverageDirectory=./coverage/\" }, ... Podemos probar en local, llamamos a la ejecución del script: npm run coverage-jenkins. Fig. 7. Ejecución de cobertura Como resultado, en la carpeta coverage del proyecto se ha generado el informe de cobertura. Fig. 8. Informe de cobertura Fig. 9. Informe de cobertura en html Modifica el pipeline de Jenkins, la fase Test: stage('Test') { steps { sh 'npm run coverage-jenkins' (1) } post { success { junit '**/test*.xml' publishHTML target: [ (2) allowMissing : false, alwaysLinkToLastBuild : false, keepAll : true, reportDir : './coverage/', reportFiles : 'index.html', reportName : 'Coverage Report' ] } } } 1 Llama al nuevo script que calcula la cobertura 2 Publica el informe de cobertura Instala el HTML Publisher plugin en Jenkins El resultado en Jenkins, debe aparece un enlace nuevo en el menú de la izquierda: Fig. 10. Enlace al informe de cobertura en html Para poder visualizar correctamente el Coverage Report, hay que cambiar la configuración de seguridad de Jenkins predeterminada, que es muy restrictiva para prevenir de archivos HTML/JS maliciosos que podrían instalarse como parte de un Plugin. Para modificar la configuración, abre la consola de scritps (Manage Jenkins / Script Console), y ejecuta estas líneas: System.setProperty(\"hudson.model.DirectoryBrowserSupport.CSP\", \"sandbox; default-src 'none'; img-src 'self'; style-src 'self' 'unsafe-inline'; \") System.getProperty(\"hudson.model.DirectoryBrowserSupport.CSP\") Fig. 11. Script Console: permisos para visualizar el informe de cobertura Tras ello ya podrás visualizar correctamente el informe de cobertura. Pero ten en cuenta que cada vez que reinicies Jenkins esta configuración se pierde y vuelve a la configuración predeterminada. El código JavaScript es dinámicamente tipado, por lo que en lugar de usar el compilador para realizar el análisis estático de código, como ocurre en lenguajes como Java, las formas más comunes de análisis estático en JavaScript son formatters y linters. Formatters o formateadores, escanean y reformatean rápidamente los archivos de código. Uno de los más populares es Prettier, que como cualquier buen formateador, corregirá automaticamente las inconsistencias que encuentre. Linters pueden trabajar en aspectos de formato pero también otros problemas más complejos. Se basan en una serie de reglas para escanear el código, o descripciones de comportamientos a vigilar, y muestran todas las violaciones que encuentran. El más popular para JavaScript es ESLint. Vamos a probar ESLint. Instala con npm: npm install eslint eslint-config-prettier eslint-plugin-prettier --save-dev A continuación, inicializa un archivo de configuración: npx eslint --init Y responde a las preguntas: Fig. 12. ESLint init Se habrá creado un archivo .eslintrc.json, que incluirá esta línea: { \"extends\": \"eslint:recommended\" (1) } 1 Habilita las reglas predeterminadas En lugar del anterior fichero, puedes utilizar un fichero .eslintrc.js como el siguiente, que contiene recomendaciones para express: module.exports = { env: { es6: true, node: true }, extends: ['prettier'], plugins: ['prettier'], globals: { Atomics: 'readonly', SharedArrayBuffer: 'readonly' }, parserOptions: { ecmaVersion: 2018, sourceType: 'module' }, rules: { 'prettier/prettier': 'error', 'class-methods-use-this': 'off', 'no-param-reassign': 'off', camelcase: 'off', 'no-unused-vars': ['error', { argsIgnorePattern: 'next' }] } }; Añade a package.json un script para lint y la dependencia a ESLint package.json: lint y dependencia a ESLint \"scripts\": { ... \"lint\": \"eslint src/**/*.js -f checkstyle -o coverage/eslint-result.xml\" }, ... \"devDependencies\": { ... \"eslint\": \"^8.10.0\", \"eslint-config-prettier\": \"^8.5.0\", \"eslint-plugin-prettier\": \"^4.0.0\", \"prettier\": \"^2.5.1\", } ... Lánzalo en local: npm run lint -s El parámetro -s se utiliza para que no muestre mensajes de error. Habrá generado el archivo coverage/eslint-result.xml en formato similar al informe de CheckStyle para poder importarlo correctamente en Jenkins. En Jenkins, añade una nueva fase Analysis en el pipeline, en la que llames a lint y publiques el informe generado por ESLint con el formato CheckStyle. stage('Analysis'){ steps{ sh 'npm run lint -s' } post { always{ // record lint issues found, also, fail the build if there are ANY NEW issues found recordIssues enabledForFailure: true, blameDisabled: true, tools: [esLint(pattern: '**/eslint-result.xml')], qualityGates: [[threshold: 1, type: 'NEW']] } } } El enlace al informe de ESLint no aparece en la página principal del proyecto, en el menú de enlaces, sino que tienes que hacer clic en el número del último build, y en la nueva página ya aparece el enlace: Fig. 13. Enlace al informe ESLint No te preocupes si la fase de análisis que acabas de añadir falla (está en rojo). Es así porque cuando ESLint detecta un error, finaliza con error (EXIT 1). Si te fijas en el informe, los 2 errores detectados han sido en el archivo test.js (y pueden ser falsos positivos). Para evitarlo, elimina test/*.js del script lint en package.json. Tras ello, la nueva ejecución del pipeline se ejecutará correctamente. Fig. 14. Fase ESLint passed Para desplegar la aplicación hello world en la instancia de despliegue vamos a clonar el repositorio y a continuación ejecutaremos en ella la orden de Node para ponerla en marcha. Recuerda que ya he hemos realizado una configuración previa sobre la instancia de despliegue, que constituyen los prerrequisitos para esta sección: Con anterioridad ya instalamos NodeJS en la instancia de despliegue. También habíamos copiado la clave pública de despliegue para que Jenkins, que tiene la clave privada asociada, pueda hacer ssh y ejecutar comandos sobre ella. Como requisito adicional, para ayudarnos a lanzar npm start desde Jenkins, como un proceso demonio en background, usaremos forever. Debes instalar forever en la instancia de despliegue: sudo npm install forever -g Una vez revisados los prerrequisitos, añade la fase de despliegue al pipeline en Jenkins: Copia este nueva fase en tu pipeline, sustituyendo DEPLOY_MACHINE por el nombre DNS de tu instancia, y usa el nombre del repositorio git adecuado: stage('Deploy'){ steps { sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"if [ ! -d 'nodeapp' ] ; then git clone https://github.com/ualcnsa/nodeapp.git else cd nodeapp git pull origin master fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"if pgrep node; then forever stopall; fi\" (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"cd nodeapp && npm install\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"cd nodeapp && PORT=8080 forever start index.js\" (4) ''' } } 1 Clona el repositorio si no existe en la máquina de despliegue, si existe hace un pull 2 Detiene la ejecución de forever si existe de un despliegue anterior, usando forever stop. 3 Instala las dependencias 4 Ejecuta la aplicación con forever start en el puerto 8080, que ejecuta el proceso en background como demonio. Referencias Running Node.js on a Virtual Machine codelab How to set up CI/CD Pipeline for a node.js app with Jenkins","title":"Hola mundo en Node.js","component":"despliegue-continuo","version":"0.22.2","name":"node-hello","url":"/despliegue-continuo/0.22.2/node-app/node-hello.html","titles":[{"text":"Construcción y ejecución en local","hash":"_construcción_y_ejecución_en_local","id":1},{"text":"Creación del pipeline en Jenkins","hash":"_creación_del_pipeline_en_jenkins","id":2},{"text":"Webhook para construcción automática","hash":"_webhook_para_construcción_automática","id":3},{"text":"Informe de cobertura","hash":"_informe_de_cobertura","id":4},{"text":"Análisis estático de código","hash":"_análisis_estático_de_código","id":5},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":6}]},"12":{"id":12,"text":"Existen distintas opciones respecto al entorno en el que realizar las actividades propuestas. Tendrás que conectar a las instancias en GCP, lanzar Terraform, lanzar contenedores Docker, etc. Dependiendo del sistema operativo de tu máquina local y de tus gustos personales, te recomiendo alguna las siguientes alternativas: Windows: es recomendable usar un terminal basado en Linux, por ejemplo Git Bash (https://git-scm.com). Linux y Mac: el terminal del S.O incluye todas las herramientas básicas necesarias (git, ssh, etc). Cloud Shell de Google Cloud: la consola web de Google Cloud proporciona la herramienta Cloud Shell que permite trabajar cómodamente contra GCP desde cualquier navegador web y cualquier S.O. Recuerda que Cloud Shell tiene una cuota de uso, con un límite de número de horas semanales (168h): Fig. 1. Cuota de Cloud Shell Para ver tu cuota semanal, haz clic en Información de la sesión y, luego, en Cuota de uso. Aparecerá un cuadro de diálogo en el que se mostrarán las horas restantes en tu cuota, la cantidad total de horas en ella y la fecha y hora en que se restablecerá la cuota. A continuación se explican las herramientas que debes configurar si estás usando tu máquina local, aunque probablemente algunas ya las tendrás instaladas. Si optas por trabajar en Cloud Shell, seguramente también estarán ya instaladas. En general evita usar el usuario root salvo que sea estrictamente necesario, para no generar problemas de permisos sobre los archivos y carpetas cuando estés usando un usuario distinto de root. Utiliza sudo delante de los comandos estrictamente cuando requieras permisos de administrador, pero evita hacerlo de forma predeterminada (evita sudo su). Para comenzar a trabajar, será necesario tener instalados en la máquina local las siguientes herramientas: Terraform, Google Cloud CLI. Se presupone que ya se tiene instalado un entorno de desarrollo como Visual Studio Code, y una pareja de claves SSH personal en la carpeta HOME del usuario (~). ~/.ssh/ ├── id_rsa (1) └── id_rsa.pub (2) 1 clave privada 2 clave pública Recuerda que ~/ hace referencia la carpeta HOME del usuario en la máquina local: En Windows: C:\\Users\\USUARIO En Mac: /Users/USUARIO En Linux: /home/USUARIO Creación de pareja de claves SSH Si aun no tienes pareja de claves SSH, ejecuta el siguiente comando en tu terminal para crear una nueva pareja de claves SSH, usando el email como etiqueta: ssh-keygen -t rsa -b 4096 -C \"your_email@inlumine.ual.es\" Cuando te pregunte Enter a file in which to save the key presiona Enter para aceptar el nombre de archivo predeterminado (id_rsa) Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter] A continuación te pedirá una contraseña o passphrase, de nuevo presiona Enter. Enter passphrase (empty for no passphrase): [Press enter] Presiona Enter de nuevo: Type passphrase again: [Press enter] Consulta si la pareja de claves se ha creado correctamente: ls -al ~/.ssh Además, se debe disponer de crédito en GCP, proporcionado por el profesor, y darse de alta en Github Student Education Pack. A continuación se describen en detalle estos requisitos previos. Si ya dispones de crédito en GCP, podrás usarlo ahora. En cualquier caso, para esta asignatura disponemos de un nuevo cupón educativo de 50$ por estudiante, que no necesita tarjeta de crédito para su activación. Actívalo en la dirección que encontrarás en el Aula Virtual de la asignatura, en la sección Area de Contenido > Cupones de GCP, usando tu email @inlumine.ual.es. Accede a la Consola de Google Cloud y crea un nuevo proyecto GCP con el nombre cnsa2024-abc123 (indicando el año correcto y sustituyendo abc123 por tu nombre de usuario), y dale permisos al profesor. Para ello, revisa las instrucciones que vimos en la asignatura del primer cuatrimestre. El crédito del cada cupón dura 12 meses, así que este nuevo proyecto asígnalo a la cuenta de facturación de la asignatura del primer cuatrimestre, ya que es mejor consumir ese crédito porque caduca antes. Si se consume el crédito del primer cupón, simplemente tendrás que cambiar tu proyecto cnsa2024-abc123 a la nueva cuenta de facturación del nuevo cupón. Terraform es una aplicación que se distribuye en un único archivo ejecutable. Las instrucciones de instalación de Terraform está disponibles aquí. En Windows se recomienda instalarlo con Chocolatey. Así que si previamente has instalado Chocolatey, simplemente abre una ventana de comandos (cmd) con permiso de administrador y ejecuta: choco install terraform -y Cierra el terminal o la ventana de comandos, abre una nueva con permisos normales y comprueba que se ha instalado correctamente: terraform -v La salida debe mostrar la version instalada: $ terraform -v Terraform v1.1.6 on windows_amd64 Google Cloud Command Line Interface está disponible para su instalación aquí. En Windows se recomienda instalarlo con Chocolatey: abre una ventana de comandos (cmd) con permiso de administrador y ejecuta: choco install gcloudsdk -y Para poder usar servicios adicionales, como DNS gratuito, debes darte de alta en Github Student Education Pack. Si ya dispones de una cuenta de GitHub, y no quieres crear una cuenta nueva, simplemente debes añadir tu email @inlumine.ual.es a la lista de emails de tu cuenta actual. Para ello, sigue las instrucciones. Tras añadir tu email, haz clic en el enlace Get the pack.","title":"Prerrequisitos","component":"despliegue-continuo","version":"0.22.2","name":"index","url":"/despliegue-continuo/0.22.2/prerrequisitos/index.html","titles":[{"text":"1. Entorno de desarrollo","hash":"_entorno_de_desarrollo","id":1},{"text":"2. Cupones educativos Google Cloud","hash":"_cupones_educativos_google_cloud","id":2},{"text":"3. Terraform","hash":"_terraform","id":3},{"text":"4. GCloud CLI para GCP","hash":"_gcloud_cli_para_gcp","id":4},{"text":"5. Github Student Education Pack","hash":"_github_student_education_pack","id":5}]},"13":{"id":13,"text":"Computación en la Nube, Servicios y Aplicaciones. Joaquín Cañadas <jjcanada@ual.es>, Francisco García <paco.garcia@ual.es> Version 0.24.0 Objetivos Crear una infraestructura de CI/CD en GCP con Máquinas Virtuales gestionadas con Terraform Diseñar proyectos Jenkins para la construcción y despliegue automatizado de aplicaciones en Java y NodeJs Realización y entrega La realización de estas actividades se realizará de forma individual. Serán la base para actividades posteriores que ser harán en equipo. La entrega será mediante el envío de un informe y el acceso al profesor a los servicios configurados por cada estudiante, para la revisión y evaluación de los mismos. Esta es la versión 0.24.0 de este documento.","title":"Despliegue continuo con Jenkins","component":"despliegue-continuo","version":"0.24.0","name":"index","url":"/despliegue-continuo/0.24.0/index.html","titles":[]},"14":{"id":14,"text":"Objetivos Utilizando una plantilla de terraform crea 2 instancias de máquina virtuales en tu proyecto en Google Cloud: Instancia para instalar Jenkins mediante un contenedor Docker. Instancia de despliegue (VM Deploy) con Docker y Docker Composer instalados. Fig. 1. Máquinas virtuales creadas con Terraform Para crear las instancias, utiliza la plantilla de terraform disponible en el repositorio https://github.com/ualcnsa/terraformGoogleCloudSample. En primer lugar realiza un fork del repositorio, para hacer las modificaciones al mismo que sean necesarias. Después, sobre tu fork, modifica las variables correspondientes para usar tu proyecto en la plantilla, tal y como se describe a continuación. El repositorio consta de tres archivos con extension .tf, y una carpeta con un template para la creación de instancias. terraformGoogleCloudSample ├── instance │ └── main.tf (4) ├── .gitignore ├── README.md ├── mynetwork.tf (2) ├── output.tf (3) └── provider.tf (1) 1 Descripción del proveedor sobre el que ejecutar la plantilla, en nuestro caso Google Cloud. 2 Plantilla principal. Crea la red, las reglas de firewall, las 2 instancias llamando al módulo main.tf de la carpeta instance, y por último realiza la inicialización de cada instancia. 3 Plantilla con los valores que se muestran de salida al finalizar la ejecución 4 Módulo genérico para crear una instancia. Es llamado desde network.tf pasándole las variables que necesita para crear la instancia. El archivo provider.tf deberás modificarlo: provider.tf # Descargar json con credenciales de aquí: # https://console.cloud.google.com/apis/credentials/serviceaccountkey # Tras ello definir la variable de entorno apuntando a el json # export GOOGLE_CLOUD_KEYFILE_JSON=path/file.json variable \"gcp_project\" { # Configurar el nombre del proyecto en GCP default = \"cnsa-2024\" (1) } terraform { required_providers { google = { source = \"hashicorp/google\" version = \"5.18.0\" (2) } } } provider \"google\" { project = var.gcp_project region = \"us-central1\" zone = \"us-central1-c\" } 1 Sustituye este valor por el nombre de tu proyecto, indicando el año correcto y concatenando tu nombre de usuario de la UAL (cnsa2024-abc123) 2 Versión del proveedor de Google Cloud que se va a utilizar. Utiliza la última disponible, que puedes consultar en aquí. Para que terraform pueda conectar al provider Google Cloud desde tu máquina local, debes proporcionar clave para la Cuenta de servicio. Seleccionar el proyecto Google Cloud. En el menú de navegación seleccionar IAM y administración | Cuentas de servicio. Fig. 2. Creación del archivo de credenciales Google Cloud 1 Selecciona el proyecto 2 Selecciona Crear Cuenta de Servicio Da un nombre a la cuenta de servicio (p.e. terraform), y pulsa Crear y Continuar Fig. 3. Propiedades del archivo de credenciales Google Cloud Selecciona el rol Administrador de Compute Engine (también es suficiente con Proyecto → Editor), y pulsa Continuar Fig. 4. Rol de administrador de la cuenta de servicio Deja en blanco los siguiente campos, y pulsa Listo. A continuación, accede a la cuenta de servicio recien creada: Fig. 5. Detalles de la nueva cuenta de servicio Ve a la pestaña Claves, Agregar Claves, Crear nueva Clave. Fig. 6. Nueva clave de cuenta de servicio Dejar JSON en el tipo de clave. Fig. 7. Nueva clave de cuenta de servicio JSON Seleccionar Crear. A continuación se descargará la clave privada. Fig. 8. Nueva clave descargada Guarda el archivo .json en la carpeta credentials del proyecto terraform. A continuación, en tu terminal define la variable de entorno apuntando a el archivo recién descargado, sustituyendo path/file.json por la ruta relativa y el nombre del archivo de credenciales: export GOOGLE_CLOUD_KEYFILE_JSON=path/file.json Recuerda: NUNCA subas tu archivo de credenciales json a un repositorio público como GitHub. Para evitarlo, añade el nombre el archivo de credenciales al .gitignore. Se recomienda guardar el archivo .json en una carpeta llamada credentials, porque ya estaría ignorado, puedes verlo en el .gitignore del repositorio que has forkeado. En el archivo de credenciales va tu clave privada que sustituye a tu usuario y contraseña para crear recursos en GCP. Hay robots que continuamente analizan repositorios públicos de GitHub buscando PRIVATE KEYS y API TOKENS. Si un hacker accede a ese archivo, lo usará para crear servicios hasta agotar tu crédito por completo, fundamentalmente para minar bitcoins. Videotutorial Accede al videotutorial explicativo de esta sección (mp4, 20 minutos, 171M). Una vez configurado el provider comprueba que la conexión es correcta: en tu terminal, ejecuta el comando terraform init para inicializar el proyecto como un proyecto terraform. Si todo es correcto aparecerá un mensaje de éxito. Fig. 9. terraform init correcto Si por el contrario recibes algún mensaje de error, revisa el motivo del error: Terraform puede que no esté accesible. Debería estar en el PATH Revisa si la variable de entorno si se ha guardado correctamente, ejecuta echo $GOOGLE_CLOUD_KEYFILE_JSON y comprueba que es la ruta y nombre de archivo correctos. Ejecuta el comando terraform plan para ver el resultado de elementos que se crearán o eliminarán al ejecutar la plantilla. Debe aparecer que se crearán 7 elementos. Fig. 10. terraform plan correcto Ejecuta el comando terraform apply --auto-approve para ejecutar la plantilla. Comenzará a crear los 7 elementos definidos en la plantilla. Tardará unos 5 minutos o incluso más, así que ten paciencia. Sobre todo tardará en ejecutar los bloques de inicialización de las instancias, en las que se actualizan los paquetes, se instala Docker y otros paquetes. En todo momento verás en pantalla el log de las operaciones que se están realizando. Si la primera vez que aplicas el plan aparece un mensaje de Error: …​ Error 403: Compute Engine API has not been used in project…​ es debido a que aun no se ha activado la API de Compute Engine en el proyecto. Haz clic en el enlace del error y activa la API. Espera un par de minutos y vuelve a lanzar terraform. Fig. 11. Habilitar la API de Compute Engine Tras la ejecución, comprueba que las instancias se han creado correctamente en tu proyecto Google Cloud. Apaga las instancias cuando dejes de usarlas, para evitar que consuman crédito. Cuando desees eliminar todos los recursos que hemos creado con esta plantilla, simplemente ejecuta terraform destroy. Por ahora debes simplemente apagar las instancias cuando no las uses, porque las necesitaremos en el resto de la asignatura. terraform state list: Muestra todos los recursos que gestiona terraform. terraform state show <recurso>: Muestra los detalles de un recurso concreto. terraform show: Muestra los detalles de todos los recursos. Si necesitas destruir y volver a crear un recurso concreto, y no todo el plan: terraform plan -destroy -target=<recurso>: Muestra el plan de destrucción de un recurso concreto. terraform destroy -target=<recurso> --auto-approve: Destruye un recurso concreto. Google Cloud ha asignado una IP pública estática a cada una de tus instancias (la IP no cambiará al apagar la instancia y volver a encenderla). A continuación, vamos a asignar nombres de DNS a esas IPs con Cloud DNS y uno de los servicios de DNS disponibles en el Student Pack de GitHub. GitHub Student pack ofrece varios servicios de nombres dominios gratuitos durante 1 año. Puedes usar name.com, namecheap, o .tech domains. En uno de ellos vamos a dar de alta un nombre de dominio para nuestras instancias en Google Cloud. Voy a describir cómo hacerlo con .tech. Accede a get.tech y prueba un nombre de dominio que te guste y que esté disponible. Cuando encuentres el adecuado, añadeló al carrito con la opción Buy for 1 year seleccionada. Fig. 12. Comprobar si el dominio está disponible en get.tech A continuación, inicia sesión con tu cuenta de github, y verás que tienes el descuento por un año. Procede a la compra gratuita. Además, tendrás que registrarte para poder acceder posteriormente a la configuración. Debes completar los datos de registro ya que te identifican como propietario del nombre de dominio. Si lo deseas, usa como dirección Universidad de Almería, Ctra. Sacramento s/n, 04120, Almería, Spain. Para configurar el nombre de dominio que acabas de adquirir a las IPs reservadas, debes usar Cloud DNS en Google Cloud. Cloud DNS permite asignar los nombres de dominio a las direcciones IP públicas de las instancias. Recuerda comprobar que las IPs son estáticas. En el menú de la consola de Google Cloud, entra en Servicios de red, Cloud DNS. Fig. 13. Cloud DNS Haz clic en Crear Zona. Fig. 14. Cloud DNS, crear zona A continuación, haz clic en Añadir Conjunto de registros. Para cada instancia, crea un conjunto de registros. Fig. 15. Cloud DNS. Crear conjunto de registros, instancia Jenkins Fig. 16. Cloud DNS. Crear conjunto de registros, instancia de despliegue de apps Tras la creación, debes tener un resultado similar a este: Fig. 17. Cloud DNS. Detalles de la Zona El último paso será modificar los servidores de DNS de la configuración en la web .tech, para poner los valores de los servidores de Google Cloud. Para ello, inicia sesión en get.tech. Entra en tu pedido. Fig. 18. get.tech. Acceso al pedido Modifica los nombres de los servidores con los valores de tu zona en Cloud DNS Fig. 19. get.tech. Nombres de los servidores Guarda los cambios. Hasta pasadas 24 horas no estarán disponibles.","title":"Creación de la infraestructura en Google Cloud","component":"despliegue-continuo","version":"0.24.0","name":"index","url":"/despliegue-continuo/0.24.0/infraestructura/index.html","titles":[{"text":"Estructura del proyecto terraform","hash":"_estructura_del_proyecto_terraform","id":1},{"text":"Creación de la clave para la Cuenta de servicio","hash":"_creación_de_la_clave_para_la_cuenta_de_servicio","id":2},{"text":"Ejecución de terraform","hash":"_ejecución_de_terraform","id":3},{"text":"terraform init","hash":"_terraform_init","id":4},{"text":"terraform plan","hash":"_terraform_plan","id":5},{"text":"terraform apply","hash":"_terraform_apply","id":6},{"text":"terraform destroy","hash":"_terraform_destroy","id":7},{"text":"Más comandos útiles","hash":"_más_comandos_útiles","id":8},{"text":"Cloud DNS","hash":"_cloud_dns","id":9},{"text":"Alta de nombre de dominio","hash":"_alta_de_nombre_de_dominio","id":10},{"text":"Configuración de nombres de dominio","hash":"_configuración_de_nombres_de_dominio","id":11}]},"15":{"id":15,"text":"Objetivos Como construir y desplegar apliaciones web Java con Jenkins Dockerizar la aplicacion web Java para facilitar su despliegue Desplegar la aplicación Java tanto de forma nativa como mediante contenedor Definir un pipeline con las etapas más habituales en CI/CD","title":"Aplicación Web Java","component":"despliegue-continuo","version":"0.24.0","name":"index","url":"/despliegue-continuo/0.24.0/java-web-app/index.html","titles":[]},"16":{"id":16,"text":"Una vez que hemos configurado correctamente nuestro entorno de CI/CD con Jenkins, vamos a estudiar varios ejemplos tanto en Java como en NodeJs. Para comprender los ejemplos, primero los vamos a construir y ejecutar en local, para después automatizar el proceso de construcción y despliegue con Jenkins. En este primer ejemplo en Java, nos vamos a basar en el proyecto PetClinic con Spring Boot. Petclinic es una aplicación Spring Boot construida usando Maven como herramienta de soporte a la gestión y construcción (build). Spring Boot es un framework de código abierto para el desarrollo de aplicaciones Java basadas en Spring. Spring Boot genera una proyecto Maven/Gradle con todo lo necesario y que se autoconfigura en el arranque. Por ejemplo, si decimos que queremos una aplicación web, Spring Boot automáticamente embebe un Tomcat y lo configura con el servlet de Spring. Toda la configuración la añade al archivo de la herramienta de build que indiquemos, en caso de Maven, al archivo pom.xml. Recordemos que Maven es una herramienta software para la gestión y construcción de proyectos Java. Apache Maven estandariza la configuración de un proyecto en todo su ciclo de vida, como son todas las fases de compilación, ejecución de pruebas, empaquetado, etc. Maven permite la gestión de dependencias entre módulos y distintas versiones de librerías, simplemente indicando los módulos que componen el proyecto, y las dependencias utiliza el software que estamos desarrollando, en un fichero XML de configuración llamado POM (Project Object Model). Para ejecutar el proyecto PetClinic, en tu máquina de desarrollo local puedes construir el .jar (empaquetado) y ejecutarlo: Requiere JDK 11 o superior en la máquina local. Si estás en Windows y tienes varias instalaciones, establece la version de Java predeterminada. git clone https://github.com/spring-projects/spring-petclinic.git cd spring-petclinic ./mvnw package (1) java -jar target/*.jar (2) 1 Llama a mvnw, el warper de Maven que instala Maven (si es necesario), y ejecuta el goal package que se encarga de compilar, ejecutar los test y empaquetar la aplicación en un único archivo ejecutable .jar. La primera vez que lances la construcción tardará más de 5 minutos, ya que tiene que descargar todas las dependencias necesarias desde los repositorios de Maven (Maven Central), y después lanzar los tests. Toda la configuración necesaria está contenida en el archivo pom.xml de Maven. 2 Ejecuta la aplicación a partir del .jar. Puedes acceder a PetClinic en: http://localhost:8080/ Fig. 1. Página principal de PetClinic En su configuración predeterminada, Petclinic utiliza una base de datos en memoria (H2) que se inicia con datos predeterminados, y los nuevos datos que se guarden se pierden al reiniciar la aplicación. En caso de necesitar persistencia de los datos, PetClinic también está preconfigurada para usar MySql. Para cambiar el tipo de base de datos, la aplicación debe ejecutarse con un perfil de MySql: spring.profiles.active=mysql. java -Dspring.profiles.active=mysql -jar target/*.jar Recuerda que para ejecutarla en este modo, debes tener un MySql funcionando en local, o bien lanzar MySql como contenedor con docker o con docker-compose. Existe un archivo docker-compose.yml disponible en el repositorio del proyecto PetClinic, por tanto puedes iniciar MySql así: docker-compose up -d El archivo docker-compose.yml que permite iniciar MySql y Postgres puedes consultarlo en la carpeta raíz del proyecto. Si abres el repositorio de PetClinic con VS Code, verás que el IDE te sugiere abrir el proyecto en un entorno Dev Containers. Esto no es necesario, puedes cerrar el aviso. Fig. 2. Aviso Dev Containers en Visual Studio Code Pero si aceptas, se descargará una imagen de Docker con un entorno de desarrollo preconfigurado para trabajar con el proyecto, así como las imágenes de MySql y Postgres. En ese caso, al lanzar la construcción del proyecto, los tests de integración se ejecutan sobre las bases de datos MySql y Postgres. Una vez que hemos probado la ejecución y funcionamiento de la aplicación PetClinic en local, vamos a configurar el proyecto en el servidor Jenkins de CI/CD para que este se encargue de la construcción y el despliegue automatizados. Conecta a tu Jenkins, y crea un nuevo item de tipo Pipeline. Dale el nombre spring-petclinic-pipeline: Fig. 3. New Item, PetClinic pipeline En el bloque Pipeline, pega la configuración siguiente: pipeline { agent any (1) tools { // Previamente has debido instalar Maven con el nombre \"Default Maven\" maven \"Default Maven\" (2) } stages { (3) stage('Git fetch') { (4) steps { // Get some code from a GitHub repository git branch:'main', url:'https://github.com/spring-projects/spring-petclinic.git' } } stage('Compile, Test, Package') { (5) steps { // Run goal 'package' includes compile, test and package. sh \"mvn clean package -Dcheckstyle.skip -Dtest=!PostgresIntegrationTests*\" (7) } post { (6) // If Maven was able to run the tests, even if some of the test // failed, record the test results and archive the jar file. success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } } } 1 agente o nodo de Jenkins en que ejecuta la construcción del proyecto. En el ejemplo, any indica que se ejecutará cualquier nodo, en nuestro caso será en el nodo principal (main) ya que es el único que hay definido. 2 como herramienta para la construcción se usará Naven. Pon aquí el nombre que diste a tu instalación de Maven configurada previamente en Tools Configuration. 3 Bloque de stages: fases o etapas que conforman el pipeline 4 Fase de descarga del repositorio git 5 Fase de compilación, ejecución de test y empaquetado de la aplicación. Se realiza con los goals de Maven clean package: primero clean elimina todo lo generado en la construcción anterior que se encuentra en la carpeta target, y a continuación se lanza la construcción con package tal y como está definida en el archivo pom.xml. La opción -Dcheckstyle.skip anula el análisis de CheckStyle, que lo añadiremos en una fase posterior. 6 Paso posterior que guarda los resultados de los test de JUnit para generar la gráfica de evolución de los test. 7 La opción -Dtest=!PostgresIntegrationTests* excluye la ejecución de los tests de integración con Postgres, ya que estos fallan en Jenkins porque hay algún problema con el contenedor de Postgres que se inicia en la construcción del proyecto. Tras ejecutar el pipeline, con \"Build now\", el resultado debe ser el siguiente: Fig. 4. Construcción del pipeline PetClinic Si realizamos una segunda ejecución, ya aparecerá la gráfica de evolución de los tests de JUnit. Alternativamente, podemos hacer que la construcción se realice en un agente que sea un contenedor docker. Para ello, crea el siguiente pipeline de nombre spring-petclinic-pipeline-agent-docker: pipeline { agent { docker { (1) image 'maven:3.9-eclipse-temurin-17-alpine' args '-v $HOME/.m2:/root/.m2' } } stages { stage('Git fetch') { steps { // Get some code from a GitHub repository git branch:'main', url:'https://github.com/spring-projects/spring-petclinic.git' } } stage('Compile, Test, Package') { steps { // Run goal 'package' includes compile, test and package. sh \"mvn clean package -Dcheckstyle.skip -Dtest=!PostgresIntegrationTests*\" } post { // If Maven was able to run the tests, even if some of the test // failed, record the test results and archive the jar file. success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } } } 1 Agente donde construir el proyecto, ahora no se hace en el nodo principal sino en un contenedor docker seleccionado. La imagen de Maven que se utiliza es maven:3.9-eclipse-temurin-17-alpine, y se monta el volumen del directorio .m2 del usuario en el contenedor. Se ha elegido la imagen de Maven con Java 17 y Alpine, que es una distribución de Linux muy ligera, en lugar de la imagen de Maven con Java 21 porque esta última da problemas con la creación del directorio .m2 en el contenedor. Jenkins nos permite publicar métricas asociadas al proyecto. Una de ellas, es la cobertura de código ejecutado por las pruebas. La Cobertura de código nos indica el porcentaje de código de producción que está siendo ejecutado por los test. Es deseable tener un valor de cobertura lo más próximo posible al 100% El proyecto PetClinic contiene mas de 40 tests unitarios en JUnit, y está configurado (ver pom.xml) para que se calcule la cobertura cuando se lanzan los tests mediante el plugin JaCoCo (Java Code Coverage). Puedes visualizar el resultado de la cobertura en tu construcción local, en la carpeta target/site/jacoco: Fig. 5. Archivos generados por JaCoCo Fig. 6. Informe html de la cobertura JaCoCo Y si haces clic en el nombre de una clase, verás el código coloreado: Fig. 7. Detalle la cobertura de las lineas de código 1 Las lineas verdes están cubiertas, es decir, han sido ejecutadas por al menos 1 test. 2 Las lineas amarillas están parcialmente cubiertas (missed branches): un resultado de la condición (verdadero/falso) ha sido ejecutado por algún test pero el otro no ha sido ejecutado por ningún test. 3 Las líneas rojas no están cubiertas, no han sido ejecutadas por ningún test. Para visualizar el resultado de la cobertura en Jenkins: Instala el plugin de JaCoCo y el plugin Coverage (si no lo habías hecho antes): Fig. 8. Instalación del plugin Jacoco Añade las siguientes lineas al bloque post para que se guarde y muestre el informe de cobertura. ... success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' jacoco(execPattern: 'target/jacoco.exec') (1) recordCoverage(tools: [[parser: 'JACOCO']], (2) id: 'jacoco', name: 'JaCoCo Coverage', sourceCodeRetention: 'EVERY_BUILD', qualityGates: [ [threshold: 60.0, metric: 'LINE', baseline: 'PROJECT', unstable: true], [threshold: 60.0, metric: 'BRANCH', baseline: 'PROJECT', unstable: true]]) } ... 1 Añade el informe Coverage Trend 2 Añade el informe Coverage Tras la construcción de nuevo del proyecto, verás la gráfica de los resultados de los test y debajo la gráfica de evolución de cobertura: Fig. 9. Informe de cobertura en el dashboard Haciendo clic sobre la gráfica accedes a los detalles: Fig. 10. Detalle de de cobertura Para mantener y aumentar la calidad de nuestro código debemos ayudarnos, entre otras herramientas, de técnicas de análisis estático de código. Básicamente, se encargan de buscar defectos en el código sin necesidad de que este se ejecute. En Java una de las más habituales es Checkstyle, aunque hay otras como FindBugs, PMD, y SonarQube que integra a los anteriores. CheckStyle valida el estilo del código respecto al estilo oficial de Java. El proyecto PetClinic tiene configurado el plugin de CheckStyle en el pom.xml: <maven-checkstyle.version>3.3.1</maven-checkstyle.version> ... <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> <version>${maven-checkstyle.version}</version> ... </plugin> ... Para ejectutar CheckStyle en local, ejecuta el comando de maven (mvn) con los siguietnes goals: mvn checkstyle:checkstyle site -DgenerateReports=false Tras la ejecución, en la carpeta target/site/ verás el archivo checkstyle.html: Fig. 11. Informe de CheckStyle Sería labor del equipo de desarrollo revisar los errores detectados y tratar de corregirlos, siempre que realmente supongan una mejora para la calidad del código. Para ejecutar y visualizar el informe de CheckStyle en Jenkins: Instalar el plugin Warnings Next Generation. Añadir al pipeline un nuevo stage con la siguiente descripción: stage ('Analysis') { steps { // Warnings next generation plugin required sh \"mvn checkstyle:checkstyle site -DgenerateReports=false\" recordIssues enabledForFailure: true, tool: checkStyle() } } Tras la construcción, el pipeline tiene una nueva fase y además en el menú tenemos acceso al informe de CheckStyle. Fig. 12. Pipeline con la nueva fase de Análisis Fig. 13. Detalles del informe de CheckStyle Saber más…​ Si estás interesado en profundizar en este tema, te recomiendo integrar SonarQube con Jenkins, ya que SonarQube realiza un análisis mucho más detallado de la calidad y seguridad del código, realizando tanto análisis estático de código (CheckStyle y otros), como de análisis de seguridad (vulnerabilidades), y definiendo lo que denomina Quality Gates que permiten definir condiciones que se deben cumplir basadas en los valores de las métricas del proyecto (por ejemplo, que la cobertura de código sea mayor del 80%). Puedes encontrar mucha documentación online sobre cómo hacerlo: Instalar SonarQube como aplicación o como contenedor Docker (recomendado) Instalar el plugin SonarQube Scanner for Jenkins Configurar SonarQube Scanner for Jenkins Añadir al pipeline la fase de análisis de Sonar (Declarative pipeline example:). Más info de Sonar en pipeline: SonarQube Scanner for Jenkins Además, Si tu proyecto está en un repositorio público en GitHub, puedes ahorrarte tener que instalar tu propio SonarQube utilizando SonarCloud, el servicio de SonarQube en la nube (SaaS) gratuito para proyectos públicos, con el que evitas tener que instalar y mantener tu propio SonarQube. Para lanzar el análisis de Sonar con maven: Genera el login TOKEN Ejecuta los goals de maven: clean verify sonar:sonar -Dsonar.login=$SONAR_LOGIN_TOKEN Incluso puedes configurar SonarCloud y Jenkins para que analizar los pull request de tu repositorio y conocer el resultado del análisis de Sonar antes de hacer el merge del pull request. Para desplegar la aplicación PetClinic en la instancia de despliegue vamos a copiar sobre ella el archivo JAR y a continuación ejecutaremos en ella la orden de java para ponerla en marcha: Copia este nueva fase en tu pipeline, sustituyendo DEPLOY_MACHINE por la IP o el nombre DNS de tu instancia: stage('Deploy'){ steps { sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"mkdir -p ~/spring-petclinic\" (1) scp -i ~/.ssh/id_rsa_deploy $WORKSPACE/target/*.jar ubuntu@DEPLOY_MACHINE:~/spring-petclinic (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"if pgrep java; then pkill java; fi\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"nohup java -jar ~/spring-petclinic/*.jar > ~/spring-petclinic/yourservice.log 2>&1 &\" (4) ''' } } 1 Crea la carpeta spring-petclinic dentro de la carpeta HOME del usuario ubuntu en la máquina de despliegue 2 Copia con scp el archivo .jar, que se ha generado tras la construcción con maven, en la máquina de despligue 3 Detiene el proceso java si existe de un despliegue anterior. 4 Ejecuta la aplicación java empaquetada en el .jar, en background y con nohup, que hace que el proceso siga funcionando incluso si el usuario que lo inició cierra la sesión. De esta manera finaliza el comando ssh y el proceso sigue funcionando, es decir, la aplicación PetClinic estará desplegada y funcionando. Tras ello abre la máquina de despliegue en el puerto 8080, y verás la aplicación PetClinic funcionando. Fig. 14. Homepage PetClinic Referencias: How to build on Jenkins and publish artifacts via ssh with Pipelines","title":"PetClinic","component":"despliegue-continuo","version":"0.24.0","name":"java-petclinic","url":"/despliegue-continuo/0.24.0/java-web-app/java-petclinic.html","titles":[{"text":"Construcción y ejecución en local","hash":"_construcción_y_ejecución_en_local","id":1},{"text":"Creación del Pipeline para PetClinic","hash":"_creación_del_pipeline_para_petclinic","id":2},{"text":"Informe de Cobertura de código","hash":"_informe_de_cobertura_de_código","id":3},{"text":"Análisis estático de código: Checkstyle","hash":"_análisis_estático_de_código_checkstyle","id":4},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":5}]},"17":{"id":17,"text":"Para realizar el despliegue de PetClinic como contenedor: Primero, tenemos que dockerizar la aplicación. Luego, publicar la imagen de contenedor en un registro como DockerHub o Google Artifact Registry (antes Container Registry). Y por último, ejecutar el contenedor en la instancia de despliegue. El contenedor para el despliegue de PetClinic se construirá a partir de un Dockerfile que definirá cómo se construye la imagen del contenedor, y cómo se ejecuta la aplicación en el contenedor. Utilizará la base de datos H2 embebida. Este contenedor para el despliegue de PetClinic será independiente de la configuración Dev Containers que ya posee el proyecto PetClinic, así como del entorno docker-compose. Se podría haber optado por desplegar PetClinic con docker-compose, pero en este caso vamos a desplegarlo como un contenedor independiente. A continuación se describe cómo crear un contenedor Docker de la aplicación PetClinic. Los pasos se realizan en local, y al final configuraremos el pipeline de Jenkins para que se realicen automáticamente. Para trabajar con contenedores Docker en tu equipo local, debes tener Docker instalado. Recuerda iniciar Docker Desktop en Windows, o iniciar el servicio Docker en Linux o Mac. Comprueba que está funcionado ejecutando el comando docker ps Hasta ahora nos estamos basando en el proyecto PetClinic original (genéricamente llamado upstream) disponible en GitHub. En esta sección necesitarás poder hacer cambios sobre el mismo: básicamente vamos a añadir al proyecto un archivo Dockerfile y un archivo Jenkinsfile. Así que debes crear un fork y trabajar con tu fork a partir de ahora. Verás que en los bloques de código de este documento indica como URL del repositorio https://github.com/ualcnsa/spring-petclinic.git, que deberás cambiar por la URL de tu fork. Para construir aplicaciones Maven con Docker y luego crear el contendedor de Docker que empaquete la aplicación, la opción recomendada es usar Multi-Stage Builds en tu Dockerfile, de manera que: Una primera fase o stage construye el .jar a partir de una imagen de Maven, como por ejemplo maven:3.9-eclipse-temurin-17-focal Y luego en una segunda fase, ese .jar lo copia en el contenedor basado en la imagen Alpine (slim) con Java 17, que es el entorno de ejecución Java necesario. La documentación de PetClinic indica cómo construir el contenedor usando Spring Boot build plugin. A nosotros nos interesa ver cómo hacerlo de forma genérica para cualquier aplicación Java basada en Maven. Vamos a definir el siguiente archivo Dockerfile que debe estar en la carpeta raíz del proyecto PetClinic: Dockerfile multi-stage FROM maven:3.9-eclipse-temurin-17-focal AS build (1) WORKDIR /app # First copy only the pom file. This is the file with less change COPY ./pom.xml . # Download the package and make dependencies cached in docker image RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean dependency:go-offline # Copy the actual code COPY ./ . # Then build the code RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean package # Start with a base image containing Java runtime FROM maven:3.9.6-eclipse-temurin-17-alpine (2) # Make port 8080 available to the world outside this container EXPOSE 8080 # The application's jar file ARG JAR_FILE=target/*.jar # Copy the application's jar to the container COPY ${JAR_FILE} app.jar # Run the jar file ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"] 1 Primera fase o stage de build, construye la aplicación llamando a los goals clean package de Maven. Contiene los pasos básicos para construir una aplicación Java basada en Maven. Dicha construcción la divide en dos partes, primero copia el pom.xml y descarga las dependencias con dependency:go-offline, y luego copia todos los fuentes y construye el proyecto con package. De esta forma se optimiza la reconstrucción del contenedor ya que la descarga de dependencias es una etapa que dura varios minutos. 2 Segunda fase, crea una imagen basada en la imagen Alpine de Java 17. Esta imagen está basada en el proyecto Alpine Linux que es una distribución mucho más pequeña (~5MB), y por tanto genera imágenes más pequeñas en general. Contiene los pasos básicos para ejecutar una aplicación String Boot en un contenedor: partiendo de una imagen alpine (slim), copia el archivo target/*.jar en el contenedor con el nombre app.jar y lo ejecuta mediante el comando ENTRYPOINT para que no haya ninguna shell sobre el proceso java. Construye el contenedor con docker build, y ten paciencia, tardará varios minutos!!! docker build -t petclinic-docker . Fig. 1. Docker build Si estás trabajando en Windows, la construcción podría dar un error por problemas de codificación de los saltos de línea diferentes entre Windows y Linux. Para resolverlo, sustituye en la primera fase del Dockerfile la linea de construcción que llama a package por estas dos: # Then build the code - on Linux (1) # RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean package # Then build the code - On Windows (2) RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean spring-javaformat:apply --no-transfer-progress RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml package --no-transfer-progress 1 Ejecución de maven package para la construcción del proyecto cuando ejecutas Docker en Linux. La linea aparece comentada. 2 Ejecución de maven package para la construcción del proyecto cuando ejecutas Docker en Windows. Las dos lineas se ejecutan (no están comentadas). Tras la construcción de la imagen, prueba la ejecución del contenedor en local: docker run -it -p 8080:8080 -t petclinic-docker Comprueba que se ha iniciado la aplicación en http://localhost:8080. Para el contenedor con CTRL+C. Una vez creada la imagen con docker build y probada su ejecución con docker run, el siguiente paso será publicar la imagen en un registro de contenedores, mediante docker push. Podemos usar DockerHub pero en este caso vamos a usar Google Cloud Artifact Registry. Para poder hacer push de la imagen del contenedor a un registro de contenedores, como Google Artifact Registry, debemos tener permisos de escritura, y por tanto debemos autenticarnos en el servicio Artifact Registry. Container Registry era hasta ahora el servicio de Google Cloud para el registro de contenedores, pero ha sido reemplazado por Artifact Registry. Aunque Container Registry sigue funcionando, se recomienda usar Artifact Registry. Si deseas ampliar información, consulta la Transición desde Container Registry Fig. 2. Container Registry is deprecated La autenticación para Docker de Artifact Registry permite conectar al registro de contenedores con tus credenciales, y hacer push y pull de tus imágenes. Existen varios métodos de autenticacion, vamos a usar la clave de cuenta de servicio. Clave de cuenta de servicio: Es un par de claves administrado por el usuario que puedes usar como credencial para una cuenta de servicio. Debido a que la credencial es de larga duración, es la opción menos segura de todos los métodos de autenticación disponibles. Configura los permisos necesarios para acceder al registro utilizando una clave de cuenta de servicio (JSON key file) como método de autenticación: En la Consola Google Cloud, seleccionar el proyecto Google Cloud. En el menú de navegación seleccionar IAM y administración | Cuentas de servicio. Seleccionar Crear cuenta de servicio. Darle un nombre (p.e. artifact-registry) Seleccionar \"Crear y continuar\". En el paso Conceder a esta cuenta de servicio acceso al proyecto del asistente, seleccionar el rol Administrador de Artifact Registry. Continuar y Listo. Editar la Cuenta de servicio. En la sección Claves seleccionar Agregar clave | Crear nueva clave. Dejar JSON en el tipo de clave. Seleccionar Crear. A continuación se descargará la clave privada. Guarda el archivo .json en la carpeta secret de tu proyecto PetClinic. No olvides añadir la carpeta secret/ al archivo .gitignore para evitar publicar en GitHub tu archivo de credenciales. Use the service account key as your password to authenticate with Docker. Sustituye keyfile.json por el nombre de tu archivo de credenciales: cat keyfile.json | docker login -u _json_key --password-stdin https://LOCATION-docker.pkg.dev (1) 1 LOCATION es la ubicación regional o multirregional del repositorio en el que se almacena la imagen. Por ejemplo, us-east1 para la región Este de Estados Unidos (recomendado). Para otras localizaciones, consulta las Ubicaciones de Artifact Registry Fig. 3. Autenticación de Docker contra Container Registry Para poder publicar la imagen en Artifact Registry, primero debemos activar la API de Artifact Registry en nuestro proyecto GCP, y luego crear un repositorio en el que almacenar la imagen del contenedor. Habilita la API de Artifact Registry en tu proyecto GCP, accediendo a la URL https://console.cloud.google.com/apis/library/artifactregistry.googleapis.com y habilitando la API. Fig. 4. Habilitar la API Container Registry Crea un nuevo repositorio para almacenar las imágenes de Docker: Abre la página Repositorios en la consola de Google Cloud. Haz clic en Crear repositorio. Fig. 5. Haz clic en Crear repositorio. Especifica docker-repo como el nombre del repositorio. Elige Docker como formato y Estándar como modo. En Tipo de ubicación, selecciona Región y, luego, elige la ubicación us-east1. En la sección Encriptación, deja la opción predeterminada: Clave administrada por Google. Deja las opciones predeterminadas en el resto de opciones. Haz clic en Crear. Fig. 6. Repositorio Docker creado Antes de enviar la imagen de Docker a Artifact Registry, debes crearla con el nombre del repositorio, o bien simplemente etiquetarla si ya la has creado previamente. Construye o etiqueta la imagen: Para construir la imagen: docker build -t us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 . O bien, para etiquetar la imagen ya existente: docker tag petclinic-docker:latest us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 En ambos casos, el nombre de la imagen está compuesto por varios elementos: us-east1 es la ubicación del repositorio. docker.pkg.dev es el nombre de host para el repositorio de Docker que creaste. PROJECT es el nombre del proyecto de Google Cloud, escribe lo que corresponda. docker-repo es el nombre del repositorio que creaste. petclinic es el nombre de imagen que deseas usar en el repositorio. El nombre de la imagen puede ser diferente del nombre de la imagen local. 1.0 es la etiqueta que agregas a la imagen de Docker. Si no especificaste una etiqueta, Docker aplicará la etiqueta predeterminada latest. Publica la imagen con docker push: docker push us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 Comprueba que se ha publicado correctamente. Fig. 7. Lista de imágenes en Container Registry La imagen del contenedor PetClinic ya está disponible de manera privada en el repositorio de Docker de nuestro proyecto GCP. Utilizando nuestras credenciales podremos hacer docker pull de dicha imagen para descargarla en cualquier máquina y ejecutarla con docker run. docker pull us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 docker run -p 8080:8080 -t --name petclinic us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 Si conectas a la instancia de despliegue que creamos al principio de esta actividad, y ejecutas los comandos docker pull o docker run anteriores, dará un error de autenticación: Fig. 8. Error de autenticación en Container Registry Para arreglarlo, habrá que copiar en la máquina de despliegue el archivo de credenciales .json con premisos sobre Artifact Registry. A continuación se muestran los comandos necesarios para ello. Una vez disponible este archivo en la instancia de despliegue, ejecuta el comando docker login y tras ello ya si podremos hacer docker pull y docker run. # Copiamos el archivo de credenciales scp -i ~/.ssh/id_rsa ./secret/file.json ubuntu@DNS_MAQUINA_DEPLOY:~/keyfile.json # Conectamos a la máquina de despliegue ssh ubuntu@DNS_MAQUINA_DEPLOY # Autenticamos docker contra Container Registry cat keyfile.json | docker login -u _json_key --password-stdin https://us-east1-docker.pkg.dev # Variable de entorno con el nombre del proyecto GOOGLE_CLOUD_PROJECT=cnsa-2024 # Descargamos la imagen docker pull us-east1-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT/docker-repo/petclinic:1.0 # ejecutamos el contenedor docker run -d -p 8080:8080 -t --name petclinic us-east1-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT/docker-repo/petclinic:1.0 Si la ejecución de docker run te da error, prueba a ejecutarlo con sudo. Para evitar tener que escribir siempre sudo delante de cualquier comando docker, ejecuta: sudo usermod -aG docker $USER. Tras ello, reinicia la sesión. Prueba ahora sin sudo, a partir de ahora llama siempre a docker sin sudo. Más info aquí Es posible que la ejecución del contenedor de un error, porque el puerto 8080 ya esté en uso con la aplicación PetClinic que desplegamos en la sección anterior (sin Docker). En ese caso, el error será algo así como: Error starting userland proxy: listen tcp 0.0.0.0:8080: bind: address already in use. Para solucionarlo, bien detén el proceso java que está corriendo con la aplicación PetClinic tal y como la desplegamos en la sección anterior (if pgrep java; then pkill java; fi), o bien utiliza otro puerto, por ejemplo, el 80, que debe estar disponible: docker run -p 80:8080 -t --name petclinic us-east1-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT/docker-repo/petclinic:1.0 Pero ten en cuenta que si el contenedor ya se ha creado y no ha podido iniciarse porque el puerto 8080 estaba ocupado, si intentas volver a crearlo con docker run te dirá que el contenedor ya existe. Revisa si está ya creado con docker ps -a, y en ese caso inícialo con docker start. ubuntu@web-deploy-vm-tf:~$ docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 3ed683cccecd us-east1-docker.pkg.dev/cnsa-2024/docker-repo/petclinic:1.0 \"java -jar /app.jar\" 56 seconds ago Exited 0.0.0.0:8080->8080/tcp, :::8080->8080/tcp petclinic ubuntu@web-deploy-vm-tf:~$ docker start petclinic petclinic Ya puedes comprobar en tu navegador que la aplicación PetClinic se está ejecutando en el puerto 8080 de la máquina de despliegue. Hasta ahora hemos realizado todos los pasos de construcción, prueba y despliegue de PetClinic como contenedor manualmente. A continuación, vamos a automatizar en Jenkins todo el proceso, cuyas principales tareas son: la construcción de la imagen del contenedor la publicación de la imagen en el registro y el despliegue del contenedor. Define un nuevo proyecto en Jenkins de tipo pipeline, con el nombre PetClinic-Docker-abc123 sustituyendo abc123 por nuestro nombre de usuario. Son necesarios 3 fases (stages) en el pipeline: build image, push image, y deploy container. Comenzamos por la construcción de la imagen: pipeline { agent any environment { GOOGLE_CLOUD_PROJECT = \"cnsa-2024\" // \"you-gcp-project\" APP_NAME = \"petclinic\" // \"you-app-name\" REPO_NAME = \"docker-repo\" // \"your-repo-name\" REPO_LOCATION = \"us-east1\" // \"your-repo-location\" IMAGE_NAME = \"${REPO_LOCATION}-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/${REPO_NAME}/${APP_NAME}\" } tools { maven \"Default Maven\" } stages { stage(\"Checkout code\") { steps { // checkout scm git branch:'main', url:'https://github.com/ualcnsa2024/spring-petclinic.git' (1) } } stage('Compile, Test, Package') { steps { sh \"mvn clean package -Dcheckstyle.skip -Dtest=!PostgresIntegrationTests*\" } post { success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } stage(\"Build image\") { (2) steps { script { dockerImage = docker.build( \"${IMAGE_NAME}:${env.BUILD_ID}\", \"--rm -f Dockerfile .\" ) } } } } } 1 En la fase de Checkout code se clona el repositorio de GitHub con el código fuente de PetClinic. Sustituye la URL del repositorio por la de tu fork. 2 En la fase de Build image se construye la imagen del contenedor a partir del Dockerfile que se encuentra en la raíz del proyecto. La imagen se etiqueta con el número de build, para poder identificarla en el registro. Si consultas la salida por consola de la ejecución del pipeline, verás que se algunas tareas se repiten dos veces, como por ejemplo la ejecución de los tests. ¿Por qué crees que es debido? ¿Podría eliminarse alguna fase del pipeline? Puesto que en el Dockerfile multistage se ejecuta mvn clean package, ¿podría eliminarse la fase Compile, Test, Package del pipeline? La respuesta es que sí se puede eliminar esa fase del pipeline, sobre todo si quieres hacer que el pipeline se ejecute más rápidamente. Para probar que la imagen del contenedor se ha creado bien, añade la siguiente fase al pipeline, que hace un despliegue en un entorno de \"Staging\" o \"Testing\", que aquí va a ser \"local\" en la propia máquina de Jenkins, es decir, ejecuta un contenedor basado en la imagen que acabamos de crear: stage(\"Deploy to Testing (locally)\") { steps { sh \"docker stop petclinic || true && docker rm petclinic || true\" (1) sh \"docker run -d -p 8080:8080 -t --name petclinic ${IMAGE_NAME}:${env.BUILD_ID}\" (2) } } 1 Es necesario comprobar si el contenedor petclinic ya se está ejecutando, por si ya se ha ejecutado el pipeline anteriormente y no se ha eliminado el contenedor de la ejecución anterior. En tal caso, este comando lo detiene con docker stop y lo elimina con docker rm. 2 Con docker run ejecuta el contenedor petclinic a partir de la imagen recién construida. Para que el pipeline pueda finalizar y el contenedor siga ejecutándose, se añade -d que indica modo detached que ejecuta el contenedor en background. Si la construcción en Jenkins falla con un mensaje final del tipo Bind for 0.0.0.0:8080 failed: port is already allocated., es porque el puerto ya 8080 está ocupado por otro servicio. No debería, pero en cualquier caso si te ocurre, puedes bien detener el otro servicio contenedor o aplicación ejecutándose en el 8080, o bien cambiar el puerto en el comando docker run…​ que ejecuta el nuevo contenedor, por ejemplo el 8081, que debe estar disponible. Recuerda que si quieres poder acceder deberías abrir el puerto 8081 en el firewall de la máquina de Jenkins (Seguridad de Red, Políticas de Firewall, mynetwork-tf-allow-http-ssh-rdp-icmp, Editar reglas de firewall, Agregar tcp:8081). Si todo ha ido bien, la aplicación debe estar accesible en el puerto 8080 en tu máquina de Jenkins. Para asegurarnos que la aplicación se está ejecutando bien, debemos probarlo \"manualmente\", abriendo el navegador y accediendo a la aplicación PetClinic. Para automatizar esta prueba, lo adecuado sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test image') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed\"' } } El siguiente paso es publicar la imagen en el registro. Primero, es necesario crear unas credenciales en Jenkins para poder hacer push en Artifact Registry: Go to Jenkins home, Manage Jenkins, click on Credentials and (global) Click on Add Credentials Select Secret file for the Kind field, and enter ID (cnsa-2024_artifacts) Then upload the JSON private key. Fig. 9. Credenciales en Jenkins para Container Registry Una vez guardadas las credenciales, vamos a definir la fase para publicar la imagen del contenedor: stage(\"Push image\") { steps { withCredentials([file(credentialsId: \"${GOOGLE_CLOUD_PROJECT}_artifacts\", variable: 'GCR_CRED')]){ (1) sh \"cat ${GCR_CRED} | docker login -u _json_key --password-stdin https://${REPO_LOCATION}-docker.pkg.dev\" sh \"docker push ${IMAGE_NAME}:${env.BUILD_ID}\" sh \"docker tag ${IMAGE_NAME}:${env.BUILD_ID} ${IMAGE_NAME}:latest\" sh \"docker push ${IMAGE_NAME}:latest\" sh \"docker logout https://${REPO_LOCATION}-docker.pkg.dev\" } } } 1 En la fase de Push image se publica la imagen en el registro de contenedores. Se utiliza el método withCredentials para autenticarse en el registro con el archivo de la clave de servicio que ha sido almacenada como una credencial (secret file). Tras ello, comprueba que se ha publicado correctamente en el registro. Fig. 10. Imagen publicada en el repositorio de Artifact Registry, etiquetada con el número de build y con la etiqueta latest Por último, quedaría el paso de desplegar al entorno de producción. Una vez empaquetada como un contenedor, Google Cloud permite desplegar de varias formas: en máquina virtual con GCE, en plataforma como servicio con Google App Engine, en Kubernetes con GKE, y en Cloud Run, un servicio de Google Cloud específico para el despliegue de contenedores. Para nosotros, la máquina virtual de despliegue es nuestro entorno de producción en el que vamos a desplegar el contenedor. Los pasos para el despliegue de la nueva imagen del contenedor consistirán en ejecutar los siguientes comandos sobre la máquina de despliegue: docker stop del contenedor por si estuviera ejecutándose docker rm para eliminar el contenedor existente, que puede estar basado en una imagen de una versión anterior docker run para ejecutar el contenedor, que automáticamente hará un docker pull de la imagen actualizada del registro. Lo lanzaremos en el puerto 80 ya que el 8080 está ocupado por el despliegue que hicimos sin contenedor. Estas acciones debemos añadirlas a un stage del pipeline de Jenkins que se encargará de desplegar el nuevo contenedor automáticamente. En el siguiente código, sustituye DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia de despliegue. También puedes definirla como una variable de entorno al inicio del pipeline. environment { ... DNS_DEPLOY_INSTANCE = \"deploy.jenkinscnsa2024.tech\" // \"your-deploy-instance DNS\" } ... stage('Deploy to Production') { steps{ // Check to manual approving deploy to production. // It implemenents Continuous Delivery instead of Continuous Deployment input message: \"Proceed Deploy to Production?\" (1) sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"if docker ps -q --filter name=petclinic | grep . ; then docker stop petclinic ; fi\" (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"if docker ps -a -q --filter name=petclinic | grep . ; then docker rm -fv petclinic ; fi\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"docker run -d -p 80:8080 -t --name petclinic ${IMAGE_NAME}:latest\" (4) ''' } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline. Permite asegurar que el despliegue a producción requiere intervención de una persona, implementando entrega continua (continuous delivery) en lugar de despliegue continuo (continuous deployment). 2 Ejecuta en la instancia de despliegue el comando docker stop que detiene el contenedor petclinic en caso de que ya se estuviera ejecutando de un despliegue anterior. Esto se comprueba con docker ps …​. 3 Ejecuta en la instancia de despliegue el comando docker rm que elimina el contenedor petclinic en caso de que exista de un despliegue anterior. Esto se comprueba con docker ps -a …​. Estos dos pasos, primero parar el contenedor y luego eliminar el contenedor, son necesarios antes de volver a lanzar un nuevo contenedor con el mismo nombre. Se ejecuta en dos pasos para evitar errores en caso de que el contenedor exista pero no esté en ejecución, lo que podría dar lugar a un error en el despliegue. 4 Ejecuta en la instancia de despliegue el comando para ejecutar el contenedor basado en la última versión de la imagen, lanzándolo con -d que indica modo detached que ejecuta el contenedor en background, para que el pipeline finalice y el contenedor permanezca en ejecución. Fig. 11. Proceed deploy to production? (coloca el cursor para que aparezca el banner) Algunos comandos útiles de Docker: # Remove all stopped containers docker rm $(docker ps -a -q) # Remove all images docker rmi $(docker images -q) Úsalos si te aparece algún mensaje de error del tipo no space left on device, ya que la máquina Jenkins están construyendo muchas imágenes y se queda sin espacio de disco. La aplicación PetClinic debe estar accesible en producción, en el puerto 80 en la instancia de despliegue. Para asegurarnos, debemos probarlo \"manualmente\". Para automatizar esta prueba en producción, lo adecuado de nuevo sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test on Production') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh \"echo 'End-to-end Tests passed on Production'\" } } Por último, es una buena práctica eliminar las imágenes que se van generando en cada build, para liberar espacio en la máquina de Jenkins. Primero paramos y eliminamos el contenedor que desplegamos anteriormente en la fase del pipeline Deploy to Testing (locally); luego eliminamos la imagen. stage('Remove Unused docker image') { steps{ // input message:\"Proceed with removing image locally?\" (1) sh \"if docker ps -q --filter name=petclinic | grep . ; then docker stop petclinic && docker rm -fv petclinic; fi\" sh \"docker rmi ${IMAGE_NAME}:${env.BUILD_ID}\" sh \"docker rmi ${IMAGE_NAME}:latest\" } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline 2 Para y elimina el contenedor local 3 Elimina la imagen de contenedor en local con docker rmi para liberar espacio. Fig. 12. Input message (paso comentado en el ejemplo) El pipeline completo, con todas sus fases, debe quedar así: Fig. 13. Pipeline completo ENHORABUENA!!! Has conseguido definir un pipeline completo de integración y despliegue continuo, y con contenedores. Este proceso se puede aplicar, con pequeñas adaptaciones, a cualquier otro proyecto Java basado en Maven. Si usas otras tecnologías, como NodeJs, hay que adaptar cada una de las fases a su equivalente en en la tecnología concreta. Vamos a ver como hacerlo con NodeJs en la siguiente sección. Referencias Deploy via ssh: How to build on Jenkins and publish artifacts via ssh with Pipelines @ Medium Jenkins Building Docker Image and Sending to Registry @ Medium Pushing docker image through jenkins @ StackOverflow Push to Google Artifact Registry through Jenkins Pipeline @ Jenkins Community Build a Java app with Maven @ Jenkins.io Tutorials","title":"PetClinic con Docker","component":"despliegue-continuo","version":"0.24.0","name":"java-petclinic-docker","url":"/despliegue-continuo/0.24.0/java-web-app/java-petclinic-docker.html","titles":[{"text":"Creación del Dockerfile multi-stage","hash":"_creación_del_dockerfile_multi_stage","id":1},{"text":"Autenticación en Artifact Registry","hash":"_autenticación_en_artifact_registry","id":2},{"text":"Activación de la API y creación del repositorio","hash":"_activación_de_la_api_y_creación_del_repositorio","id":3},{"text":"Publicación de la imagen en el repositorio","hash":"_publicación_de_la_imagen_en_el_repositorio","id":4},{"text":"Despliegue manual del contenedor","hash":"_despliegue_manual_del_contenedor","id":5},{"text":"PetClinic con Docker en Jenkins","hash":"_petclinic_con_docker_en_jenkins","id":6},{"text":"Construcción y despliegue del contenedor","hash":"_construcción_y_despliegue_del_contenedor","id":7},{"text":"Publicación en el registro","hash":"_publicación_en_el_registro","id":8},{"text":"Despliegue en producción","hash":"_despliegue_en_producción","id":9},{"text":"Conclusiones","hash":"_conclusiones","id":10}]},"18":{"id":18,"text":"Creamos el primer proyecto de Jenkins. Comprueba que Jenkins puede llamar a Docker. Para ello crea un nuevo proyecto tipo freestyle. Fig. 1. Nuevo proyecto, freestyle En la sección Build Steps, añade un nuevo paso, Ejecutar linea de comandos (shell) . Pega estos comandos: whoami git --version java -version docker -v Guarda los cambios. Haz clic sobre Build now. Haz clic sobre la bolita verde para ver el la salida por consola. Fig. 2. Build now. Resultado del build Fig. 3. Salida por consola Por consola se visualiza el resultado de ejecutar los comandos dentro del contenedor. Como puedes ver, git y java están instalados, venían ya en la imagen jenkins:lts de la que hemos partido en la definición del Dockerfile. Además, docker también está disponible, se ha instalado correctamente mediante la definición incluida en el Dockerfile. La ejecución finaliza correctamente, con el mensaje Finished: SUCCESS, por ello la bolita verde. De forma predeterminada, Jenkins ejecuta los proyectos sobre el nodo principal (main), que es el nodo (contenedor o máquina virtual) donde se ejecuta el propio Jenkins. Puedes consultar los nodos disponibles en Jenkins en la sección Administrar Jenkins > Nodos. Fig. 4. Nodos disponibles en Jenkins Hasta ahora no hemos configurado otros nodos ni clouds donde ejecutar los proyectos, así que por defecto se ejecutan en el principal. Creamos el primer proyecto de Jenkins tipo pipeline. Vamos a darle el nombre hello-maven-pipeline-on-master-node. Este pipeline se ejecutará sobre el nodo (agent) master, es decir, sobre el mismo contenedor que está ejecutando Jenkins. Copia la siguiente definición de pipeline en el bloque Pipeline, Pipeline script. pipeline { agent any tools { maven 'Default Maven' (1) } stages { stage('Build') { steps { sh ''' java -version mvn -v ''' (2) } } } } 1 Utiliza la instalación de Maven que hemos hecho en la sección anterior, y le dimos el nombre Default Maven. 2 En la shell ejecutará los comandos para mostrar las versiones de Java y Maven. Haz clic sobre Build now, y visualiza la consola. Como parte de la salida, se debe visualizar algo así (puede que los números de versiones varíen): [Pipeline] sh + java -version openjdk version \"17.0.10\" 2024-01-16 OpenJDK Runtime Environment Temurin-17.0.10+7 (build 17.0.10+7) OpenJDK 64-Bit Server VM Temurin-17.0.10+7 (build 17.0.10+7, mixed mode) + mvn -v Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/Default_Maven Java version: 17.0.10, vendor: Eclipse Adoptium, runtime: /opt/java/openjdk Default locale: en, platform encoding: UTF-8 OS name: \"linux\", version: \"6.5.0-1014-gcp\", arch: \"amd64\", family: \"unix\" Lanzar las construcciones de proyectos en el nodo principal puede acarrear problemas de seguridad. De hecho, Jenkins (dependiendo de la versión) avisa de que esta configuración es inadecuada, y recomienda configurar agentes independientes donde lanzar las ejecuciones de los proyectos. Fig. 5. Aviso de evitar ejecuciones en el nodo máster de Jenkins La alternativa es que el pipeline se ejecute, en lugar de en el nodo principal, en un nodo tipo \"agente\" que se creará ex profeso a partir de un contenedor Docker disponible de DockerHub. A continuación creamos el segundo proyecto de Jenkins tipo pipeline. Vamos a darle el nombre hello-maven-pipeline-on-container-node pipeline { agent { docker { image 'maven:3.9-eclipse-temurin-21-alpine' (1) args '-v $HOME/.m2:/root/.m2' (2) } } stages { stage('Build') { steps { sh ''' java -version mvn -v ''' } } } } 1 Elige entre las imágenes de Maven disponibles. En este caso, se ha elegido la versión 3.9 con Java 21, que es distinta a la que hemos instalado en el nodo principal. 2 Mapea el volumen del host $HOME/.m2 donde se almacenan las dependencias de Maven, para que estén disponibles en el contenedor, eliminando así la necesidad de volver a descargarlas en sucesivas ejecuciones. Te dará error al construir el proyecto. [Pipeline] sh + docker inspect -f . maven:3.9-eclipse-temurin-21-jammy permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/maven:3.9-eclipse-temurin-21-jammy/json\": dial unix /var/run/docker.sock: connect: permission denied El motivo es que en la máquina Jenkins, sobre el S.O. host, hay que abrir permisos en el socket de Docker para que desde dentro del contenedor Jenkins permita crear otros contenedores hermanos. Para ello, mediante el terminal ssh modifica los permisos así: sudo chmod 666 /var/run/docker.sock Tras ello deben construirse correctamente. La nueva salida será algo así: [Pipeline] sh + java -version openjdk version \"21.0.2\" 2024-01-16 LTS OpenJDK Runtime Environment Temurin-21.0.2+13 (build 21.0.2+13-LTS) OpenJDK 64-Bit Server VM Temurin-21.0.2+13 (build 21.0.2+13-LTS, mixed mode, sharing) + mvn -v Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /usr/share/maven Java version: 21.0.2, vendor: Eclipse Adoptium, runtime: /opt/java/openjdk Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"6.5.0-1014-gcp\", arch: \"amd64\", family: \"unix\" Para que tras reiniciar la máquina se mantengan los permisos del socket de Docker: Crea el archivo /etc/rc.local, y añade el siguiente contenido: #!/bin/sh -e chmod 666 /var/run/docker.sock Por último, dale los permisos adecuados al archivo /etc/rc.local: sudo chmod 755 /etc/rc.local Tras ello reinicia la máquina. sudo reboot -h now Tras ello, comprueba que el socket de Docker tiene los permisos adecuados: $ ls -la /var/run/docker.sock srw-rw-rw- 1 root docker 0 Mar 2 19:24 /var/run/docker.sock No olvides que abrir permisos aL archivo /var/run/docker.sock supone ciertos problemas de seguridad: Avoid workarounds like this which could be a big potential security threat. The result of your chmod practically gives all local users read and write permissions to the docker-socket which allows anyone to interfere with your docker images. (fuente). Otros ejemplos similares con contenedores NodeJS están disponibles en la documentación de Jenkins Es habitual tener varias tecnologías en un mismo proyecto. Por ejemplo, un repositorio puede tener tanto un back-end basado en Java como un front-end basado en JavaScript. Combinar Docker y Pipeline permite usar diferentes agentes en diferentes fases (stages) del pipeline. Crea un nuevo pipeline `hello-pipeline-multiple-containers`con el siguiente contenido: pipeline { agent none stages { stage('Back-end') { agent { docker { image 'maven:3.9-eclipse-temurin-21-alpine' args '-v $HOME/.m2:/root/.m2' } } steps { sh 'mvn --version' } } stage('Front-end') { agent { docker { image 'node:20.11.1-alpine3.19' } } steps { sh 'node --version' } } } } Fig. 6. Pipeline con varios contenedores como agentes Para automatizar el despliegue sobre la instancia que tenemos creada para ello, deberás permitir que Jenkins ejecute comandos sobre la máquina de despliegue a través de SSH. Para ello, la instancia Jenkins debe poder conectarse a la instancia de despliegue mediante una conexión SSH basada en autenticación por pareja de claves pública/privada, que ha demostrado ser más seguro sobre la autenticación estándar de nombre de usuario/contraseña. Fig. 7. Esquema de despliegue con Jenkins Para ello, los pasos que se detallan a continuación permiten: generar una nueva pareja de claves que usaremos para el despliegue, copiar la clave pública generada en la instancia de despliegue, y por último probar que la conexión se realiza correctamente. Ejecuta los siguientes pasos: Conecta por SSH a la máquina Jenkins: ssh ubuntu@instancia-jenkins Fig. 8. Conexión SSH a la instancia Jenkins Crea la carpeta donde se va a guardar la nueva pareja de claves: mkdir /home/ubuntu/jenkins_home/.ssh Crea una pareja de claves ssh de despliegue: ssh-keygen -t rsa -b 4096 Cuando pida el nombre, escribe el nuevo nombre id_rsa_deploy junto con la ubicación donde Jenkins va a buscar las claves de forma predeterminada, que es: /home/ubuntu/jenkins_home/.ssh/id_rsa_deploy Por último, deja la contraseña en blanco (pulsa ENTER): Enter passphrase (empty for no passphrase): Esto crea la clave privada en /home/ubuntu/jenkins_home/.ssh/id_dsa_deploy y una clave pública asociada en /home/ubuntu/jenkins_home/.ssh/id_dsa_deploy.pub. Esta nueva pareja de claves la usaremos exclusivamente para el despliegue de nuestros proyectos. Al haberla guardado en la carpeta /home/ubuntu/jenkins_home/ los archivos están accesibles dentro del contenedor de Jenkins, porque como recordarás, al lanzar el contenedor Jenkins esa carpeta del host la habíamos mapeado con la carpeta /var/jenkins_home del contenedor. Fig. 9. Pareja de claves id_rsa_deploy Muestra el contenido de la clave pública: cat /home/ubuntu/jenkins_home/.ssh/id_rsa_deploy.pub Copia el contenido: con el ratón, selecciona el contenido de la clave, desde “ssh-rsa” hasta el final, y pulsa ENTER (o CTRC+C) Fig. 10. Copia el contenido de id_rsa_deploy.pub Debido a que algunos terminales añaden saltos delinea al copiar texto desde el terminal, como ocurre con cloud shell de GCP, es recomendable copiar el contenido de la clave pública en cualquier editor de texto \"plano\" (Notepad++, Sublime, VS Code, etc) y eliminar los saltos de línea, si los hubiera. Ahora pégalo en tu PC, lo necesitaremos más adelante. Desconecta de la máquina Jenkins: exit Conecta por ssh a la instancia de despliegue Fig. 11. Conexión SSH a la instancia Jenkins Edita el archivo authorized_keys: nano /home/ubuntu/.ssh/authorized_keys Ese archivo ya tenía una clave pública, la correspondiente a tu pareja de claves personal que inyectamos en la creación de la instancia con Terraform (por eso has podido conectar por ssh a esa máquina). Pega el contenido de la clave pública de despliegue. Ahora debe tener 2 claves públicas. Ya puedes desconectar de la instancia de despliegue. Vamos a probar que funciona: Fig. 12. Conexión SSH desde la instancia Jenkins a la de despliegue Conecta de nuevo a la instancia jenkins y prueba la conexión ssh a la instancia de despliegue. Recuerda que puesto que Jenkins se está ejecutando como un contenedor, debes probar la conexión ssh desde dentro del contenedor: docker exec -it jenkins-docker ssh ubuntu@instancia_deploy -i /var/jenkins_home/.ssh/id_rsa_deploy En el comando anterior: docker exec -it indica ejecutar un comando desde dentro del contenedor jenkins-docker es el nombre del contenedor ssh ubuntu@instancia_deploy -i /var/jenkins_home/.ssh/id_rsa_deploy es el comando a ejecutar en el contenedor. En este caso, ssh con el parámetro -i …​ para indica la clave privada que debe usar para conectar. Antes de ejecutar el comando, modifica instancia_deploy por el nombre DNS de tu instancia de despliegue. Recuerda que /var/jenkins_home es la carpeta HOME del usuario jenkins dentro del contenedor, y jenkins es el usuario del contenedor que ejecuta Jenkins. La primera vez que realizas una conexión ssh desde un usuario en una máquina origen a una destino, te pregunta si deseas almacenar la clave de host de destino en la lista de hosts conocidos (known_hosts) de tu máquina origen. Contesta: yes Fig. 13. Validar la clave del host: yes Si todo ha ido bien, la conexión se ha debido realizar. Puedes comprobarlo porque en el prompt te aparecerá que estás en la máquina de despliegue. Sal con exit. Ahora el prompt te muestra que estás en la máquina Jenkins. Fig. 14. Conexión correcta Si no ha correcto, verifica que la ruta al archivo de la clave privada es correcta, y que el nombre de la máquina de despliegue es correcto. Comprueba que la clave de host de la máquina de destino (despliegue) se ha guardado en la máquina origen (jenkins) en el archivo ~/.ssh/known_hosts del usuario que ha ejecutado el comando ssh, en nuestro caso, del usuario jenkins de contenedor: docker exec -it jenkins-docker cat /var/jenkins_home/.ssh/known_hosts Fig. 15. Contenido del archivo known_hosts en el contenedor Puedes comprobarlo también mostrando el contenido de known_hosts en el archivo /home/ubuntu/jenkins_home/.ssh/known_hosts. Ambos coinciden, recuerda que hay un volumen mapeado entre la carpeta local /home/ubuntu/jenkins_home y la carpeta del contenedor /var/jenkins_home. Fig. 16. Contenido del archivo known_hosts en la carpeta local Ahora que la conexión por SSH entre la máquina Jenkins y la máquina de despliegue es correcta, vamos a hacer que Jenkins automatice la ejecución de comandos sobre la máquina de despliegue: entra en Jenkins y añade el siguiente comando al proyecto hello_docker existente, sustituyendo MAQUINA_DEPLOY por el nombre DNS de la máquina de despliegue. ssh -i ~/.ssh/id_rsa_deploy ubuntu@MAQUINA_DEPLOY \"pwd && ls -la\" Como aclaración de este comando: el parámetro -i indica la clave privada que queremos usar en la conexión ssh \"pwd && ls -la\" son comandos básicos que ejecuta sobre la máquina remota. Hemos indicado estos comandos simplemente para probar que la conexión se realiza correctamente. Fig. 17. Modificación del proyecto para que ejecute un comando sobre la instancia de despliegue Tras ejecutar el proyecto en Jenkins, el resultado debe ser correcto. Fig. 18. Salida por consola. El comando se ha ejecutado correctamente.","title":"Primeros ejemplos","component":"despliegue-continuo","version":"0.24.0","name":"first-projects","url":"/despliegue-continuo/0.24.0/jenkinsdocker/first-projects.html","titles":[{"text":"Creación del primer proyecto freestyle","hash":"_creación_del_primer_proyecto_freestyle","id":1},{"text":"Creación del primer pipeline","hash":"_creación_del_primer_pipeline","id":2},{"text":"Nodos de ejecución","hash":"_nodos_de_ejecución","id":3},{"text":"Pipeline sobre el nodo principal","hash":"_pipeline_sobre_el_nodo_principal","id":4},{"text":"Pipeline con un contenedor como agente","hash":"_pipeline_con_un_contenedor_como_agente","id":5},{"text":"Usando varios contenedores como agente","hash":"_usando_varios_contenedores_como_agente","id":6},{"text":"Conexión con la máquina de despliegue","hash":"_conexión_con_la_máquina_de_despliegue","id":7},{"text":"Generar la nueva pareja de claves de despliegue","hash":"_generar_la_nueva_pareja_de_claves_de_despliegue","id":8},{"text":"Copiar la clave pública a la instancia de despliegue","hash":"_copiar_la_clave_pública_a_la_instancia_de_despliegue","id":9},{"text":"Prueba de la conexión desde jenkins a despliegue","hash":"_prueba_de_la_conexión_desde_jenkins_a_despliegue","id":10}]},"19":{"id":19,"text":"Objetivos Vamos a usar la primera instancia para instalar Jenkins. En lugar de realizar una instalación completa sobre el sistema operativo, utilizando los paquetes de Ubuntu, tal como se hace en la asignatura Herramientas y Métodos de Ingeniería del Software, de 3º del Grado en Ingeniería Informática, aquí vas a desplegar Jenkins como un contenedor de Docker. Después, crearemos los primeros ejemplos de proyectos en jenkins, tanto un proyecto libre como un proyecto de tipo pipeline. Además, realizaremos la configuración para poder conectar con la instancia de despliegue que nos permitirá automatizar el despliegue sobre ella.","title":"Primeros pasos con Jenkins ","component":"despliegue-continuo","version":"0.24.0","name":"index","url":"/despliegue-continuo/0.24.0/jenkinsdocker/index.html","titles":[]},"20":{"id":20,"text":"A continuación se describe cómo desplegar Jenkins como un contenedor de Docker. La imagen pública del contenedor de Jenkins está disponible en DockerHub, con el nombre jenkins/jenkins:lts. Esta imagen genérica necesita instalarle algunos plugins y herramientas. En concreto, hay que instalarle el propio Docker para permitir que Jenkins ejecute tareas de docker, como por ejemplo docker build para construir imágenes de contenedores. Esto es lo que se conoce como Docker-in-Docker (dind), y hay que gestionarlo correctamente cuando se trata de entornos de CI. Por tanto, vamos a crear una imagen personalizada del contenedor de Jenkins basándonos en la imagen pública e instalándo Docker dentro del contenedor. Lo más adecuado es que construyas la imagen de Jenkins con Docker en la propia máquina donde lo vamos a ejecutar, es decir en la instancia de jenkins. Conecta por ssh a la instancia de jenkins. Recuerda que el usuario de la instancia es ubuntu. Por tanto, la conexión a la misma consistiría en ejecutar desde el terminal el comando ssh ubuntu@MAQUINA_JENKINS sustituyendo MAQUINA_JENKINS por la IP o el nombre DNS de la misma. Si utilizas la shell de la consola web de Google Cloud para conectar por ssh a la máquina, verás que estarás conectado como tu usuario de la UAL, del tipo abc123. En este caso RECUERDA sustituir ubuntu por tu usuario abc123 en todos los comandos y ejemplos de este documento. Realiza las actividades conectando a las instancias bien con el usuario ubuntu de la máquina, o bien si usas la shell de la consola web de Google Cloud, con tu usuario de la UAL (del tipo abc123). Se consistente, es decir, hazlo siempre con el mismo usuario. Se DESACONSEJA ejecutar los comandos como root mediante sudo su. Solamente en caso de que sea absolutamente necesario, ejecuta los comandos con sudo delante para tener permisos de root puntualmente. Si haces las actividades como root, tendrás problemas de permisos de acceso los archivos y carpetas, como por ejemplo a las claves SSH. Prueba que docker se ejecuta correctamente. Si la ejecución de docker ps -a te da error, prueba a ejecutarlo con sudo. Para evitar tener que escribir siempre sudo delante de cualquier comando docker`, ejecuta: sudo usermod -aG docker $USER Tras ello, reinicia la sesión. Prueba ahora sin sudo, a partir de ahora llama siempre a docker sin sudo. Más info aquí Crea una carpeta jenkins-docker y crea el archivo Dockerfile. Usa el siguiente Dockerfile (descrito en esta entrada de medium.com: Jenkins Building Docker Image and Sending to Registry. Dockerfile FROM jenkins/jenkins:lts USER root RUN apt-get update && \\ apt-get -y install apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common && \\ curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \\ add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\ $(lsb_release -cs) \\ stable\" && \\ apt-get update && \\ apt-get -y install docker-ce RUN apt-get install -y docker-ce RUN usermod -a -G docker jenkins USER jenkins Construimos la imagen a partir del Dockerfile: docker build --tag ualjjcanada/jenkins-docker:1.0 . (1) 1 Sustituye ualjjcanada/ por tu usuario de Dockerhub si estás registrado, si no simplemente no lo pongas. Fig. 1. docker build de Jenkins con Docker Fig. 2. docker build successful Comprueba que la imagen ha sido creada, y está disponible en tu máquina: docker image ls Fig. 3. docker image ls Opcionalmente podemos publicar nuestra imagen personalizada en DockerHub, o alternativamente el Google Container Registry (deprecado) o en Google Artifact Registry. Más adelante se describirá cómo hacerlo. Ejecutamos el contenedor a partir de la imagen creada previamente. Crear una carpeta para jenkins_home que configuraremos como volumen para que los datos de Jenkins se guarden fuera del contenedor. mkdir ~/jenkins_home chmod 777 ~/jenkins_home Ejecutamos el contenedor con docker run: docker run -d --name jenkins-docker -p 80:8080 -p 50000:50000 -v /var/run/docker.sock:/var/run/docker.sock -v ~/jenkins_home:/var/jenkins_home --restart always ualjjcanada/jenkins-docker:1.0 Los parámetros de docker run son: --name jenkins-docker: nombre que le asignamos al contenedor -p 80:8080: jenkins se ejecutará en el puerto 80 en el host, que está mapeado al puerto 8080 del contenedor -v /var/run/docker.sock:/var/run/docker.sock: volumen para compartir el docker socket (usado en la máquina host) con el contenedor. -v ~/jenkins_home:/var/jenkins_home: mapea la carpeta local ~/jenkins_home con la carpeta /var/jenkins_home del contenedor. En el contenedor, la carpeta HOME del usuario jenkins es /var/jenkins_home, donde Jenkins guarda todos los archivos que utiliza. Si se tira el contenedor o se actualiza, no se pierden los datos ya que se guardan \"fuera\" del contenedor. --restart always: inicia el contenedor cuando se enciende la instancia. ualjjcanada/jenkins-docker:1.0: imagen del contenedor a ejecutar, la que hemos construido en el paso anterior. Comprueba que el contenedor está ejecutándose con docker ps Fig. 4. docker ps A continuación se muestran los pasos a realizar en el inicio y configuración básica de Jenkins. Además, se describe la instalación de algunos plugins adicionales. Conectamos a la IP/URL de la instancia con el navegador web. Aparecerá la ventana para introducir el password inicial. Para ver el password ejecuta: cat /home/ubuntu/jenkins_home/secrets/initialAdminPassword Fig. 5. Contraseña inicial de Jenkins Selecciona Install suggested plugins. Fig. 6. Install suggested plugins Tras unos minutos, introduce los datos del usuario administrador de Jenkins. Introduce un nombre de usuario y contraseña. Acepta el nombre de dominio de la máquina. Si aun no has registrado el nombre de dominio, lo puedes hacer más tarde en la configuración general de Jenkins. Jenkins está listo. Fig. 7. Bienvenida a Jenkins Vamos a instalar varios plugins: NodeJs, GitHub integration, Docker Pipeline, Warnings (Next Generation), JaCoCo, Coverage, Google Container Registry Auth. Haz clic en Manage Jenkins > Manage Plugins. En la pestaña Available busca Github integration, seleccionalo y pulsa en Download now and install after restart. Fig. 8. Instalación del plugin Github integration Repite los pasos para los plugins el resto de plugins. Fig. 9. Instalación del plugin NodeJS Marca Restart Jenkins para completar la instalación. Tras unos segundos, vuelve a iniciar sesión y tendrás los plugins instalados. Fig. 10. Reiniciar para completar la instalación Tras la instalación del plugin NodeJS, es necesario realizar la siguiente configuración: Ve a Manage Jenkins, Global Tool configuration. En NodeJS, añade un instalador (se recomienda la última versión lts disponible). Dale por nombre \"nodejs lts\" y marca instalar automáticamente. Guarda los cambios con Save. Fig. 11. Configuración de herramienta NodeJS De la misma forma, instala la última versión de Maven. En este caso dale el nombre Default Maven y marca instalar automáticamente. Fig. 12. Configuración de herramienta Maven","title":"Instalación y configuración de Jenkins","component":"despliegue-continuo","version":"0.24.0","name":"install-jenkins","url":"/despliegue-continuo/0.24.0/jenkinsdocker/install-jenkins.html","titles":[{"text":"Construcción del contenedor Jenkins","hash":"_construcción_del_contenedor_jenkins","id":1},{"text":"Publicación de la imagen en un registro de contenedores","hash":"_publicación_de_la_imagen_en_un_registro_de_contenedores","id":2},{"text":"Ejecución del contenedor de Jenkins","hash":"_ejecución_del_contenedor_de_jenkins","id":3},{"text":"Configuración básica de Jenkins","hash":"_configuración_básica_de_jenkins","id":4},{"text":"Instalación de plugins adicionales","hash":"_instalación_de_plugins_adicionales","id":5},{"text":"Configuración las Tools en Jenkins","hash":"_configuración_las_tools_en_jenkins","id":6}]},"21":{"id":21,"text":"Objetivos Como construir y desplegar apliaciones web Node.js con Jenkins Dockerizar la aplicacion Node.js para facilitar su despliegue Desplegar la aplicación Node.js tanto de forma nativa como mediante contenedor Definir un pipeline para automatizar las etapas más habituales en CI/CD","title":"Aplicación en Node.js","component":"despliegue-continuo","version":"0.24.0","name":"index","url":"/despliegue-continuo/0.24.0/node-app/index.html","titles":[]},"22":{"id":22,"text":"Para realizar el despliegue de la app Hola mundo en Node.js como un contenedor, primero tenemos que dockerizar la aplicación. Una vez construido el contenedor, habrá que publicar la imagen de contenedor en un registro como Google Container Registry, y por último ejecutar el contenedor en la instancia de despliegue. A continuación se describe cómo crear un contenedor Docker de la aplicación Node.js. Los pasos se realizan en local, y al final configuraremos el pipeline de Jenkins para que se realicen automáticamente. Para crear el contendedor de Docker que empaquete la aplicación Node.js, vamos a definir el siguiente archivo Dockerfile que debe estar en la carpeta raíz del proyecto: Dockerfile FROM node:10-alpine # Create app directory WORKDIR /usr/src/app # Install app dependencies # A wildcard is used to ensure both package.json AND package-lock.json are copied # where available (npm@5+) COPY package*.json ./ RUN npm install # If you are building your code for production # RUN npm ci --only=production # Bundle app source COPY . . EXPOSE 3000 CMD [ \"npm\", \"start\" ] El Dockerfile es muy sencillo, contiene los pasos básicos para ejecutar una aplicación en un contenedor. Crea además un archivo .dockerignore en la misma carpeta que tu Dockerfile con el siguiente contenido: node_modules/ .git/ .gitignore npm-debug.log Puedes construir la imagen del contenedor: docker build -t <your username>/nodeapp . Tras ello, ejecuta: docker images. La imagen debe aparecer en la lista de imágenes de Docker en tu equipo: Prueba la ejecución del contenedor en local: docker run -p 3000:3000 -d --name hello-node <your username>/nodeapp Comprueba que se ha iniciado la aplicación en http://localhost:3000. Comprueba que el contenedor está ejecutándose con docker ps Detén el contenedor con docker stop <ID> Comprueba que ya no está ejecutándose, pero el contenedor sigue existiendo, lo puedes ver con docker ps -a Podrías volver a arrancarlo con docker start <ID>, pero en su lugar, elimina el contenedor con docker rm <ID> La imagen sigue existiendo, puedes verlo con docker images Una vez creada la imagen con docker build y probada su ejecución con docker run, el siguiente paso será publicar la imagen en un registro de contenedores, mediante docker push. De nuevo vamos a usar Google Cloud Container Registry. Para poder hacer push debemos tener permisos de escritura, y por tanto debemos autenticarnos en el servicio Container Registry. Este proceso ya se hizo en la para el ejemplo de Java en la sección Autenticación en Container Registry. Ahora, simplemente comprueba que mantienes el login del Container Registry. Comprueba el login al registro: docker login https://gcr.io Fig. 1. Comprobar docker login Si docker login te da error, revisa los pasos de la sección anterior de Autenticación en Container Registry. No es necesario que vuelvas a generar el archivo de credenciales, simplemente copia ese archivo .json en el proyecto actual y úsalo para hacer login. En tal caso, no olvides añadir el archivo de credenciales al .gitignore para evitar publicar en GitHub tus credenciales. Etiqueta el contenedor con el nombre completo incluyendo la referencia a Container registry (gcr.io). Primero definimos una variable de entorno con el nombre de nuestro proyecto GCP, y luego etiquetamos la imagen ya construida con un nuevo nombre completo del registro de contenedores: GOOGLE_CLOUD_PROJECT=cnsa-2022-user123 docker tag <your username>/nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Comprueba que se ha etiquetado correctamente Fig. 2. Imagen etiquetada A continuación, publica la imagen en el registro con docker push docker push gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Comprueba que se ha publicado correctamente. Fig. 3. Lista de imágenes en Container Registry La imagen del contenedor nodeapp ya está disponible en el registro privado de nuestro proyecto GCP. Utilizando nuestras credenciales podremos hacer docker pull de dicha imagen para descargarla en cualquier máquina con docker, y ejecutarlo con docker run. docker run -p 3000:3000 -t --name nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Conecta a la instancia de despliegue para ejecutar el contenedor. Antes vamos a comprobar el login al registro. En la máquina de despliegue ya habíamos copiado el archivo de credenciales .json con premisos sobre Container Registry. A continuación se recuerdan los comandos necesarios para ello. # Conectamos a la máquina de despliegue ssh ubuntu@DNS_MAQUINA_DEPLOY # Autenticamos docker contra Container Registry cat keyfile.json | docker login -u _json_key --password-stdin https://gcr.io # ejecutamos el contenedor desde gcr.io docker run -p 8080:3000 -t --name nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Hemos publicado el contenedor en el puerto 8080 ya que es el que está abierto en las reglas del firewall de nuestro proyecto GCP. Es posible que la ejecución del contenedor de un error, porque el puerto 8080 ya esté en uso: Error starting userland proxy: listen tcp 0.0.0.0:8080: bind: address already in use. Para solucionarlo, bien detén el proceso o contenedor java que está corriendo con la aplicación PetClinic del ejemplo anterior. O bien utiliza el puerto 80 que también está abierto. A continuación, vamos a automatizar en Jenkins todo el proceso: la construcción de la imagen del contenedor, la publicación de la imagen en el registro, y el despliegue del contenedor. Los plugins de Jenkins necesarios ya los tenemos configurados el ejemplo en Java. Definimos un nuevo proyecto en Jenkins de tipo pipeline, con el nombre nodeapp-Docker-abc123 sustituyendo abc123 por nuestro nombre de usuario. Son necesarios 3 fases (stages) en el pipeline: build image, push image, y deploy container. Comenzamos por la construcción de la imagen: pipeline { agent any environment { CONTAINER_REGISTRY = 'gcr.io' GOOGLE_CLOUD_PROJECT = 'cnsa-2022' CREDENTIALS_ID = 'cnsa-2022-gcr' } tools { // In Global tools configuration, install Node configured as \"nodejs\" nodejs \"nodejs\" } stages { stage(\"Git Checkout\") { steps { // checkout scm git 'https://github.com/ualcnsa/nodeapp.git' } } stage('Install dependencies') { steps { sh 'npm install' } } stage('Test') { steps { sh 'npm run test-jenkins' } post { success { junit '**/test*.xml' } } } stage(\"Build image\") { steps { script { dockerImage = docker.build( \"${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/nodeapp:${env.BUILD_ID}\", \"-f Dockerfile .\" ) } } } } } Para probar que la imagen del contenedor se ha creado bien, añade la siguiente fase que hace un despliegue \"local\" en la propia máquina de Jenkins, es decir, ejecuta un contenedor basado en la imagen que acabamos de crear: stage(\"Run image locally\") { steps { sh \"docker stop nodeapp || true && docker rm nodeapp || true\" (1) sh \"docker run -d -p 8080:3000 -t --name nodeapp ${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/nodeapp:${env.BUILD_ID}\" (2) } } 1 Por si ya se ha ejecutado el pipeline anteriormente, es necesario comprobar si el contenedor nodeapp ya se está ejecutando, y en tal caso pararlo con docker stop y eliminarlo con docker rm 2 Con docker run ejecuta el contenedor nodeapp a partir de la imagen recién construida. Para que el pipeline pueda finalizar y el contenedor siga ejecutándose, se añade -d que indica modo detached que ejecuta el contenedor en background. Tras ello, la aplicación debe estar accesible en el puerto 8080 en tu máquina de Jenkins. Para asegurarnos que la aplicación se está ejecutando bien, debemos problarlo \"manualmente\". Para automatizar esta prueba, lo adecuado sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test image') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed\"' } } El siguiente paso es publicar la imagen en el registro. Primero, las credenciales en Jenkins para poder hacer push en Container Registry ya están creadas del ejemplo anterior (Si tienes algún problema, consulta la sección correspondiente del ejemplo de Java) Define la fase para publicar la imagen del contenedor: stage(\"Push image\") { steps { script { docker.withRegistry('https://'+ CONTAINER_REGISTRY, 'gcr:'+ GOOGLE_CLOUD_PROJECT) { dockerImage.push(\"latest\") dockerImage.push(\"${env.BUILD_ID}\") } } } } Comprueba que se ha publicado correctamente en el registro. Fig. 4. Imagen publicada en Container Registry, etiquetada con el número de build Por último, quedaría el paso de desplegar al entorno de producción: la máquina virtual de despliegue. Los pasos para el despliegue de la nueva imagen del contenedor consistirán en ejecutar los siguientes comandos sobre la máquina de despliegue: docker stop del contenedor por si estuviera ejecutándose docker rm para eliminar el contenedor existente, que puede estar basado en una imagen de una versión anterior docker run que primero hará un docker pull de la imagen actualizada del registro. Lo lanzaremos en el puerto 80 ya que el 8080 está ocupado por el despliegue que hicimos sin contenedor. Estas acciones debemos añadirlas a un stage del pipeline de Jenkins que se encargará de desplegar el nuevo contenedor automáticamente. En el siguiente código, sustituye DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia de despliegue. También puedes definirla como una variable de entorno al inicio del pipeline. stage('Deploy to Production') { steps{ sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -q --filter name=nodeapp | grep . ; then docker stop nodeapp ; fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -a -q --filter name=nodeapp | grep . ; then docker rm -fv nodeapp ; fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"docker run -d -p 8080:3000 -t --name nodeapp ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/nodeapp:latest\" (2) ''' } } 1 Ejecuta en la instancia de despliegue el comando que detiene y elimina el contenedor nodeapp en caso de que ya se estuviera ejecutando 2 Ejecuta en la instancia de despliegue el comando para ejecutar el contenedor basado en la última versión de la imagen, lanzándolo en background y con -d para que el pipeline finalice y el contenedor permanezca en ejecución. La aplicación nodeapp debe estar accesible en producción, en el puerto 8080 en la instancia de despliegue. Para asegurarnos, debemos problarlo \"manualmente\". Para automatizar esta prueba en producción, lo adecuado de nuevo sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test on Production') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed on Production\"' } } Por último, es una buena práctica eliminar las imágenes que se van generando en cada build, para liberar espacio en la máquina de Jenkins. Primero paramos y eliminamos el contenedor local, luego eliminamos la imagen. stage('Remove Unused docker image') { steps{ // input message:\"Proceed with removing image locally?\" (1) sh 'if docker ps -q --filter name=nodeapp | grep . ; then docker stop nodeapp && docker rm -fv nodeapp; fi' (2) sh 'docker rmi ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/nodeapp:$BUILD_NUMBER' (3) } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline 2 Para y elimina el contenedor local 3 Elimina la imagen de contenedor en local con docker rmi para liberar espacio. El pipeline completo, con todas sus fases, debe quedar así: Fig. 5. Pipeline completo Referencias Dockerizing a Node.js web app @ Node.js Docs A simple docker setup for hello world nodejs application @ Medium Dockerizing a Node.js Web Application @ SemaphoreCI Top 4 Tactics To Keep Node.js Rockin’ in Docker","title":"Hola mundo en Node.js con Docker","component":"despliegue-continuo","version":"0.24.0","name":"node-hello-docker","url":"/despliegue-continuo/0.24.0/node-app/node-hello-docker.html","titles":[{"text":"Creación del Dockerfile","hash":"_creación_del_dockerfile","id":1},{"text":"Publicación de la imagen en el registro","hash":"_publicación_de_la_imagen_en_el_registro","id":2},{"text":"Despliegue en VM","hash":"_despliegue_en_vm","id":3},{"text":"Integración y despliegue continuos con Jenkins","hash":"_integración_y_despliegue_continuos_con_jenkins","id":4}]},"23":{"id":23,"text":"A continuación se muestra un ejemplo de integración y despliegue continuos en Jenkins de un proyecto Node.js. Los pasos a realizar son similares al ejemplo anterior con Java, el decir, el pipeline tendrá las mismas fases; eso si, adaptaremos las ordenes o comandos a ejecutar a la tecnología Node.js. Al igual con el ejemplo anterior en Java, en primer lugar trabajaremos con la aplicación Node.js sin dockerizar, y después dockerizaremos la aplicación. La mayoría de los pasos siempre los ejecutaremos primero en local, y tras comprobar que funcionan correctamente, los automatizaremos en Jenkins. La implementación de la integración y despliegue continuos permitirá que, para cada cambio de código en el repositorio, Jenkins será notificado y descargará los cambios, instalará las dependencias y ejecutará los tests. Si los tests pasan correctamente, Jenkins desplegará la aplicación en el servidor de despliegue. Y si fallan, se notificará al desarrollador. Nos vamos a basar en el proyecto HelloWorld en Node.js, disponible en https://github.com/ualcnsa/nodeapp. Necesitarás poder hacer cambios sobre el mismo, así que crea un fork y trabaja con tu fork a partir de ahora. Al realizar el fork, no olvides quitar la marca copy the master branch only Fig. 1. Fork del repo nodeapp Tras clonar tu fork a local, haz checkout del tag v0.1 en una nueva rama cuyo nombre sea tu usuario de la UAL, para que tus archivos estén en el estado inicial de este tutorial: git checkout tags/v0.1 -b <branch> (1) 1 Usa tu nombre de usuario de la UAL como nombre de la rama. Veamos los archivos que componen la aplicación: El archivo package.json contienen información básica de la aplicación y las dependencias: express: Node framework jest: framework de testing para Node.js (existen numerosos framework de testing en Node.js, como Jasmine, Mocha, Tape, etc.) supertest: proporciona abstracción a alto nivel para testing HTTP package.json { \"name\": \"nodeapp\", \"version\": \"1.0.0\", \"description\": \"\", \"main\": \"src/main.js\", \"scripts\": { \"start\": \"node src/main\", \"test\": \"jest\" }, \"author\": \"\", \"license\": \"ISC\", \"dependencies\": { \"express\": \"^4.17.3\" }, \"devDependencies\": { \"jest\": \"^27.5.1\", \"supertest\": \"^6.2.2\" } } Comprueba que los archivos main.js, app.js y app.test.js, así como la carpeta services, estén dentro de una carpeta src. Si no es así, crea la carpeta src y muevelos dentro. Revisa el conetenido de package.json para que sea idéntico al mostrado aquí. Fig. 2. Archivos y carpetas en el estado inicial Para instalar las dependencias ejecuta npm install. El archivo principal del proyecto src/main.js se encarga de arrancar la aplicación en el puerto 3000. src/main.js const app = require(\"./app\"); const port = 3000 app.listen(port, () => { console.log(`Example app listening on port ${port}`) }) El archivo src/app.js es un sencillo hola mundo con dos rutas: / devuelve \"Hello World!\" /:nameToSalute devuelve \"Hello \" + nameToSalute + \"!\" mediante el servicio HelloWordService src/app.js const express = require('express') const HelloWordService = require( \"./services/hello-world\" ); const app = express() app.get('/', (req, res) => { res.send('Hello World!') }) app.get('/:nameToSalute', (req, res) => { res.send(new HelloWordService().greet(req.params.nameToSalute)); }) module.exports = app El archivo src/services/hello-world.js es un servicio de hola mundo. src/services/hello-world.js class HelloWordService { /** * @description Create an instance of HelloWordService */ constructor () { } /** * @description Says Hello to a given name * @param nameToHello {string} Name to greet * greet name * @returns a string that starts with Hello */ greet ( nameToHello ) { return \"Hello \" + nameToHello+\"!\"; } } module.exports = HelloWordService; Para ejecutar la aplicación, ejecuta: npm start Puedes ver la aplicación en el navegador accediendo a http://localhost:3000 o a http://localhost:3000/nombre Test unitarios y end2end En primer lugar tenemos un test unitario para probar el servicio HelloWorldService que comprueba que la salida sea la esperada. Se guardará en la carpeta src/services/ con el nombre hello-world.test.js. src/services/hello-world.test.js const HelloWordService = require(\"./hello-world\"); describe(\"HelloWordService Test\", () => { const helloWordService = new HelloWordService(); it(\"says 'Hello John!' to greet John\", () => { expect(helloWordService.greet(\"John\")).toBe(\"Hello John!\"); }); }); En segundo lugar tenemos varios test end2end. El primer test va a navegar a la raiz de la aplicación (/) y verificar que la página responde con el texto esperado Hello World!. El segundo test navega a /John y comprueba que la página responde con Hello John!. src/app.test.js const request = require(\"supertest\"); const app = require(\"./app\"); describe(\"GET /\", () => { //navigate to root and check the the response is \"Hello World!\" it('responds with \"Hello World!\"', (done) => { request(app).get('/').expect('Hello World!', done); }); }); describe(\"GET /John\", () => { //navigate to /John and check the the response is \"Hello John!\" it('responds with \"Hello John!\"', (done) => { request(app).get('/John').expect('Hello John!', done); }); }); Para ejecutar los tests: npm test Fig. 3. npm test Si todo funciona correctamenente, haz commit y push de tu rama. Definimos un nuevo proyecto tipo Pipeline. Añadimos la descripción del pipeline: pipeline { agent any tools { // In Global tools configuration, install Node configured as \"Node.js\" Node.js \"Node.js\" } stages { stage('Cloning Git') { steps { git branch: 'MI_RAMA', url: 'https://github.com/MI_USUARIO/nodeapp' (1) } } stage('Install dependencies') { steps { sh 'npm install' } } stage('Test') { steps { sh 'npm test' } } } } 1 Cambia el nombre de la rama y la URL del repositorio por las tuyas. El resultado sera: Fig. 4. Nodeapp pipeline La evolución de las métricas del proyecto es uno de los indicadores que habitualmente muestra Jenkins como feedback para los desarrolladores. Vamos a publicar los resultados de los test en un gráfico. Editamos package.json y añadimos el script test-jenkins para generar los resultados de los test en formato xml que usará Jenkins para generar el gráfico, y la dependencia necesaria para ello: package.json: jenkins-test y dependencia mocha-junit-reporter ... \"scripts\": { \"start\": \"node src/main\", \"test\": \"jest\", \"test-jenkins\": \"jest --reporters=default --reporters=jest-junit\", (1) }, \"jest-junit\": { (2) \"outputDirectory\": \"./coverage/\", \"outputName\": \"test.results.xml\", \"usePathForSuiteName\": \"true\" }, ... \"devDependencies\": { \"jest\": \"^27.5.1\", \"jest-junit\": \"^13.0.0\", (3) \"supertest\": \"^6.2.2\" } 1 Añadimos el script test-jenkins que define los formatos de salida de los test: el normal y usando el plugin jest-junit para formato xml. 2 Configuración para jest-junit que genera los resultados de los test en el archivo ./coverage/test.results.xml 3 Dependencia a jest-junit que permite generar los resultados de los test en xml. Podemos probar en local, llamamos a la ejecución de los test y generación del xml: npm run test-jenkins. Añade al .gitignore la carpeta /coverage, ya que su contenido se generará al lanzar los tests y no se debe guardar en el repositorio. Guarda los cambios en el repositorio, para que estén actualizados cuando los lea Jenkins. Actualizamos el pipeline, la fase Test: stage('Test') { steps { sh 'npm run test-jenkins' } post { success { junit '**/test*.xml' } } } Guardamos los cambios. Tras un par de ejecuciones del build, se visualiza el gráfico Test Result Trend: Fig. 5. Publicado el gráfico de tendencia de los test Configura en GitHub un nuevo Webhook para que tras cada cambio de código en el repositorio, Jenkins sea notificado y lance automáticamente la construcción del pipeline: En GitHub, seleccionamos el repositorio sobre el que queremos activar la construcción en Jenkins y hacemos clic en: Settings > WebHooks > Add webhook En Payload URL: http://{YOUR_JENKINS_URL}/github-webhook/ Fig. 6. Nuevo Webhook Finalmente, en la configuración del proyecto en Jenkins, en la sección Build Trigers, marca la opción GitHub hook tirigger from GITScm polling Fig. 7. Activar el Webhook en build trigers A partir de ahora, cuando el repositorio en GitHub reciba un push notificará a Jenkins para que lance la construcción automáticamente. Como ya sabemos, la cobertura de código nos va a ofrecer un valor directamente relacionado con la calidad de los juegos de prueba. Para obtener la cobertura y publicarla en Jenkins, debemos hacer: Añadir a package.json un script para cobertura que permite obtener la cobertura con Jest. Modificar la fase Test de Jenkins para que llame al script de cobertura y publique, en el bloque post, el informe de cobertura generado. 1.Modifica package.json, añadiendo el nuevo script y la dependencia: package.json: cobertura ... \"scripts\": { ... \"coverage-jenkins\": \"jest --reporters=default --reporters=jest-junit --coverage --coverageReporters=text --coverageReporters=html --coverageDirectory=./coverage/\" }, ... Podemos probar en local, llamamos a la ejecución del script: npm run coverage-jenkins. Fig. 8. Ejecución de cobertura Como resultado, en la carpeta coverage del proyecto se ha generado el informe de cobertura. Fig. 9. Informe de cobertura Fig. 10. Informe de cobertura en html Modifica el pipeline de Jenkins, la fase Test: stage('Test') { steps { sh 'npm run coverage-jenkins' (1) } post { success { junit '**/test*.xml' publishHTML target: [ (2) allowMissing : false, alwaysLinkToLastBuild : false, keepAll : true, reportDir : './coverage/', reportFiles : 'index.html', reportName : 'Coverage Report' ] } } } 1 Llama al nuevo script que calcula la cobertura 2 Publica el informe de cobertura Instala el HTML Publisher plugin en Jenkins El resultado en Jenkins, debe aparece un enlace nuevo en el menú de la izquierda: Fig. 11. Enlace al informe de cobertura en html Para poder visualizar correctamente el Coverage Report, hay que cambiar la configuración de seguridad de Jenkins predeterminada, que es muy restrictiva para prevenir de archivos HTML/JS maliciosos que podrían instalarse como parte de un Plugin. Para modificar la configuración, abre la consola de scritps (Manage Jenkins / Script Console), y ejecuta estas líneas: System.setProperty(\"hudson.model.DirectoryBrowserSupport.CSP\", \"sandbox; default-src 'none'; img-src 'self'; style-src 'self' 'unsafe-inline'; \") System.getProperty(\"hudson.model.DirectoryBrowserSupport.CSP\") Fig. 12. Script Console: permisos para visualizar el informe de cobertura Tras ello ya podrás visualizar correctamente el informe de cobertura. Pero ten en cuenta que cada vez que reinicies Jenkins esta configuración se pierde y vuelve a la configuración predeterminada. El código JavaScript es dinámicamente tipado, por lo que en lugar de usar el compilador para realizar el análisis estático de código, como ocurre en lenguajes como Java, las formas más comunes de análisis estático en JavaScript son formatters y linters. Formatters o formateadores, escanean y reformatean rápidamente los archivos de código. Uno de los más populares es Prettier, que como cualquier buen formateador, corregirá automaticamente las inconsistencias que encuentre. Linters pueden trabajar en aspectos de formato pero también otros problemas más complejos. Se basan en una serie de reglas para escanear el código, o descripciones de comportamientos a vigilar, y muestran todas las violaciones que encuentran. El más popular para JavaScript es ESLint. Vamos a probar ESLint. Instala con npm: npm install eslint eslint-config-prettier eslint-plugin-prettier --save-dev A continuación, inicializa un archivo de configuración: npx eslint --init Y responde a las preguntas: Fig. 13. ESLint init Se habrá creado un archivo .eslintrc.json, que incluirá esta línea: { \"extends\": \"eslint:recommended\" (1) } 1 Habilita las reglas predeterminadas En lugar del anterior fichero, puedes utilizar un fichero .eslintrc.js como el siguiente, que contiene recomendaciones para express: module.exports = { env: { es6: true, node: true }, extends: ['prettier'], plugins: ['prettier'], globals: { Atomics: 'readonly', SharedArrayBuffer: 'readonly' }, parserOptions: { ecmaVersion: 2018, sourceType: 'module' }, rules: { 'prettier/prettier': 'error', 'class-methods-use-this': 'off', 'no-param-reassign': 'off', camelcase: 'off', 'no-unused-vars': ['error', { argsIgnorePattern: 'next' }] } }; Añade a package.json un script para lint y la dependencia a ESLint, y comprueba el resto de dependencias: package.json: lint y dependencia a ESLint \"scripts\": { ... \"lint\": \"eslint src/**/*.js -f checkstyle -o coverage/eslint-result.xml\" }, ... \"devDependencies\": { ... \"eslint\": \"^8.57.0\", \"eslint-config-prettier\": \"^9.1.0\", \"eslint-plugin-prettier\": \"^5.1.3\", \"prettier\": \"^3.2.5\", } ... Lánzalo en local: npm run lint -s El parámetro -s se utiliza para que no muestre mensajes de error. Habrá generado el archivo coverage/eslint-result.xml en formato similar al informe de CheckStyle para poder importarlo correctamente en Jenkins. En Jenkins, añade una nueva fase Analysis en el pipeline, en la que llames a lint y publiques el informe generado por ESLint con el formato CheckStyle. stage('Analysis'){ steps{ sh 'npm run lint -s' } post { always{ // record lint issues found, also, fail the build if there are ANY NEW issues found recordIssues enabledForFailure: true, // blameDisabled: true, tools: [esLint(pattern: '**/eslint-result.xml')], qualityGates: [[threshold: 1, type: 'NEW']] } } } El enlace al informe de ESLint no aparece en la página principal del proyecto, en el menú de enlaces, sino que tienes que hacer clic en el número del último build, y en la nueva página ya aparece el enlace: Fig. 14. Enlace al informe ESLint No te preocupes si la fase de análisis que acabas de añadir falla (está en rojo). Es así porque cuando ESLint detecta un error, finaliza con error (EXIT 1). Para evitarlo, añade ` || true` al comando sh que se ejecuta en la fase de análisis: sh 'npm run lint -s' || true Tras ello, la nueva ejecución del pipeline se ejecutará correctamente. Fig. 15. Fase ESLint Para desplegar la aplicación hello world en la instancia de despliegue vamos a clonar el repositorio y a continuación ejecutaremos en ella la orden de Node para ponerla en marcha. Recuerda que ya he hemos realizado una configuración previa sobre la instancia de despliegue, que constituyen los prerrequisitos para esta sección: Con anterioridad ya instalamos Node.js en la instancia de despliegue. También habíamos copiado la clave pública de despliegue para que Jenkins, que tiene la clave privada asociada, pueda hacer ssh y ejecutar comandos sobre ella. Como requisito adicional, para ayudarnos a lanzar npm start desde Jenkins, como un proceso demonio en background, usaremos forever. Debes instalar forever en la instancia de despliegue: npm install forever -g Una vez revisados los prerrequisitos, añade la fase de despliegue al pipeline en Jenkins: Copia este nueva fase en tu pipeline, sustituyendo DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia (también puedes definirla como una variable de entorno), y usa el nombre del repositorio git adecuado: environment { DNS_DEPLOY_INSTANCE = \"deploy.jenkinscnsa2024.tech\" // \"your-deploy-instance DNS\" } ... stage('Deploy'){ steps { sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"if [ ! -d 'nodeapp' ] ; then git clone https://github.com/MI_CUENTA/nodeapp.git else cd nodeapp git pull origin master git checkout MI_RAMA fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.11.1/bin/ && if pgrep node; then forever stopall; fi\" (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.11.1/bin/ && cd nodeapp && npm install\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.11.1/bin/ && cd nodeapp && PORT=8080 forever start index.js\" (4) ''' } } 1 Clona el repositorio (tu fork) si no existe en la máquina de despliegue, si existe hace un pull y checkout de tu rama de trabajo. 2 Detiene la ejecución de forever si existe de un despliegue anterior, usando forever stop. 3 Instala las dependencias 4 Ejecuta la aplicación con forever start en el puerto 8080, que ejecuta el proceso en background como demonio. Revisa en la máquina de despliegue la ruta de node y npm con el comando whereis node y whereis npm, y modifica la ruta del PATH en el script si es necesario. Referencias Running Node.js on a Virtual Machine codelab How to set up CI/CD Pipeline for a node.js app with Jenkins","title":"Hola mundo en Node.js","component":"despliegue-continuo","version":"0.24.0","name":"node-hello","url":"/despliegue-continuo/0.24.0/node-app/node-hello.html","titles":[{"text":"Construcción y ejecución en local","hash":"_construcción_y_ejecución_en_local","id":1},{"text":"Creación del pipeline en Jenkins","hash":"_creación_del_pipeline_en_jenkins","id":2},{"text":"Webhook para construcción automática","hash":"_webhook_para_construcción_automática","id":3},{"text":"Informe de cobertura","hash":"_informe_de_cobertura","id":4},{"text":"Análisis estático de código","hash":"_análisis_estático_de_código","id":5},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":6}]},"24":{"id":24,"text":"Existen distintas opciones respecto al entorno en el que realizar las actividades propuestas. Tendrás que conectar a las instancias en GCP, lanzar Terraform, lanzar contenedores Docker, etc. Dependiendo del sistema operativo de tu máquina local y de tus gustos personales, te recomiendo alguna las siguientes alternativas: Windows: es recomendable usar un terminal basado en Linux, por ejemplo Git Bash (https://git-scm.com). Linux y Mac: el terminal del S.O incluye todas las herramientas básicas necesarias (git, ssh, etc). Cloud Shell de Google Cloud: la consola web de Google Cloud proporciona la herramienta Cloud Shell que permite trabajar cómodamente contra GCP desde cualquier navegador web y cualquier S.O. Recuerda que Cloud Shell tiene una cuota de uso, con un límite de número de horas semanales (168h): Fig. 1. Cuota de Cloud Shell Para ver tu cuota semanal, haz clic en Información de la sesión y, luego, en Cuota de uso. Aparecerá un cuadro de diálogo en el que se mostrarán las horas restantes en tu cuota, la cantidad total de horas en ella y la fecha y hora en que se restablecerá la cuota. A continuación se explican las herramientas que debes configurar si estás usando tu máquina local, aunque probablemente algunas ya las tendrás instaladas. Si optas por trabajar en Cloud Shell, seguramente también estarán ya instaladas. En general evita usar el usuario root salvo que sea estrictamente necesario, para no generar problemas de permisos sobre los archivos y carpetas cuando estés usando un usuario distinto de root. Utiliza sudo delante de los comandos estrictamente cuando requieras permisos de administrador, pero evita hacerlo de forma predeterminada (evita sudo su). Para comenzar a trabajar, será necesario tener instalados en la máquina local las siguientes herramientas: Terraform, Google Cloud CLI. Se presupone que ya se tiene instalado un entorno de desarrollo como Visual Studio Code, y una pareja de claves SSH personal en la carpeta HOME del usuario (~). ~/.ssh/ ├── id_rsa (1) └── id_rsa.pub (2) 1 clave privada 2 clave pública Recuerda que ~/ hace referencia la carpeta HOME del usuario en la máquina local: En Windows: C:\\Users\\USUARIO En Mac: /Users/USUARIO En Linux: /home/USUARIO Creación de pareja de claves SSH Si aun no tienes pareja de claves SSH, ejecuta el siguiente comando en tu terminal para crear una nueva pareja de claves SSH, usando el email como etiqueta: ssh-keygen -t rsa -b 4096 -C \"your_email@inlumine.ual.es\" Cuando te pregunte Enter a file in which to save the key presiona Enter para aceptar el nombre de archivo predeterminado (id_rsa) Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter] A continuación te pedirá una contraseña o passphrase, de nuevo presiona Enter. Enter passphrase (empty for no passphrase): [Press enter] Presiona Enter de nuevo: Type passphrase again: [Press enter] Consulta si la pareja de claves se ha creado correctamente: ls -al ~/.ssh Además, se debe disponer de crédito en GCP, proporcionado por el profesor, y darse de alta en Github Student Education Pack. A continuación se describen en detalle estos requisitos previos. Si ya dispones de crédito en GCP, podrás usarlo ahora. En cualquier caso, para esta asignatura disponemos de un nuevo cupón educativo de 50$ por estudiante, que no necesita tarjeta de crédito para su activación. Actívalo en la dirección que encontrarás en el Aula Virtual de la asignatura, en la sección Area de Contenido > Cupones de GCP, usando tu email @inlumine.ual.es. Accede a la Consola de Google Cloud y crea un nuevo proyecto GCP con el nombre cnsa2024-abc123 (indicando el año correcto y sustituyendo abc123 por tu nombre de usuario), y dale permisos al profesor. Para ello, revisa las instrucciones que vimos en la asignatura del primer cuatrimestre. El crédito del cada cupón dura 12 meses, así que este nuevo proyecto asígnalo a la cuenta de facturación de la asignatura del primer cuatrimestre, ya que es mejor consumir ese crédito porque caduca antes. Si se consume el crédito del primer cupón, simplemente tendrás que cambiar tu proyecto cnsa2024-abc123 a la nueva cuenta de facturación del nuevo cupón. Terraform es una aplicación que se distribuye en un único archivo ejecutable. Las instrucciones de instalación de Terraform está disponibles aquí. En Windows se recomienda instalarlo con Chocolatey. Así que si previamente has instalado Chocolatey, simplemente abre una ventana de comandos (cmd) con permiso de administrador y ejecuta: choco install terraform -y Cierra el terminal o la ventana de comandos, abre una nueva con permisos normales y comprueba que se ha instalado correctamente: terraform -v La salida debe mostrar la version instalada: $ terraform -v Terraform v1.1.6 on windows_amd64 Google Cloud Command Line Interface está disponible para su instalación aquí. En Windows se recomienda instalarlo con Chocolatey: abre una ventana de comandos (cmd) con permiso de administrador y ejecuta: choco install gcloudsdk -y Para poder usar servicios adicionales, como DNS gratuito, debes darte de alta en Github Student Education Pack. Si ya dispones de una cuenta de GitHub, y no quieres crear una cuenta nueva, simplemente debes añadir tu email @inlumine.ual.es a la lista de emails de tu cuenta actual. Para ello, sigue las instrucciones. Tras añadir tu email, haz clic en el enlace Get the pack.","title":"Prerrequisitos","component":"despliegue-continuo","version":"0.24.0","name":"index","url":"/despliegue-continuo/0.24.0/prerrequisitos/index.html","titles":[{"text":"1. Entorno de desarrollo","hash":"_entorno_de_desarrollo","id":1},{"text":"2. Cupones educativos Google Cloud","hash":"_cupones_educativos_google_cloud","id":2},{"text":"3. Terraform","hash":"_terraform","id":3},{"text":"4. GCloud CLI para GCP","hash":"_gcloud_cli_para_gcp","id":4},{"text":"5. Github Student Education Pack","hash":"_github_student_education_pack","id":5}]},"25":{"id":25,"text":"Computación en la Nube, Servicios y Aplicaciones. Joaquín Cañadas <jjcanada@ual.es>, Francisco García <paco.garcia@ual.es> Version 0.25.0 Objetivos Crear una infraestructura de CI/CD en GCP con Máquinas Virtuales gestionadas con Terraform Diseñar proyectos Jenkins para la construcción y despliegue automatizado de aplicaciones en Java y NodeJs Realización y entrega La realización de estas actividades se realizará de forma individual. Serán la base para actividades posteriores que ser harán en equipo. La entrega será mediante el envío de un informe y el acceso al profesor a los servicios configurados por cada estudiante, para la revisión y evaluación de los mismos. Esta es la versión 0.25.0 de este documento.","title":"Despliegue continuo con Jenkins","component":"despliegue-continuo","version":"0.25.0","name":"index","url":"/despliegue-continuo/0.25.0/index.html","titles":[]},"26":{"id":26,"text":"Objetivos Utilizando una plantilla de terraform crea 2 instancias de máquina virtuales en tu proyecto en Google Cloud: Instancia para instalar Jenkins mediante un contenedor Docker. Instancia de despliegue (VM Deploy) con Docker y Docker Composer instalados. Fig. 1. Máquinas virtuales creadas con Terraform Para crear las instancias, utiliza la plantilla de terraform disponible en el repositorio https://github.com/ualcnsa/terraformGoogleCloudSample. En primer lugar realiza un fork del repositorio, para hacer las modificaciones al mismo que sean necesarias. Después, sobre tu fork, modifica las variables correspondientes para usar tu proyecto en la plantilla, tal y como se describe a continuación. El repositorio consta de tres archivos con extension .tf, y una carpeta con un template para la creación de instancias. terraformGoogleCloudSample ├── instance │ └── main.tf (4) ├── .gitignore ├── README.md ├── mynetwork.tf (2) ├── output.tf (3) └── provider.tf (1) 1 Descripción del proveedor sobre el que ejecutar la plantilla, en nuestro caso Google Cloud. 2 Plantilla principal. Crea la red, las reglas de firewall, las 2 instancias llamando al módulo main.tf de la carpeta instance, y por último realiza la inicialización de cada instancia. 3 Plantilla con los valores que se muestran de salida al finalizar la ejecución 4 Módulo genérico para crear una instancia. Es llamado desde network.tf pasándole las variables que necesita para crear la instancia. El archivo provider.tf deberás modificarlo: provider.tf # Descargar json con credenciales de aquí: # https://console.cloud.google.com/apis/credentials/serviceaccountkey # Tras ello definir la variable de entorno apuntando a el json # export GOOGLE_CLOUD_KEYFILE_JSON=path/file.json variable \"gcp_project\" { # Configurar el nombre del proyecto en GCP default = \"cnsa-2024\" (1) } terraform { required_providers { google = { source = \"hashicorp/google\" version = \"5.18.0\" (2) } } } provider \"google\" { project = var.gcp_project region = \"us-central1\" zone = \"us-central1-c\" } 1 Sustituye este valor por el nombre de tu proyecto, indicando el año correcto y concatenando tu nombre de usuario de la UAL (cnsa2024-abc123) 2 Versión del proveedor de Google Cloud que se va a utilizar. Utiliza la última disponible, que puedes consultar en aquí. Para que terraform pueda conectar al provider Google Cloud desde tu máquina local, debes proporcionar clave para la Cuenta de servicio. Seleccionar el proyecto Google Cloud. En el menú de navegación seleccionar IAM y administración | Cuentas de servicio. Fig. 2. Creación del archivo de credenciales Google Cloud 1 Selecciona el proyecto 2 Selecciona Crear Cuenta de Servicio Da un nombre a la cuenta de servicio (p.e. terraform), y pulsa Crear y Continuar Fig. 3. Propiedades del archivo de credenciales Google Cloud Selecciona el rol Administrador de Compute Engine (también es suficiente con Proyecto → Editor), y pulsa Continuar Fig. 4. Rol de administrador de la cuenta de servicio Deja en blanco los siguiente campos, y pulsa Listo. A continuación, accede a la cuenta de servicio recien creada: Fig. 5. Detalles de la nueva cuenta de servicio Ve a la pestaña Claves, Agregar Claves, Crear nueva Clave. Fig. 6. Nueva clave de cuenta de servicio Dejar JSON en el tipo de clave. Fig. 7. Nueva clave de cuenta de servicio JSON Seleccionar Crear. A continuación se descargará la clave privada. Fig. 8. Nueva clave descargada Guarda el archivo .json en la carpeta credentials del proyecto terraform. A continuación, en tu terminal define la variable de entorno apuntando a el archivo recién descargado, sustituyendo path/file.json por la ruta relativa y el nombre del archivo de credenciales: export GOOGLE_CLOUD_KEYFILE_JSON=path/file.json Recuerda: NUNCA subas tu archivo de credenciales json a un repositorio público como GitHub. Para evitarlo, añade el nombre el archivo de credenciales al .gitignore. Se recomienda guardar el archivo .json en una carpeta llamada credentials, porque ya estaría ignorado, puedes verlo en el .gitignore del repositorio que has forkeado. En el archivo de credenciales va tu clave privada que sustituye a tu usuario y contraseña para crear recursos en GCP. Hay robots que continuamente analizan repositorios públicos de GitHub buscando PRIVATE KEYS y API TOKENS. Si un hacker accede a ese archivo, lo usará para crear servicios hasta agotar tu crédito por completo, fundamentalmente para minar bitcoins. Videotutorial Accede al videotutorial explicativo de esta sección (mp4, 20 minutos, 171M). Una vez configurado el provider comprueba que la conexión es correcta: en tu terminal, ejecuta el comando terraform init para inicializar el proyecto como un proyecto terraform. Si todo es correcto aparecerá un mensaje de éxito. Fig. 9. terraform init correcto Si por el contrario recibes algún mensaje de error, revisa el motivo del error: Terraform puede que no esté accesible. Debería estar en el PATH Revisa si la variable de entorno si se ha guardado correctamente, ejecuta echo $GOOGLE_CLOUD_KEYFILE_JSON y comprueba que es la ruta y nombre de archivo correctos. Ejecuta el comando terraform plan para ver el resultado de elementos que se crearán o eliminarán al ejecutar la plantilla. Debe aparecer que se crearán 7 elementos. Fig. 10. terraform plan correcto Ejecuta el comando terraform apply --auto-approve para ejecutar la plantilla. Comenzará a crear los 7 elementos definidos en la plantilla. Tardará unos 5 minutos o incluso más, así que ten paciencia. Sobre todo tardará en ejecutar los bloques de inicialización de las instancias, en las que se actualizan los paquetes, se instala Docker y otros paquetes. En todo momento verás en pantalla el log de las operaciones que se están realizando. Si la primera vez que aplicas el plan aparece un mensaje de Error: …​ Error 403: Compute Engine API has not been used in project…​ es debido a que aun no se ha activado la API de Compute Engine en el proyecto. Haz clic en el enlace del error y activa la API. Espera un par de minutos y vuelve a lanzar terraform. Fig. 11. Habilitar la API de Compute Engine Tras la ejecución, comprueba que las instancias se han creado correctamente en tu proyecto Google Cloud. Apaga las instancias cuando dejes de usarlas, para evitar que consuman crédito. Cuando desees eliminar todos los recursos que hemos creado con esta plantilla, simplemente ejecuta terraform destroy. Por ahora debes simplemente apagar las instancias cuando no las uses, porque las necesitaremos en el resto de la asignatura. terraform state list: Muestra todos los recursos que gestiona terraform. terraform state show <recurso>: Muestra los detalles de un recurso concreto. terraform show: Muestra los detalles de todos los recursos. Si necesitas destruir y volver a crear un recurso concreto, y no todo el plan: terraform plan -destroy -target=<recurso>: Muestra el plan de destrucción de un recurso concreto. terraform destroy -target=<recurso> --auto-approve: Destruye un recurso concreto. Google Cloud ha asignado una IP pública estática a cada una de tus instancias (la IP no cambiará al apagar la instancia y volver a encenderla). A continuación, vamos a asignar nombres de DNS a esas IPs con Cloud DNS y uno de los servicios de DNS disponibles en el Student Pack de GitHub. GitHub Student pack ofrece varios servicios de nombres dominios gratuitos durante 1 año. Puedes usar name.com, namecheap, o .tech domains. En uno de ellos vamos a dar de alta un nombre de dominio para nuestras instancias en Google Cloud. Voy a describir cómo hacerlo con .tech. Accede a get.tech y prueba un nombre de dominio que te guste y que esté disponible. Cuando encuentres el adecuado, añadeló al carrito con la opción Buy for 1 year seleccionada. Fig. 12. Comprobar si el dominio está disponible en get.tech A continuación, inicia sesión con tu cuenta de github, y verás que tienes el descuento por un año. Procede a la compra gratuita. Además, tendrás que registrarte para poder acceder posteriormente a la configuración. Debes completar los datos de registro ya que te identifican como propietario del nombre de dominio. Si lo deseas, usa como dirección Universidad de Almería, Ctra. Sacramento s/n, 04120, Almería, Spain. Para configurar el nombre de dominio que acabas de adquirir a las IPs reservadas, debes usar Cloud DNS en Google Cloud. Cloud DNS permite asignar los nombres de dominio a las direcciones IP públicas de las instancias. Recuerda comprobar que las IPs son estáticas. En el menú de la consola de Google Cloud, entra en Servicios de red, Cloud DNS. Fig. 13. Cloud DNS Haz clic en Crear Zona. Fig. 14. Cloud DNS, crear zona A continuación, haz clic en Añadir Conjunto de registros. Para cada instancia, crea un conjunto de registros. Fig. 15. Cloud DNS. Crear conjunto de registros, instancia Jenkins Fig. 16. Cloud DNS. Crear conjunto de registros, instancia de despliegue de apps Tras la creación, debes tener un resultado similar a este: Fig. 17. Cloud DNS. Detalles de la Zona El último paso será modificar los servidores de DNS de la configuración en la web .tech, para poner los valores de los servidores de Google Cloud. Para ello, inicia sesión en get.tech. Entra en tu pedido. Fig. 18. get.tech. Acceso al pedido Modifica los nombres de los servidores con los valores de tu zona en Cloud DNS Fig. 19. get.tech. Nombres de los servidores Guarda los cambios. Hasta pasadas 24 horas no estarán disponibles.","title":"Creación de la infraestructura en Google Cloud","component":"despliegue-continuo","version":"0.25.0","name":"index","url":"/despliegue-continuo/0.25.0/infraestructura/index.html","titles":[{"text":"Estructura del proyecto terraform","hash":"_estructura_del_proyecto_terraform","id":1},{"text":"Creación de la clave para la Cuenta de servicio","hash":"_creación_de_la_clave_para_la_cuenta_de_servicio","id":2},{"text":"Ejecución de terraform","hash":"_ejecución_de_terraform","id":3},{"text":"terraform init","hash":"_terraform_init","id":4},{"text":"terraform plan","hash":"_terraform_plan","id":5},{"text":"terraform apply","hash":"_terraform_apply","id":6},{"text":"terraform destroy","hash":"_terraform_destroy","id":7},{"text":"Más comandos útiles","hash":"_más_comandos_útiles","id":8},{"text":"Cloud DNS","hash":"_cloud_dns","id":9},{"text":"Alta de nombre de dominio","hash":"_alta_de_nombre_de_dominio","id":10},{"text":"Configuración de nombres de dominio","hash":"_configuración_de_nombres_de_dominio","id":11}]},"27":{"id":27,"text":"Objetivos Como construir y desplegar apliaciones web Java con Jenkins Dockerizar la aplicacion web Java para facilitar su despliegue Desplegar la aplicación Java tanto de forma nativa como mediante contenedor Definir un pipeline con las etapas más habituales en CI/CD","title":"Aplicación Web Java","component":"despliegue-continuo","version":"0.25.0","name":"index","url":"/despliegue-continuo/0.25.0/java-web-app/index.html","titles":[]},"28":{"id":28,"text":"Para realizar el despliegue de PetClinic como contenedor: Primero, tenemos que dockerizar la aplicación. Luego, publicar la imagen de contenedor en un registro como DockerHub o Google Artifact Registry (antes Container Registry). Y por último, ejecutar el contenedor en la instancia de despliegue. El contenedor para el despliegue de PetClinic se construirá a partir de un Dockerfile que definirá cómo se construye la imagen del contenedor, y cómo se ejecuta la aplicación en el contenedor. Utilizará la base de datos H2 embebida. Este contenedor para el despliegue de PetClinic será independiente de la configuración Dev Containers que ya posee el proyecto PetClinic, así como del entorno docker-compose. Se podría haber optado por desplegar PetClinic con docker-compose, pero en este caso vamos a desplegarlo como un contenedor independiente. A continuación se describe cómo crear un contenedor Docker de la aplicación PetClinic. Los pasos se realizan en local, y al final configuraremos el pipeline de Jenkins para que se realicen automáticamente. Para trabajar con contenedores Docker en tu equipo local, debes tener Docker instalado. Recuerda iniciar Docker Desktop en Windows, o iniciar el servicio Docker en Linux o Mac. Comprueba que está funcionado ejecutando el comando docker ps Hasta ahora nos estamos basando en el proyecto PetClinic original (genéricamente llamado upstream) disponible en GitHub. En esta sección necesitarás poder hacer cambios sobre el mismo: básicamente vamos a añadir al proyecto un archivo Dockerfile y un archivo Jenkinsfile. Así que debes crear un fork y trabajar con tu fork a partir de ahora. Verás que en los bloques de código de este documento indica como URL del repositorio https://github.com/ualcnsa/spring-petclinic.git, que deberás cambiar por la URL de tu fork. Para construir aplicaciones Maven con Docker y luego crear el contendedor de Docker que empaquete la aplicación, la opción recomendada es usar Multi-Stage Builds en tu Dockerfile, de manera que: Una primera fase o stage construye el .jar a partir de una imagen de Maven, como por ejemplo maven:3.9-eclipse-temurin-17-focal Y luego en una segunda fase, ese .jar lo copia en el contenedor basado en la imagen Alpine (slim) con Java 17, que es el entorno de ejecución Java necesario. La documentación de PetClinic indica cómo construir el contenedor usando Spring Boot build plugin. A nosotros nos interesa ver cómo hacerlo de forma genérica para cualquier aplicación Java basada en Maven. Vamos a definir el siguiente archivo Dockerfile que debe estar en la carpeta raíz del proyecto PetClinic: Dockerfile multi-stage FROM maven:3.9-eclipse-temurin-17-focal AS build (1) WORKDIR /app # First copy only the pom file. This is the file with less change COPY ./pom.xml . # Download the package and make dependencies cached in docker image RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean dependency:go-offline # Copy the actual code COPY ./ . # Then build the code RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean package # Start with a base image containing Java runtime FROM maven:3.9.6-eclipse-temurin-17-alpine (2) # Make port 8080 available to the world outside this container EXPOSE 8080 # The application's jar file ARG JAR_FILE=target/*.jar # Copy the application's jar to the container COPY ${JAR_FILE} app.jar # Run the jar file ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"] 1 Primera fase o stage de build, construye la aplicación llamando a los goals clean package de Maven. Contiene los pasos básicos para construir una aplicación Java basada en Maven. Dicha construcción la divide en dos partes, primero copia el pom.xml y descarga las dependencias con dependency:go-offline, y luego copia todos los fuentes y construye el proyecto con package. De esta forma se optimiza la reconstrucción del contenedor ya que la descarga de dependencias es una etapa que dura varios minutos. 2 Segunda fase, crea una imagen basada en la imagen Alpine de Java 17. Esta imagen está basada en el proyecto Alpine Linux que es una distribución mucho más pequeña (~5MB), y por tanto genera imágenes más pequeñas en general. Contiene los pasos básicos para ejecutar una aplicación String Boot en un contenedor: partiendo de una imagen alpine (slim), copia el archivo target/*.jar en el contenedor con el nombre app.jar y lo ejecuta mediante el comando ENTRYPOINT para que no haya ninguna shell sobre el proceso java. Construye el contenedor con docker build, y ten paciencia, tardará varios minutos!!! docker build -t petclinic-docker . Fig. 1. Docker build Si estás trabajando en Windows, la construcción podría dar un error por problemas de codificación de los saltos de línea diferentes entre Windows y Linux. Para resolverlo, sustituye en la primera fase del Dockerfile la linea de construcción que llama a package por estas dos: # Then build the code - on Linux (1) # RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean package # Then build the code - On Windows (2) RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml clean spring-javaformat:apply --no-transfer-progress RUN mvn -B -f ./pom.xml -s /usr/share/maven/ref/settings-docker.xml package --no-transfer-progress 1 Ejecución de maven package para la construcción del proyecto cuando ejecutas Docker en Linux. La linea aparece comentada. 2 Ejecución de maven package para la construcción del proyecto cuando ejecutas Docker en Windows. Las dos lineas se ejecutan (no están comentadas). Tras la construcción de la imagen, prueba la ejecución del contenedor en local: docker run -it -p 8080:8080 -t petclinic-docker Comprueba que se ha iniciado la aplicación en http://localhost:8080. Para el contenedor con CTRL+C. Una vez creada la imagen con docker build y probada su ejecución con docker run, el siguiente paso será publicar la imagen en un registro de contenedores, mediante docker push. Podemos usar DockerHub pero en este caso vamos a usar Google Cloud Artifact Registry. Para poder hacer push de la imagen del contenedor a un registro de contenedores, como Google Artifact Registry, debemos tener permisos de escritura, y por tanto debemos autenticarnos en el servicio Artifact Registry. Container Registry era hasta ahora el servicio de Google Cloud para el registro de contenedores, pero ha sido reemplazado por Artifact Registry. Aunque Container Registry sigue funcionando, se recomienda usar Artifact Registry. Si deseas ampliar información, consulta la Transición desde Container Registry Fig. 2. Container Registry is deprecated La autenticación para Docker de Artifact Registry permite conectar al registro de contenedores con tus credenciales, y hacer push y pull de tus imágenes. Existen varios métodos de autenticacion, vamos a usar la clave de cuenta de servicio. Clave de cuenta de servicio: Es un par de claves administrado por el usuario que puedes usar como credencial para una cuenta de servicio. Debido a que la credencial es de larga duración, es la opción menos segura de todos los métodos de autenticación disponibles. Configura los permisos necesarios para acceder al registro utilizando una clave de cuenta de servicio (JSON key file) como método de autenticación: En la Consola Google Cloud, seleccionar el proyecto Google Cloud. En el menú de navegación seleccionar IAM y administración | Cuentas de servicio. Seleccionar Crear cuenta de servicio. Darle un nombre (p.e. artifact-registry) Seleccionar \"Crear y continuar\". En el paso Conceder a esta cuenta de servicio acceso al proyecto del asistente, seleccionar el rol Administrador de Artifact Registry. Continuar y Listo. Editar la Cuenta de servicio. En la sección Claves seleccionar Agregar clave | Crear nueva clave. Dejar JSON en el tipo de clave. Seleccionar Crear. A continuación se descargará la clave privada. Guarda el archivo .json en la carpeta secret de tu proyecto PetClinic. No olvides añadir la carpeta secret/ al archivo .gitignore para evitar publicar en GitHub tu archivo de credenciales. Use the service account key as your password to authenticate with Docker. Sustituye keyfile.json por el nombre de tu archivo de credenciales: cat keyfile.json | docker login -u _json_key --password-stdin https://LOCATION-docker.pkg.dev (1) 1 LOCATION es la ubicación regional o multirregional del repositorio en el que se almacena la imagen. Por ejemplo, us-east1 para la región Este de Estados Unidos (recomendado). Para otras localizaciones, consulta las Ubicaciones de Artifact Registry Fig. 3. Autenticación de Docker contra Container Registry Para poder publicar la imagen en Artifact Registry, primero debemos activar la API de Artifact Registry en nuestro proyecto GCP, y luego crear un repositorio en el que almacenar la imagen del contenedor. Habilita la API de Artifact Registry en tu proyecto GCP, accediendo a la URL https://console.cloud.google.com/apis/library/artifactregistry.googleapis.com y habilitando la API. Fig. 4. Habilitar la API Container Registry Crea un nuevo repositorio para almacenar las imágenes de Docker: Abre la página Repositorios en la consola de Google Cloud. Haz clic en Crear repositorio. Fig. 5. Haz clic en Crear repositorio. Especifica docker-repo como el nombre del repositorio. Elige Docker como formato y Estándar como modo. En Tipo de ubicación, selecciona Región y, luego, elige la ubicación us-east1. En la sección Encriptación, deja la opción predeterminada: Clave administrada por Google. Deja las opciones predeterminadas en el resto de opciones. Haz clic en Crear. Fig. 6. Repositorio Docker creado Antes de enviar la imagen de Docker a Artifact Registry, debes crearla con el nombre del repositorio, o bien simplemente etiquetarla si ya la has creado previamente. Construye o etiqueta la imagen: Para construir la imagen: docker build -t us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 . O bien, para etiquetar la imagen ya existente: docker tag petclinic-docker:latest us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 En ambos casos, el nombre de la imagen está compuesto por varios elementos: us-east1 es la ubicación del repositorio. docker.pkg.dev es el nombre de host para el repositorio de Docker que creaste. PROJECT es el nombre del proyecto de Google Cloud, escribe lo que corresponda. docker-repo es el nombre del repositorio que creaste. petclinic es el nombre de imagen que deseas usar en el repositorio. El nombre de la imagen puede ser diferente del nombre de la imagen local. 1.0 es la etiqueta que agregas a la imagen de Docker. Si no especificaste una etiqueta, Docker aplicará la etiqueta predeterminada latest. Publica la imagen con docker push: docker push us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 Comprueba que se ha publicado correctamente. Fig. 7. Lista de imágenes en Container Registry La imagen del contenedor PetClinic ya está disponible de manera privada en el repositorio de Docker de nuestro proyecto GCP. Utilizando nuestras credenciales podremos hacer docker pull de dicha imagen para descargarla en cualquier máquina y ejecutarla con docker run. docker pull us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 docker run -p 8080:8080 -t --name petclinic us-east1-docker.pkg.dev/PROJECT/docker-repo/petclinic:1.0 Si conectas a la instancia de despliegue que creamos al principio de esta actividad, y ejecutas los comandos docker pull o docker run anteriores, dará un error de autenticación: Fig. 8. Error de autenticación en Container Registry Para arreglarlo, habrá que copiar en la máquina de despliegue el archivo de credenciales .json con premisos sobre Artifact Registry. A continuación se muestran los comandos necesarios para ello. Una vez disponible este archivo en la instancia de despliegue, ejecuta el comando docker login y tras ello ya si podremos hacer docker pull y docker run. # Copiamos el archivo de credenciales scp -i ~/.ssh/id_rsa ./secret/file.json ubuntu@DNS_MAQUINA_DEPLOY:~/keyfile.json # Conectamos a la máquina de despliegue ssh ubuntu@DNS_MAQUINA_DEPLOY # Autenticamos docker contra Container Registry cat keyfile.json | docker login -u _json_key --password-stdin https://us-east1-docker.pkg.dev # Variable de entorno con el nombre del proyecto GOOGLE_CLOUD_PROJECT=cnsa-2024 # Descargamos la imagen docker pull us-east1-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT/docker-repo/petclinic:1.0 # ejecutamos el contenedor docker run -d -p 8080:8080 -t --name petclinic us-east1-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT/docker-repo/petclinic:1.0 Si la ejecución de docker run te da error, prueba a ejecutarlo con sudo. Para evitar tener que escribir siempre sudo delante de cualquier comando docker, ejecuta: sudo usermod -aG docker $USER. Tras ello, reinicia la sesión. Prueba ahora sin sudo, a partir de ahora llama siempre a docker sin sudo. Más info aquí Es posible que la ejecución del contenedor de un error, porque el puerto 8080 ya esté en uso con la aplicación PetClinic que desplegamos en la sección anterior (sin Docker). En ese caso, el error será algo así como: Error starting userland proxy: listen tcp 0.0.0.0:8080: bind: address already in use. Para solucionarlo, bien detén el proceso java que está corriendo con la aplicación PetClinic tal y como la desplegamos en la sección anterior (if pgrep java; then pkill java; fi), o bien utiliza otro puerto, por ejemplo, el 80, que debe estar disponible: docker run -p 80:8080 -t --name petclinic us-east1-docker.pkg.dev/$GOOGLE_CLOUD_PROJECT/docker-repo/petclinic:1.0 Pero ten en cuenta que si el contenedor ya se ha creado y no ha podido iniciarse porque el puerto 8080 estaba ocupado, si intentas volver a crearlo con docker run te dirá que el contenedor ya existe. Revisa si está ya creado con docker ps -a, y en ese caso inícialo con docker start. ubuntu@web-deploy-vm-tf:~$ docker ps -a CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 3ed683cccecd us-east1-docker.pkg.dev/cnsa-2024/docker-repo/petclinic:1.0 \"java -jar /app.jar\" 56 seconds ago Exited 0.0.0.0:8080->8080/tcp, :::8080->8080/tcp petclinic ubuntu@web-deploy-vm-tf:~$ docker start petclinic petclinic Ya puedes comprobar en tu navegador que la aplicación PetClinic se está ejecutando en el puerto 8080 de la máquina de despliegue. Hasta ahora hemos realizado todos los pasos de construcción, prueba y despliegue de PetClinic como contenedor manualmente. A continuación, vamos a automatizar en Jenkins todo el proceso, cuyas principales tareas son: la construcción de la imagen del contenedor la publicación de la imagen en el registro y el despliegue del contenedor. Define un nuevo proyecto en Jenkins de tipo pipeline, con el nombre PetClinic-Docker-abc123 sustituyendo abc123 por nuestro nombre de usuario. Son necesarios 3 fases (stages) en el pipeline: build image, push image, y deploy container. Comenzamos por la construcción de la imagen: pipeline { agent any environment { GOOGLE_CLOUD_PROJECT = \"cnsa-2024\" // \"you-gcp-project\" APP_NAME = \"petclinic\" // \"you-app-name\" REPO_NAME = \"docker-repo\" // \"your-repo-name\" REPO_LOCATION = \"us-east1\" // \"your-repo-location\" IMAGE_NAME = \"${REPO_LOCATION}-docker.pkg.dev/${GOOGLE_CLOUD_PROJECT}/${REPO_NAME}/${APP_NAME}\" } tools { maven \"Default Maven\" } stages { stage(\"Checkout code\") { steps { // checkout scm git branch:'main', url:'https://github.com/ualcnsa2024/spring-petclinic.git' (1) } } stage('Compile, Test, Package') { steps { sh \"mvn clean package -Dcheckstyle.skip -Dtest=!PostgresIntegrationTests*\" } post { success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } stage(\"Build image\") { (2) steps { script { dockerImage = docker.build( \"${IMAGE_NAME}:${env.BUILD_ID}\", \"--rm -f Dockerfile .\" ) } } } } } 1 En la fase de Checkout code se clona el repositorio de GitHub con el código fuente de PetClinic. Sustituye la URL del repositorio por la de tu fork. 2 En la fase de Build image se construye la imagen del contenedor a partir del Dockerfile que se encuentra en la raíz del proyecto. La imagen se etiqueta con el número de build, para poder identificarla en el registro. Si consultas la salida por consola de la ejecución del pipeline, verás que se algunas tareas se repiten dos veces, como por ejemplo la ejecución de los tests. ¿Por qué crees que es debido? ¿Podría eliminarse alguna fase del pipeline? Puesto que en el Dockerfile multistage se ejecuta mvn clean package, ¿podría eliminarse la fase Compile, Test, Package del pipeline? La respuesta es que sí se puede eliminar esa fase del pipeline, sobre todo si quieres hacer que el pipeline se ejecute más rápidamente. Para probar que la imagen del contenedor se ha creado bien, añade la siguiente fase al pipeline, que hace un despliegue en un entorno de \"Staging\" o \"Testing\", que aquí va a ser \"local\" en la propia máquina de Jenkins, es decir, ejecuta un contenedor basado en la imagen que acabamos de crear: stage(\"Deploy to Testing (locally)\") { steps { sh \"docker stop petclinic || true && docker rm petclinic || true\" (1) sh \"docker run -d -p 8080:8080 -t --name petclinic ${IMAGE_NAME}:${env.BUILD_ID}\" (2) } } 1 Es necesario comprobar si el contenedor petclinic ya se está ejecutando, por si ya se ha ejecutado el pipeline anteriormente y no se ha eliminado el contenedor de la ejecución anterior. En tal caso, este comando lo detiene con docker stop y lo elimina con docker rm. 2 Con docker run ejecuta el contenedor petclinic a partir de la imagen recién construida. Para que el pipeline pueda finalizar y el contenedor siga ejecutándose, se añade -d que indica modo detached que ejecuta el contenedor en background. Si la construcción en Jenkins falla con un mensaje final del tipo Bind for 0.0.0.0:8080 failed: port is already allocated., es porque el puerto ya 8080 está ocupado por otro servicio. No debería, pero en cualquier caso si te ocurre, puedes bien detener el otro servicio contenedor o aplicación ejecutándose en el 8080, o bien cambiar el puerto en el comando docker run…​ que ejecuta el nuevo contenedor, por ejemplo el 8081, que debe estar disponible. Recuerda que si quieres poder acceder deberías abrir el puerto 8081 en el firewall de la máquina de Jenkins (Seguridad de Red, Políticas de Firewall, mynetwork-tf-allow-http-ssh-rdp-icmp, Editar reglas de firewall, Agregar tcp:8081). Si todo ha ido bien, la aplicación debe estar accesible en el puerto 8080 en tu máquina de Jenkins. Para asegurarnos que la aplicación se está ejecutando bien, debemos probarlo \"manualmente\", abriendo el navegador y accediendo a la aplicación PetClinic. Para automatizar esta prueba, lo adecuado sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test image') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed\"' } } El siguiente paso es publicar la imagen en el registro. Primero, es necesario crear unas credenciales en Jenkins para poder hacer push en Artifact Registry: Go to Jenkins home, Manage Jenkins, click on Credentials and (global) Click on Add Credentials Select Secret file for the Kind field, and enter ID (cnsa-2024_artifacts) Then upload the JSON private key. Fig. 9. Credenciales en Jenkins para Container Registry Una vez guardadas las credenciales, vamos a definir la fase para publicar la imagen del contenedor: stage(\"Push image\") { steps { withCredentials([file(credentialsId: \"${GOOGLE_CLOUD_PROJECT}_artifacts\", variable: 'GCR_CRED')]){ (1) sh \"cat ${GCR_CRED} | docker login -u _json_key --password-stdin https://${REPO_LOCATION}-docker.pkg.dev\" sh \"docker push ${IMAGE_NAME}:${env.BUILD_ID}\" sh \"docker tag ${IMAGE_NAME}:${env.BUILD_ID} ${IMAGE_NAME}:latest\" sh \"docker push ${IMAGE_NAME}:latest\" sh \"docker logout https://${REPO_LOCATION}-docker.pkg.dev\" } } } 1 En la fase de Push image se publica la imagen en el registro de contenedores. Se utiliza el método withCredentials para autenticarse en el registro con el archivo de la clave de servicio que ha sido almacenada como una credencial (secret file). Tras ello, comprueba que se ha publicado correctamente en el registro. Fig. 10. Imagen publicada en el repositorio de Artifact Registry, etiquetada con el número de build y con la etiqueta latest Por último, quedaría el paso de desplegar al entorno de producción. Una vez empaquetada como un contenedor, Google Cloud permite desplegar de varias formas: en máquina virtual con GCE, en plataforma como servicio con Google App Engine, en Kubernetes con GKE, y en Cloud Run, un servicio de Google Cloud específico para el despliegue de contenedores. Para nosotros, la máquina virtual de despliegue es nuestro entorno de producción en el que vamos a desplegar el contenedor. Los pasos para el despliegue de la nueva imagen del contenedor consistirán en ejecutar los siguientes comandos sobre la máquina de despliegue: docker stop del contenedor por si estuviera ejecutándose docker rm para eliminar el contenedor existente, que puede estar basado en una imagen de una versión anterior docker run para ejecutar el contenedor, que automáticamente hará un docker pull de la imagen actualizada del registro. Lo lanzaremos en el puerto 80 ya que el 8080 está ocupado por el despliegue que hicimos sin contenedor. Estas acciones debemos añadirlas a un stage del pipeline de Jenkins que se encargará de desplegar el nuevo contenedor automáticamente. En el siguiente código, sustituye DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia de despliegue. También puedes definirla como una variable de entorno al inicio del pipeline. environment { ... DNS_DEPLOY_INSTANCE = \"deploy.jenkinscnsa2024.tech\" // \"your-deploy-instance DNS\" } ... stage('Deploy to Production') { steps{ // Check to manual approving deploy to production. // It implemenents Continuous Delivery instead of Continuous Deployment input message: \"Proceed Deploy to Production?\" (1) sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"if docker ps -q --filter name=petclinic | grep . ; then docker stop petclinic ; fi\" (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"if docker ps -a -q --filter name=petclinic | grep . ; then docker rm -fv petclinic ; fi\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"docker run -d -p 80:8080 -t --name petclinic ${IMAGE_NAME}:latest\" (4) ''' } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline. Permite asegurar que el despliegue a producción requiere intervención de una persona, implementando entrega continua (continuous delivery) en lugar de despliegue continuo (continuous deployment). 2 Ejecuta en la instancia de despliegue el comando docker stop que detiene el contenedor petclinic en caso de que ya se estuviera ejecutando de un despliegue anterior. Esto se comprueba con docker ps …​. 3 Ejecuta en la instancia de despliegue el comando docker rm que elimina el contenedor petclinic en caso de que exista de un despliegue anterior. Esto se comprueba con docker ps -a …​. Estos dos pasos, primero parar el contenedor y luego eliminar el contenedor, son necesarios antes de volver a lanzar un nuevo contenedor con el mismo nombre. Se ejecuta en dos pasos para evitar errores en caso de que el contenedor exista pero no esté en ejecución, lo que podría dar lugar a un error en el despliegue. 4 Ejecuta en la instancia de despliegue el comando para ejecutar el contenedor basado en la última versión de la imagen, lanzándolo con -d que indica modo detached que ejecuta el contenedor en background, para que el pipeline finalice y el contenedor permanezca en ejecución. Fig. 11. Proceed deploy to production? (coloca el cursor para que aparezca el banner) Algunos comandos útiles de Docker: # Remove all stopped containers docker rm $(docker ps -a -q) # Remove all images docker rmi $(docker images -q) Úsalos si te aparece algún mensaje de error del tipo no space left on device, ya que la máquina Jenkins están construyendo muchas imágenes y se queda sin espacio de disco. La aplicación PetClinic debe estar accesible en producción, en el puerto 80 en la instancia de despliegue. Para asegurarnos, debemos probarlo \"manualmente\". Para automatizar esta prueba en producción, lo adecuado de nuevo sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test on Production') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh \"echo 'End-to-end Tests passed on Production'\" } } Por último, es una buena práctica eliminar las imágenes que se van generando en cada build, para liberar espacio en la máquina de Jenkins. Primero paramos y eliminamos el contenedor que desplegamos anteriormente en la fase del pipeline Deploy to Testing (locally); luego eliminamos la imagen. stage('Remove Unused docker image') { steps{ // input message:\"Proceed with removing image locally?\" (1) sh \"if docker ps -q --filter name=petclinic | grep . ; then docker stop petclinic && docker rm -fv petclinic; fi\" sh \"docker rmi ${IMAGE_NAME}:${env.BUILD_ID}\" sh \"docker rmi ${IMAGE_NAME}:latest\" } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline 2 Para y elimina el contenedor local 3 Elimina la imagen de contenedor en local con docker rmi para liberar espacio. Fig. 12. Input message (paso comentado en el ejemplo) El pipeline completo, con todas sus fases, debe quedar así: Fig. 13. Pipeline completo ENHORABUENA!!! Has conseguido definir un pipeline completo de integración y despliegue continuo, y con contenedores. Este proceso se puede aplicar, con pequeñas adaptaciones, a cualquier otro proyecto Java basado en Maven. Si usas otras tecnologías, como NodeJs, hay que adaptar cada una de las fases a su equivalente en en la tecnología concreta. Vamos a ver como hacerlo con NodeJs en la siguiente sección. Referencias Deploy via ssh: How to build on Jenkins and publish artifacts via ssh with Pipelines @ Medium Jenkins Building Docker Image and Sending to Registry @ Medium Pushing docker image through jenkins @ StackOverflow Push to Google Artifact Registry through Jenkins Pipeline @ Jenkins Community Build a Java app with Maven @ Jenkins.io Tutorials","title":"PetClinic con Docker","component":"despliegue-continuo","version":"0.25.0","name":"java-petclinic-docker","url":"/despliegue-continuo/0.25.0/java-web-app/java-petclinic-docker.html","titles":[{"text":"Creación del Dockerfile multi-stage","hash":"_creación_del_dockerfile_multi_stage","id":1},{"text":"Autenticación en Artifact Registry","hash":"_autenticación_en_artifact_registry","id":2},{"text":"Activación de la API y creación del repositorio","hash":"_activación_de_la_api_y_creación_del_repositorio","id":3},{"text":"Publicación de la imagen en el repositorio","hash":"_publicación_de_la_imagen_en_el_repositorio","id":4},{"text":"Despliegue manual del contenedor","hash":"_despliegue_manual_del_contenedor","id":5},{"text":"PetClinic con Docker en Jenkins","hash":"_petclinic_con_docker_en_jenkins","id":6},{"text":"Construcción y despliegue del contenedor","hash":"_construcción_y_despliegue_del_contenedor","id":7},{"text":"Publicación en el registro","hash":"_publicación_en_el_registro","id":8},{"text":"Despliegue en producción","hash":"_despliegue_en_producción","id":9},{"text":"Conclusiones","hash":"_conclusiones","id":10}]},"29":{"id":29,"text":"Una vez que hemos configurado correctamente nuestro entorno de CI/CD con Jenkins, vamos a estudiar varios ejemplos tanto en Java como en NodeJs. Para comprender los ejemplos, primero los vamos a construir y ejecutar en local, para después automatizar el proceso de construcción y despliegue con Jenkins. En este primer ejemplo en Java, nos vamos a basar en el proyecto PetClinic con Spring Boot. Petclinic es una aplicación Spring Boot construida usando Maven como herramienta de soporte a la gestión y construcción (build). Spring Boot es un framework de código abierto para el desarrollo de aplicaciones Java basadas en Spring. Spring Boot genera una proyecto Maven/Gradle con todo lo necesario y que se autoconfigura en el arranque. Por ejemplo, si decimos que queremos una aplicación web, Spring Boot automáticamente embebe un Tomcat y lo configura con el servlet de Spring. Toda la configuración la añade al archivo de la herramienta de build que indiquemos, en caso de Maven, al archivo pom.xml. Recordemos que Maven es una herramienta software para la gestión y construcción de proyectos Java. Apache Maven estandariza la configuración de un proyecto en todo su ciclo de vida, como son todas las fases de compilación, ejecución de pruebas, empaquetado, etc. Maven permite la gestión de dependencias entre módulos y distintas versiones de librerías, simplemente indicando los módulos que componen el proyecto, y las dependencias utiliza el software que estamos desarrollando, en un fichero XML de configuración llamado POM (Project Object Model). Para ejecutar el proyecto PetClinic, en tu máquina de desarrollo local puedes construir el .jar (empaquetado) y ejecutarlo: Requiere JDK 11 o superior en la máquina local. Si estás en Windows y tienes varias instalaciones, establece la version de Java predeterminada. git clone https://github.com/spring-projects/spring-petclinic.git cd spring-petclinic ./mvnw package (1) java -jar target/*.jar (2) 1 Llama a mvnw, el warper de Maven que instala Maven (si es necesario), y ejecuta el goal package que se encarga de compilar, ejecutar los test y empaquetar la aplicación en un único archivo ejecutable .jar. La primera vez que lances la construcción tardará más de 5 minutos, ya que tiene que descargar todas las dependencias necesarias desde los repositorios de Maven (Maven Central), y después lanzar los tests. Toda la configuración necesaria está contenida en el archivo pom.xml de Maven. 2 Ejecuta la aplicación a partir del .jar. Puedes acceder a PetClinic en: http://localhost:8080/ Fig. 1. Página principal de PetClinic En su configuración predeterminada, Petclinic utiliza una base de datos en memoria (H2) que se inicia con datos predeterminados, y los nuevos datos que se guarden se pierden al reiniciar la aplicación. En caso de necesitar persistencia de los datos, PetClinic también está preconfigurada para usar MySql. Para cambiar el tipo de base de datos, la aplicación debe ejecutarse con un perfil de MySql: spring.profiles.active=mysql. java -Dspring.profiles.active=mysql -jar target/*.jar Recuerda que para ejecutarla en este modo, debes tener un MySql funcionando en local, o bien lanzar MySql como contenedor con docker o con docker-compose. Existe un archivo docker-compose.yml disponible en el repositorio del proyecto PetClinic, por tanto puedes iniciar MySql así: docker-compose up -d El archivo docker-compose.yml que permite iniciar MySql y Postgres puedes consultarlo en la carpeta raíz del proyecto. Si abres el repositorio de PetClinic con VS Code, verás que el IDE te sugiere abrir el proyecto en un entorno Dev Containers. Esto no es necesario, puedes cerrar el aviso. Fig. 2. Aviso Dev Containers en Visual Studio Code Pero si aceptas, se descargará una imagen de Docker con un entorno de desarrollo preconfigurado para trabajar con el proyecto, así como las imágenes de MySql y Postgres. En ese caso, al lanzar la construcción del proyecto, los tests de integración se ejecutan sobre las bases de datos MySql y Postgres. Una vez que hemos probado la ejecución y funcionamiento de la aplicación PetClinic en local, vamos a configurar el proyecto en el servidor Jenkins de CI/CD para que este se encargue de la construcción y el despliegue automatizados. Conecta a tu Jenkins, y crea un nuevo item de tipo Pipeline. Dale el nombre spring-petclinic-pipeline: Fig. 3. New Item, PetClinic pipeline En el bloque Pipeline, pega la configuración siguiente: pipeline { agent any (1) tools { // Previamente has debido instalar Maven con el nombre \"Default Maven\" maven \"Default Maven\" (2) } stages { (3) stage('Git fetch') { (4) steps { // Get some code from a GitHub repository git branch:'main', url:'https://github.com/spring-projects/spring-petclinic.git' } } stage('Compile, Test, Package') { (5) steps { // Run goal 'package' includes compile, test and package. sh \"mvn clean package -Dcheckstyle.skip -Dtest=!PostgresIntegrationTests*\" (7) } post { (6) // If Maven was able to run the tests, even if some of the test // failed, record the test results and archive the jar file. success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } } } 1 agente o nodo de Jenkins en que ejecuta la construcción del proyecto. En el ejemplo, any indica que se ejecutará cualquier nodo, en nuestro caso será en el nodo principal (main) ya que es el único que hay definido. 2 como herramienta para la construcción se usará Naven. Pon aquí el nombre que diste a tu instalación de Maven configurada previamente en Tools Configuration. 3 Bloque de stages: fases o etapas que conforman el pipeline 4 Fase de descarga del repositorio git 5 Fase de compilación, ejecución de test y empaquetado de la aplicación. Se realiza con los goals de Maven clean package: primero clean elimina todo lo generado en la construcción anterior que se encuentra en la carpeta target, y a continuación se lanza la construcción con package tal y como está definida en el archivo pom.xml. La opción -Dcheckstyle.skip anula el análisis de CheckStyle, que lo añadiremos en una fase posterior. 6 Paso posterior que guarda los resultados de los test de JUnit para generar la gráfica de evolución de los test. 7 La opción -Dtest=!PostgresIntegrationTests* excluye la ejecución de los tests de integración con Postgres, ya que estos fallan en Jenkins porque hay algún problema con el contenedor de Postgres que se inicia en la construcción del proyecto. Tras ejecutar el pipeline, con \"Build now\", el resultado debe ser el siguiente: Fig. 4. Construcción del pipeline PetClinic Si realizamos una segunda ejecución, ya aparecerá la gráfica de evolución de los tests de JUnit. Alternativamente, podemos hacer que la construcción se realice en un agente que sea un contenedor docker. Para ello, crea el siguiente pipeline de nombre spring-petclinic-pipeline-agent-docker: pipeline { agent { docker { (1) image 'maven:3.9-eclipse-temurin-17-alpine' args '-v $HOME/.m2:/root/.m2' } } stages { stage('Git fetch') { steps { // Get some code from a GitHub repository git branch:'main', url:'https://github.com/spring-projects/spring-petclinic.git' } } stage('Compile, Test, Package') { steps { // Run goal 'package' includes compile, test and package. sh \"mvn clean package -Dcheckstyle.skip -Dtest=!PostgresIntegrationTests*\" } post { // If Maven was able to run the tests, even if some of the test // failed, record the test results and archive the jar file. success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' } } } } } 1 Agente donde construir el proyecto, ahora no se hace en el nodo principal sino en un contenedor docker seleccionado. La imagen de Maven que se utiliza es maven:3.9-eclipse-temurin-17-alpine, y se monta el volumen del directorio .m2 del usuario en el contenedor. Se ha elegido la imagen de Maven con Java 17 y Alpine, que es una distribución de Linux muy ligera, en lugar de la imagen de Maven con Java 21 porque esta última da problemas con la creación del directorio .m2 en el contenedor. Jenkins nos permite publicar métricas asociadas al proyecto. Una de ellas, es la cobertura de código ejecutado por las pruebas. La Cobertura de código nos indica el porcentaje de código de producción que está siendo ejecutado por los test. Es deseable tener un valor de cobertura lo más próximo posible al 100% El proyecto PetClinic contiene mas de 40 tests unitarios en JUnit, y está configurado (ver pom.xml) para que se calcule la cobertura cuando se lanzan los tests mediante el plugin JaCoCo (Java Code Coverage). Puedes visualizar el resultado de la cobertura en tu construcción local, en la carpeta target/site/jacoco: Fig. 5. Archivos generados por JaCoCo Fig. 6. Informe html de la cobertura JaCoCo Y si haces clic en el nombre de una clase, verás el código coloreado: Fig. 7. Detalle la cobertura de las lineas de código 1 Las lineas verdes están cubiertas, es decir, han sido ejecutadas por al menos 1 test. 2 Las lineas amarillas están parcialmente cubiertas (missed branches): un resultado de la condición (verdadero/falso) ha sido ejecutado por algún test pero el otro no ha sido ejecutado por ningún test. 3 Las líneas rojas no están cubiertas, no han sido ejecutadas por ningún test. Para visualizar el resultado de la cobertura en Jenkins: Instala el plugin de JaCoCo y el plugin Coverage (si no lo habías hecho antes): Fig. 8. Instalación del plugin Jacoco Añade las siguientes lineas al bloque post para que se guarde y muestre el informe de cobertura. ... success { junit '**/target/surefire-reports/TEST-*.xml' archiveArtifacts 'target/*.jar' jacoco(execPattern: 'target/jacoco.exec') (1) recordCoverage(tools: [[parser: 'JACOCO']], (2) id: 'jacoco', name: 'JaCoCo Coverage', sourceCodeRetention: 'EVERY_BUILD', qualityGates: [ [threshold: 60.0, metric: 'LINE', baseline: 'PROJECT', unstable: true], [threshold: 60.0, metric: 'BRANCH', baseline: 'PROJECT', unstable: true]]) } ... 1 Añade el informe Coverage Trend 2 Añade el informe Coverage Tras la construcción de nuevo del proyecto, verás la gráfica de los resultados de los test y debajo la gráfica de evolución de cobertura: Fig. 9. Informe de cobertura en el dashboard Haciendo clic sobre la gráfica accedes a los detalles: Fig. 10. Detalle de de cobertura Para mantener y aumentar la calidad de nuestro código debemos ayudarnos, entre otras herramientas, de técnicas de análisis estático de código. Básicamente, se encargan de buscar defectos en el código sin necesidad de que este se ejecute. En Java una de las más habituales es Checkstyle, aunque hay otras como FindBugs, PMD, y SonarQube que integra a los anteriores. CheckStyle valida el estilo del código respecto al estilo oficial de Java. El proyecto PetClinic tiene configurado el plugin de CheckStyle en el pom.xml: <maven-checkstyle.version>3.3.1</maven-checkstyle.version> ... <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> <version>${maven-checkstyle.version}</version> ... </plugin> ... Para ejectutar CheckStyle en local, ejecuta el comando de maven (mvn) con los siguietnes goals: mvn checkstyle:checkstyle site -DgenerateReports=false Tras la ejecución, en la carpeta target/site/ verás el archivo checkstyle.html: Fig. 11. Informe de CheckStyle Sería labor del equipo de desarrollo revisar los errores detectados y tratar de corregirlos, siempre que realmente supongan una mejora para la calidad del código. Para ejecutar y visualizar el informe de CheckStyle en Jenkins: Instalar el plugin Warnings Next Generation. Añadir al pipeline un nuevo stage con la siguiente descripción: stage ('Analysis') { steps { // Warnings next generation plugin required sh \"mvn checkstyle:checkstyle site -DgenerateReports=false\" recordIssues enabledForFailure: true, tool: checkStyle() } } Tras la construcción, el pipeline tiene una nueva fase y además en el menú tenemos acceso al informe de CheckStyle. Fig. 12. Pipeline con la nueva fase de Análisis Fig. 13. Detalles del informe de CheckStyle Saber más…​ Si estás interesado en profundizar en este tema, te recomiendo integrar SonarQube con Jenkins, ya que SonarQube realiza un análisis mucho más detallado de la calidad y seguridad del código, realizando tanto análisis estático de código (CheckStyle y otros), como de análisis de seguridad (vulnerabilidades), y definiendo lo que denomina Quality Gates que permiten definir condiciones que se deben cumplir basadas en los valores de las métricas del proyecto (por ejemplo, que la cobertura de código sea mayor del 80%). Puedes encontrar mucha documentación online sobre cómo hacerlo: Instalar SonarQube como aplicación o como contenedor Docker (recomendado) Instalar el plugin SonarQube Scanner for Jenkins Configurar SonarQube Scanner for Jenkins Añadir al pipeline la fase de análisis de Sonar (Declarative pipeline example:). Más info de Sonar en pipeline: SonarQube Scanner for Jenkins Además, Si tu proyecto está en un repositorio público en GitHub, puedes ahorrarte tener que instalar tu propio SonarQube utilizando SonarCloud, el servicio de SonarQube en la nube (SaaS) gratuito para proyectos públicos, con el que evitas tener que instalar y mantener tu propio SonarQube. Para lanzar el análisis de Sonar con maven: Genera el login TOKEN Ejecuta los goals de maven: clean verify sonar:sonar -Dsonar.login=$SONAR_LOGIN_TOKEN Incluso puedes configurar SonarCloud y Jenkins para que analizar los pull request de tu repositorio y conocer el resultado del análisis de Sonar antes de hacer el merge del pull request. Para desplegar la aplicación PetClinic en la instancia de despliegue vamos a copiar sobre ella el archivo JAR y a continuación ejecutaremos en ella la orden de java para ponerla en marcha: Copia este nueva fase en tu pipeline, sustituyendo DEPLOY_MACHINE por la IP o el nombre DNS de tu instancia: stage('Deploy'){ steps { sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"mkdir -p ~/spring-petclinic\" (1) scp -i ~/.ssh/id_rsa_deploy $WORKSPACE/target/*.jar ubuntu@DEPLOY_MACHINE:~/spring-petclinic (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"if pgrep java; then pkill java; fi\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DEPLOY_MACHINE \"nohup java -jar ~/spring-petclinic/*.jar > ~/spring-petclinic/yourservice.log 2>&1 &\" (4) ''' } } 1 Crea la carpeta spring-petclinic dentro de la carpeta HOME del usuario ubuntu en la máquina de despliegue 2 Copia con scp el archivo .jar, que se ha generado tras la construcción con maven, en la máquina de despligue 3 Detiene el proceso java si existe de un despliegue anterior. 4 Ejecuta la aplicación java empaquetada en el .jar, en background y con nohup, que hace que el proceso siga funcionando incluso si el usuario que lo inició cierra la sesión. De esta manera finaliza el comando ssh y el proceso sigue funcionando, es decir, la aplicación PetClinic estará desplegada y funcionando. Tras ello abre la máquina de despliegue en el puerto 8080, y verás la aplicación PetClinic funcionando. Fig. 14. Homepage PetClinic Referencias: How to build on Jenkins and publish artifacts via ssh with Pipelines","title":"PetClinic","component":"despliegue-continuo","version":"0.25.0","name":"java-petclinic","url":"/despliegue-continuo/0.25.0/java-web-app/java-petclinic.html","titles":[{"text":"Construcción y ejecución en local","hash":"_construcción_y_ejecución_en_local","id":1},{"text":"Creación del Pipeline para PetClinic","hash":"_creación_del_pipeline_para_petclinic","id":2},{"text":"Informe de Cobertura de código","hash":"_informe_de_cobertura_de_código","id":3},{"text":"Análisis estático de código: Checkstyle","hash":"_análisis_estático_de_código_checkstyle","id":4},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":5}]},"30":{"id":30,"text":"Creamos el primer proyecto de Jenkins. Comprueba que Jenkins puede llamar a Docker. Para ello crea un nuevo proyecto tipo freestyle. Fig. 1. Nuevo proyecto, freestyle En la sección Build Steps, añade un nuevo paso, Ejecutar linea de comandos (shell) . Pega estos comandos: whoami git --version java -version docker -v Guarda los cambios. Haz clic sobre Build now. Haz clic sobre la bolita verde para ver el la salida por consola. Fig. 2. Build now. Resultado del build Fig. 3. Salida por consola Por consola se visualiza el resultado de ejecutar los comandos dentro del contenedor. Como puedes ver, git y java están instalados, venían ya en la imagen jenkins:lts de la que hemos partido en la definición del Dockerfile. Además, docker también está disponible, se ha instalado correctamente mediante la definición incluida en el Dockerfile. La ejecución finaliza correctamente, con el mensaje Finished: SUCCESS, por ello la bolita verde. De forma predeterminada, Jenkins ejecuta los proyectos sobre el nodo principal (main), que es el nodo (contenedor o máquina virtual) donde se ejecuta el propio Jenkins. Puedes consultar los nodos disponibles en Jenkins en la sección Administrar Jenkins > Nodos. Fig. 4. Nodos disponibles en Jenkins Hasta ahora no hemos configurado otros nodos ni clouds donde ejecutar los proyectos, así que por defecto se ejecutan en el principal. Creamos el primer proyecto de Jenkins tipo pipeline. Vamos a darle el nombre hello-maven-pipeline-on-master-node. Este pipeline se ejecutará sobre el nodo (agent) master, es decir, sobre el mismo contenedor que está ejecutando Jenkins. Copia la siguiente definición de pipeline en el bloque Pipeline, Pipeline script. pipeline { agent any tools { maven 'Default Maven' (1) } stages { stage('Build') { steps { sh ''' java -version mvn -v ''' (2) } } } } 1 Utiliza la instalación de Maven que hemos hecho en la sección anterior, y le dimos el nombre Default Maven. 2 En la shell ejecutará los comandos para mostrar las versiones de Java y Maven. Haz clic sobre Build now, y visualiza la consola. Como parte de la salida, se debe visualizar algo así (puede que los números de versiones varíen): [Pipeline] sh + java -version openjdk version \"17.0.10\" 2024-01-16 OpenJDK Runtime Environment Temurin-17.0.10+7 (build 17.0.10+7) OpenJDK 64-Bit Server VM Temurin-17.0.10+7 (build 17.0.10+7, mixed mode) + mvn -v Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/Default_Maven Java version: 17.0.10, vendor: Eclipse Adoptium, runtime: /opt/java/openjdk Default locale: en, platform encoding: UTF-8 OS name: \"linux\", version: \"6.5.0-1014-gcp\", arch: \"amd64\", family: \"unix\" Lanzar las construcciones de proyectos en el nodo principal puede acarrear problemas de seguridad. De hecho, Jenkins (dependiendo de la versión) avisa de que esta configuración es inadecuada, y recomienda configurar agentes independientes donde lanzar las ejecuciones de los proyectos. Fig. 5. Aviso de evitar ejecuciones en el nodo máster de Jenkins La alternativa es que el pipeline se ejecute, en lugar de en el nodo principal, en un nodo tipo \"agente\" que se creará ex profeso a partir de un contenedor Docker disponible de DockerHub. A continuación creamos el segundo proyecto de Jenkins tipo pipeline. Vamos a darle el nombre hello-maven-pipeline-on-container-node pipeline { agent { docker { image 'maven:3.9-eclipse-temurin-21-alpine' (1) args '-v $HOME/.m2:/root/.m2' (2) } } stages { stage('Build') { steps { sh ''' java -version mvn -v ''' } } } } 1 Elige entre las imágenes de Maven disponibles. En este caso, se ha elegido la versión 3.9 con Java 21, que es distinta a la que hemos instalado en el nodo principal. 2 Mapea el volumen del host $HOME/.m2 donde se almacenan las dependencias de Maven, para que estén disponibles en el contenedor, eliminando así la necesidad de volver a descargarlas en sucesivas ejecuciones. Te dará error al construir el proyecto. [Pipeline] sh + docker inspect -f . maven:3.9-eclipse-temurin-21-jammy permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/maven:3.9-eclipse-temurin-21-jammy/json\": dial unix /var/run/docker.sock: connect: permission denied El motivo es que en la máquina Jenkins, sobre el S.O. host, hay que abrir permisos en el socket de Docker para que desde dentro del contenedor Jenkins permita crear otros contenedores hermanos. Para ello, mediante el terminal ssh modifica los permisos así: sudo chmod 666 /var/run/docker.sock Tras ello deben construirse correctamente. La nueva salida será algo así: [Pipeline] sh + java -version openjdk version \"21.0.2\" 2024-01-16 LTS OpenJDK Runtime Environment Temurin-21.0.2+13 (build 21.0.2+13-LTS) OpenJDK 64-Bit Server VM Temurin-21.0.2+13 (build 21.0.2+13-LTS, mixed mode, sharing) + mvn -v Apache Maven 3.9.6 (bc0240f3c744dd6b6ec2920b3cd08dcc295161ae) Maven home: /usr/share/maven Java version: 21.0.2, vendor: Eclipse Adoptium, runtime: /opt/java/openjdk Default locale: en_US, platform encoding: UTF-8 OS name: \"linux\", version: \"6.5.0-1014-gcp\", arch: \"amd64\", family: \"unix\" Para que tras reiniciar la máquina se mantengan los permisos del socket de Docker: Crea el archivo /etc/rc.local, y añade el siguiente contenido: #!/bin/sh -e chmod 666 /var/run/docker.sock Por último, dale los permisos adecuados al archivo /etc/rc.local: sudo chmod 755 /etc/rc.local Tras ello reinicia la máquina. sudo reboot -h now Tras ello, comprueba que el socket de Docker tiene los permisos adecuados: $ ls -la /var/run/docker.sock srw-rw-rw- 1 root docker 0 Mar 2 19:24 /var/run/docker.sock No olvides que abrir permisos aL archivo /var/run/docker.sock supone ciertos problemas de seguridad: Avoid workarounds like this which could be a big potential security threat. The result of your chmod practically gives all local users read and write permissions to the docker-socket which allows anyone to interfere with your docker images. (fuente). Otros ejemplos similares con contenedores NodeJS están disponibles en la documentación de Jenkins Es habitual tener varias tecnologías en un mismo proyecto. Por ejemplo, un repositorio puede tener tanto un back-end basado en Java como un front-end basado en JavaScript. Combinar Docker y Pipeline permite usar diferentes agentes en diferentes fases (stages) del pipeline. Crea un nuevo pipeline `hello-pipeline-multiple-containers`con el siguiente contenido: pipeline { agent none stages { stage('Back-end') { agent { docker { image 'maven:3.9-eclipse-temurin-21-alpine' args '-v $HOME/.m2:/root/.m2' } } steps { sh 'mvn --version' } } stage('Front-end') { agent { docker { image 'node:20.11.1-alpine3.19' } } steps { sh 'node --version' } } } } Fig. 6. Pipeline con varios contenedores como agentes Para automatizar el despliegue sobre la instancia que tenemos creada para ello, deberás permitir que Jenkins ejecute comandos sobre la máquina de despliegue a través de SSH. Para ello, la instancia Jenkins debe poder conectarse a la instancia de despliegue mediante una conexión SSH basada en autenticación por pareja de claves pública/privada, que ha demostrado ser más seguro sobre la autenticación estándar de nombre de usuario/contraseña. Fig. 7. Esquema de despliegue con Jenkins Para ello, los pasos que se detallan a continuación permiten: generar una nueva pareja de claves que usaremos para el despliegue, copiar la clave pública generada en la instancia de despliegue, y por último probar que la conexión se realiza correctamente. Ejecuta los siguientes pasos: Conecta por SSH a la máquina Jenkins: ssh ubuntu@instancia-jenkins Fig. 8. Conexión SSH a la instancia Jenkins Crea la carpeta donde se va a guardar la nueva pareja de claves: mkdir /home/ubuntu/jenkins_home/.ssh Crea una pareja de claves ssh de despliegue: ssh-keygen -t rsa -b 4096 Cuando pida el nombre, escribe el nuevo nombre id_rsa_deploy junto con la ubicación donde Jenkins va a buscar las claves de forma predeterminada, que es: /home/ubuntu/jenkins_home/.ssh/id_rsa_deploy Por último, deja la contraseña en blanco (pulsa ENTER): Enter passphrase (empty for no passphrase): Esto crea la clave privada en /home/ubuntu/jenkins_home/.ssh/id_dsa_deploy y una clave pública asociada en /home/ubuntu/jenkins_home/.ssh/id_dsa_deploy.pub. Esta nueva pareja de claves la usaremos exclusivamente para el despliegue de nuestros proyectos. Al haberla guardado en la carpeta /home/ubuntu/jenkins_home/ los archivos están accesibles dentro del contenedor de Jenkins, porque como recordarás, al lanzar el contenedor Jenkins esa carpeta del host la habíamos mapeado con la carpeta /var/jenkins_home del contenedor. Fig. 9. Pareja de claves id_rsa_deploy Muestra el contenido de la clave pública: cat /home/ubuntu/jenkins_home/.ssh/id_rsa_deploy.pub Copia el contenido: con el ratón, selecciona el contenido de la clave, desde “ssh-rsa” hasta el final, y pulsa ENTER (o CTRC+C) Fig. 10. Copia el contenido de id_rsa_deploy.pub Debido a que algunos terminales añaden saltos delinea al copiar texto desde el terminal, como ocurre con cloud shell de GCP, es recomendable copiar el contenido de la clave pública en cualquier editor de texto \"plano\" (Notepad++, Sublime, VS Code, etc) y eliminar los saltos de línea, si los hubiera. Ahora pégalo en tu PC, lo necesitaremos más adelante. Desconecta de la máquina Jenkins: exit Conecta por ssh a la instancia de despliegue Fig. 11. Conexión SSH a la instancia Jenkins Edita el archivo authorized_keys: nano /home/ubuntu/.ssh/authorized_keys Ese archivo ya tenía una clave pública, la correspondiente a tu pareja de claves personal que inyectamos en la creación de la instancia con Terraform (por eso has podido conectar por ssh a esa máquina). Pega el contenido de la clave pública de despliegue. Ahora debe tener 2 claves públicas. Ya puedes desconectar de la instancia de despliegue. Vamos a probar que funciona: Fig. 12. Conexión SSH desde la instancia Jenkins a la de despliegue Conecta de nuevo a la instancia jenkins y prueba la conexión ssh a la instancia de despliegue. Recuerda que puesto que Jenkins se está ejecutando como un contenedor, debes probar la conexión ssh desde dentro del contenedor: docker exec -it jenkins-docker ssh ubuntu@instancia_deploy -i /var/jenkins_home/.ssh/id_rsa_deploy En el comando anterior: docker exec -it indica ejecutar un comando desde dentro del contenedor jenkins-docker es el nombre del contenedor ssh ubuntu@instancia_deploy -i /var/jenkins_home/.ssh/id_rsa_deploy es el comando a ejecutar en el contenedor. En este caso, ssh con el parámetro -i …​ para indica la clave privada que debe usar para conectar. Antes de ejecutar el comando, modifica instancia_deploy por el nombre DNS de tu instancia de despliegue. Recuerda que /var/jenkins_home es la carpeta HOME del usuario jenkins dentro del contenedor, y jenkins es el usuario del contenedor que ejecuta Jenkins. La primera vez que realizas una conexión ssh desde un usuario en una máquina origen a una destino, te pregunta si deseas almacenar la clave de host de destino en la lista de hosts conocidos (known_hosts) de tu máquina origen. Contesta: yes Fig. 13. Validar la clave del host: yes Si todo ha ido bien, la conexión se ha debido realizar. Puedes comprobarlo porque en el prompt te aparecerá que estás en la máquina de despliegue. Sal con exit. Ahora el prompt te muestra que estás en la máquina Jenkins. Fig. 14. Conexión correcta Si no ha correcto, verifica que la ruta al archivo de la clave privada es correcta, y que el nombre de la máquina de despliegue es correcto. Comprueba que la clave de host de la máquina de destino (despliegue) se ha guardado en la máquina origen (jenkins) en el archivo ~/.ssh/known_hosts del usuario que ha ejecutado el comando ssh, en nuestro caso, del usuario jenkins de contenedor: docker exec -it jenkins-docker cat /var/jenkins_home/.ssh/known_hosts Fig. 15. Contenido del archivo known_hosts en el contenedor Puedes comprobarlo también mostrando el contenido de known_hosts en el archivo /home/ubuntu/jenkins_home/.ssh/known_hosts. Ambos coinciden, recuerda que hay un volumen mapeado entre la carpeta local /home/ubuntu/jenkins_home y la carpeta del contenedor /var/jenkins_home. Fig. 16. Contenido del archivo known_hosts en la carpeta local Ahora que la conexión por SSH entre la máquina Jenkins y la máquina de despliegue es correcta, vamos a hacer que Jenkins automatice la ejecución de comandos sobre la máquina de despliegue: entra en Jenkins y añade el siguiente comando al proyecto hello_docker existente, sustituyendo MAQUINA_DEPLOY por el nombre DNS de la máquina de despliegue. ssh -i ~/.ssh/id_rsa_deploy ubuntu@MAQUINA_DEPLOY \"pwd && ls -la\" Como aclaración de este comando: el parámetro -i indica la clave privada que queremos usar en la conexión ssh \"pwd && ls -la\" son comandos básicos que ejecuta sobre la máquina remota. Hemos indicado estos comandos simplemente para probar que la conexión se realiza correctamente. Fig. 17. Modificación del proyecto para que ejecute un comando sobre la instancia de despliegue Tras ejecutar el proyecto en Jenkins, el resultado debe ser correcto. Fig. 18. Salida por consola. El comando se ha ejecutado correctamente.","title":"Primeros ejemplos","component":"despliegue-continuo","version":"0.25.0","name":"first-projects","url":"/despliegue-continuo/0.25.0/jenkinsdocker/first-projects.html","titles":[{"text":"Creación del primer proyecto freestyle","hash":"_creación_del_primer_proyecto_freestyle","id":1},{"text":"Creación del primer pipeline","hash":"_creación_del_primer_pipeline","id":2},{"text":"Nodos de ejecución","hash":"_nodos_de_ejecución","id":3},{"text":"Pipeline sobre el nodo principal","hash":"_pipeline_sobre_el_nodo_principal","id":4},{"text":"Pipeline con un contenedor como agente","hash":"_pipeline_con_un_contenedor_como_agente","id":5},{"text":"Usando varios contenedores como agente","hash":"_usando_varios_contenedores_como_agente","id":6},{"text":"Conexión con la máquina de despliegue","hash":"_conexión_con_la_máquina_de_despliegue","id":7},{"text":"Generar la nueva pareja de claves de despliegue","hash":"_generar_la_nueva_pareja_de_claves_de_despliegue","id":8},{"text":"Copiar la clave pública a la instancia de despliegue","hash":"_copiar_la_clave_pública_a_la_instancia_de_despliegue","id":9},{"text":"Prueba de la conexión desde jenkins a despliegue","hash":"_prueba_de_la_conexión_desde_jenkins_a_despliegue","id":10}]},"31":{"id":31,"text":"Objetivos Vamos a usar la primera instancia para instalar Jenkins. En lugar de realizar una instalación completa sobre el sistema operativo, utilizando los paquetes de Ubuntu, tal como se hace en la asignatura Herramientas y Métodos de Ingeniería del Software, de 3º del Grado en Ingeniería Informática, aquí vas a desplegar Jenkins como un contenedor de Docker. Después, crearemos los primeros ejemplos de proyectos en jenkins, tanto un proyecto libre como un proyecto de tipo pipeline. Además, realizaremos la configuración para poder conectar con la instancia de despliegue que nos permitirá automatizar el despliegue sobre ella.","title":"Primeros pasos con Jenkins ","component":"despliegue-continuo","version":"0.25.0","name":"index","url":"/despliegue-continuo/0.25.0/jenkinsdocker/index.html","titles":[]},"32":{"id":32,"text":"A continuación se describe cómo desplegar Jenkins como un contenedor de Docker. La imagen pública del contenedor de Jenkins está disponible en DockerHub, con el nombre jenkins/jenkins:lts. Esta imagen genérica necesita instalarle algunos plugins y herramientas. En concreto, hay que instalarle el propio Docker para permitir que Jenkins ejecute tareas de docker, como por ejemplo docker build para construir imágenes de contenedores. Esto es lo que se conoce como Docker-in-Docker (dind), y hay que gestionarlo correctamente cuando se trata de entornos de CI. Por tanto, vamos a crear una imagen personalizada del contenedor de Jenkins basándonos en la imagen pública e instalándo Docker dentro del contenedor. Lo más adecuado es que construyas la imagen de Jenkins con Docker en la propia máquina donde lo vamos a ejecutar, es decir en la instancia de jenkins. Conecta por ssh a la instancia de jenkins. Recuerda que el usuario de la instancia es ubuntu. Por tanto, la conexión a la misma consistiría en ejecutar desde el terminal el comando ssh ubuntu@MAQUINA_JENKINS sustituyendo MAQUINA_JENKINS por la IP o el nombre DNS de la misma. Si utilizas la shell de la consola web de Google Cloud para conectar por ssh a la máquina, verás que estarás conectado como tu usuario de la UAL, del tipo abc123. En este caso RECUERDA sustituir ubuntu por tu usuario abc123 en todos los comandos y ejemplos de este documento. Realiza las actividades conectando a las instancias bien con el usuario ubuntu de la máquina, o bien si usas la shell de la consola web de Google Cloud, con tu usuario de la UAL (del tipo abc123). Se consistente, es decir, hazlo siempre con el mismo usuario. Se DESACONSEJA ejecutar los comandos como root mediante sudo su. Solamente en caso de que sea absolutamente necesario, ejecuta los comandos con sudo delante para tener permisos de root puntualmente. Si haces las actividades como root, tendrás problemas de permisos de acceso los archivos y carpetas, como por ejemplo a las claves SSH. Prueba que docker se ejecuta correctamente. Si la ejecución de docker ps -a te da error, prueba a ejecutarlo con sudo. Para evitar tener que escribir siempre sudo delante de cualquier comando docker`, ejecuta: sudo usermod -aG docker $USER Tras ello, reinicia la sesión. Prueba ahora sin sudo, a partir de ahora llama siempre a docker sin sudo. Más info aquí Crea una carpeta jenkins-docker y crea el archivo Dockerfile. Usa el siguiente Dockerfile (descrito en esta entrada de medium.com: Jenkins Building Docker Image and Sending to Registry. Dockerfile FROM jenkins/jenkins:lts USER root RUN apt-get update && \\ apt-get -y install apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common && \\ curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \\ add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\ $(lsb_release -cs) \\ stable\" && \\ apt-get update && \\ apt-get -y install docker-ce RUN apt-get install -y docker-ce RUN usermod -a -G docker jenkins USER jenkins Construimos la imagen a partir del Dockerfile: docker build --tag ualjjcanada/jenkins-docker:1.0 . (1) 1 Sustituye ualjjcanada/ por tu usuario de Dockerhub si estás registrado, si no simplemente no lo pongas. Fig. 1. docker build de Jenkins con Docker Fig. 2. docker build successful Comprueba que la imagen ha sido creada, y está disponible en tu máquina: docker image ls Fig. 3. docker image ls Opcionalmente podemos publicar nuestra imagen personalizada en DockerHub, o alternativamente el Google Container Registry (deprecado) o en Google Artifact Registry. Más adelante se describirá cómo hacerlo. Ejecutamos el contenedor a partir de la imagen creada previamente. Crear una carpeta para jenkins_home que configuraremos como volumen para que los datos de Jenkins se guarden fuera del contenedor. mkdir ~/jenkins_home chmod 777 ~/jenkins_home Ejecutamos el contenedor con docker run: docker run -d --name jenkins-docker -p 80:8080 -p 50000:50000 -v /var/run/docker.sock:/var/run/docker.sock -v ~/jenkins_home:/var/jenkins_home --restart always ualjjcanada/jenkins-docker:1.0 Los parámetros de docker run son: --name jenkins-docker: nombre que le asignamos al contenedor -p 80:8080: jenkins se ejecutará en el puerto 80 en el host, que está mapeado al puerto 8080 del contenedor -v /var/run/docker.sock:/var/run/docker.sock: volumen para compartir el docker socket (usado en la máquina host) con el contenedor. -v ~/jenkins_home:/var/jenkins_home: mapea la carpeta local ~/jenkins_home con la carpeta /var/jenkins_home del contenedor. En el contenedor, la carpeta HOME del usuario jenkins es /var/jenkins_home, donde Jenkins guarda todos los archivos que utiliza. Si se tira el contenedor o se actualiza, no se pierden los datos ya que se guardan \"fuera\" del contenedor. --restart always: inicia el contenedor cuando se enciende la instancia. ualjjcanada/jenkins-docker:1.0: imagen del contenedor a ejecutar, la que hemos construido en el paso anterior. Comprueba que el contenedor está ejecutándose con docker ps Fig. 4. docker ps A continuación se muestran los pasos a realizar en el inicio y configuración básica de Jenkins. Además, se describe la instalación de algunos plugins adicionales. Conectamos a la IP/URL de la instancia con el navegador web. Aparecerá la ventana para introducir el password inicial. Para ver el password ejecuta: cat /home/ubuntu/jenkins_home/secrets/initialAdminPassword Fig. 5. Contraseña inicial de Jenkins Selecciona Install suggested plugins. Fig. 6. Install suggested plugins Tras unos minutos, introduce los datos del usuario administrador de Jenkins. Introduce un nombre de usuario y contraseña. Acepta el nombre de dominio de la máquina. Si aun no has registrado el nombre de dominio, lo puedes hacer más tarde en la configuración general de Jenkins. Jenkins está listo. Fig. 7. Bienvenida a Jenkins Vamos a instalar varios plugins: NodeJs, GitHub integration, Docker Pipeline, Warnings (Next Generation), JaCoCo, Coverage, Google Container Registry Auth. Haz clic en Manage Jenkins > Manage Plugins. En la pestaña Available busca Github integration, seleccionalo y pulsa en Download now and install after restart. Fig. 8. Instalación del plugin Github integration Repite los pasos para los plugins el resto de plugins. Fig. 9. Instalación del plugin NodeJS Marca Restart Jenkins para completar la instalación. Tras unos segundos, vuelve a iniciar sesión y tendrás los plugins instalados. Fig. 10. Reiniciar para completar la instalación Tras la instalación del plugin NodeJS, es necesario realizar la siguiente configuración: Ve a Manage Jenkins, Global Tool configuration. En NodeJS, añade un instalador (se recomienda la última versión lts disponible). Dale por nombre \"nodejs lts\" y marca instalar automáticamente. Guarda los cambios con Save. Fig. 11. Configuración de herramienta NodeJS De la misma forma, instala la última versión de Maven. En este caso dale el nombre Default Maven y marca instalar automáticamente. Fig. 12. Configuración de herramienta Maven","title":"Instalación y configuración de Jenkins","component":"despliegue-continuo","version":"0.25.0","name":"install-jenkins","url":"/despliegue-continuo/0.25.0/jenkinsdocker/install-jenkins.html","titles":[{"text":"Construcción del contenedor Jenkins","hash":"_construcción_del_contenedor_jenkins","id":1},{"text":"Publicación de la imagen en un registro de contenedores","hash":"_publicación_de_la_imagen_en_un_registro_de_contenedores","id":2},{"text":"Ejecución del contenedor de Jenkins","hash":"_ejecución_del_contenedor_de_jenkins","id":3},{"text":"Configuración básica de Jenkins","hash":"_configuración_básica_de_jenkins","id":4},{"text":"Instalación de plugins adicionales","hash":"_instalación_de_plugins_adicionales","id":5},{"text":"Configuración las Tools en Jenkins","hash":"_configuración_las_tools_en_jenkins","id":6}]},"33":{"id":33,"text":"Objetivos Como construir y desplegar apliaciones web Node.js con Jenkins Dockerizar la aplicacion Node.js para facilitar su despliegue Desplegar la aplicación Node.js tanto de forma nativa como mediante contenedor Definir un pipeline para automatizar las etapas más habituales en CI/CD","title":"Aplicación en Node.js","component":"despliegue-continuo","version":"0.25.0","name":"index","url":"/despliegue-continuo/0.25.0/node-app/index.html","titles":[]},"34":{"id":34,"text":"Para realizar el despliegue de la app Hola mundo en Node.js como un contenedor, primero tenemos que dockerizar la aplicación. Una vez construido el contenedor, habrá que publicar la imagen de contenedor en un registro como Google Container Registry, y por último ejecutar el contenedor en la instancia de despliegue. A continuación se describe cómo crear un contenedor Docker de la aplicación Node.js. Los pasos se realizan en local, y al final configuraremos el pipeline de Jenkins para que se realicen automáticamente. Para crear el contendedor de Docker que empaquete la aplicación Node.js, vamos a definir el siguiente archivo Dockerfile que debe estar en la carpeta raíz del proyecto: Dockerfile FROM node:10-alpine # Create app directory WORKDIR /usr/src/app # Install app dependencies # A wildcard is used to ensure both package.json AND package-lock.json are copied # where available (npm@5+) COPY package*.json ./ RUN npm install # If you are building your code for production # RUN npm ci --only=production # Bundle app source COPY . . EXPOSE 3000 CMD [ \"npm\", \"start\" ] El Dockerfile es muy sencillo, contiene los pasos básicos para ejecutar una aplicación en un contenedor. Crea además un archivo .dockerignore en la misma carpeta que tu Dockerfile con el siguiente contenido: node_modules/ .git/ .gitignore npm-debug.log Puedes construir la imagen del contenedor: docker build -t <your username>/nodeapp . Tras ello, ejecuta: docker images. La imagen debe aparecer en la lista de imágenes de Docker en tu equipo: Prueba la ejecución del contenedor en local: docker run -p 3000:3000 -d --name hello-node <your username>/nodeapp Comprueba que se ha iniciado la aplicación en http://localhost:3000. Comprueba que el contenedor está ejecutándose con docker ps Detén el contenedor con docker stop <ID> Comprueba que ya no está ejecutándose, pero el contenedor sigue existiendo, lo puedes ver con docker ps -a Podrías volver a arrancarlo con docker start <ID>, pero en su lugar, elimina el contenedor con docker rm <ID> La imagen sigue existiendo, puedes verlo con docker images Una vez creada la imagen con docker build y probada su ejecución con docker run, el siguiente paso será publicar la imagen en un registro de contenedores, mediante docker push. De nuevo vamos a usar Google Cloud Container Registry. Para poder hacer push debemos tener permisos de escritura, y por tanto debemos autenticarnos en el servicio Container Registry. Este proceso ya se hizo en la para el ejemplo de Java en la sección Autenticación en Container Registry. Ahora, simplemente comprueba que mantienes el login del Container Registry. Comprueba el login al registro: docker login https://gcr.io Fig. 1. Comprobar docker login Si docker login te da error, revisa los pasos de la sección anterior de Autenticación en Container Registry. No es necesario que vuelvas a generar el archivo de credenciales, simplemente copia ese archivo .json en el proyecto actual y úsalo para hacer login. En tal caso, no olvides añadir el archivo de credenciales al .gitignore para evitar publicar en GitHub tus credenciales. Etiqueta el contenedor con el nombre completo incluyendo la referencia a Container registry (gcr.io). Primero definimos una variable de entorno con el nombre de nuestro proyecto GCP, y luego etiquetamos la imagen ya construida con un nuevo nombre completo del registro de contenedores: GOOGLE_CLOUD_PROJECT=cnsa-2022-user123 docker tag <your username>/nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Comprueba que se ha etiquetado correctamente Fig. 2. Imagen etiquetada A continuación, publica la imagen en el registro con docker push docker push gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Comprueba que se ha publicado correctamente. Fig. 3. Lista de imágenes en Container Registry La imagen del contenedor nodeapp ya está disponible en el registro privado de nuestro proyecto GCP. Utilizando nuestras credenciales podremos hacer docker pull de dicha imagen para descargarla en cualquier máquina con docker, y ejecutarlo con docker run. docker run -p 3000:3000 -t --name nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Conecta a la instancia de despliegue para ejecutar el contenedor. Antes vamos a comprobar el login al registro. En la máquina de despliegue ya habíamos copiado el archivo de credenciales .json con premisos sobre Container Registry. A continuación se recuerdan los comandos necesarios para ello. # Conectamos a la máquina de despliegue ssh ubuntu@DNS_MAQUINA_DEPLOY # Autenticamos docker contra Container Registry cat keyfile.json | docker login -u _json_key --password-stdin https://gcr.io # ejecutamos el contenedor desde gcr.io docker run -p 8080:3000 -t --name nodeapp gcr.io/$GOOGLE_CLOUD_PROJECT/nodeapp:1.0 Hemos publicado el contenedor en el puerto 8080 ya que es el que está abierto en las reglas del firewall de nuestro proyecto GCP. Es posible que la ejecución del contenedor de un error, porque el puerto 8080 ya esté en uso: Error starting userland proxy: listen tcp 0.0.0.0:8080: bind: address already in use. Para solucionarlo, bien detén el proceso o contenedor java que está corriendo con la aplicación PetClinic del ejemplo anterior. O bien utiliza el puerto 80 que también está abierto. A continuación, vamos a automatizar en Jenkins todo el proceso: la construcción de la imagen del contenedor, la publicación de la imagen en el registro, y el despliegue del contenedor. Los plugins de Jenkins necesarios ya los tenemos configurados el ejemplo en Java. Definimos un nuevo proyecto en Jenkins de tipo pipeline, con el nombre nodeapp-Docker-abc123 sustituyendo abc123 por nuestro nombre de usuario. Son necesarios 3 fases (stages) en el pipeline: build image, push image, y deploy container. Comenzamos por la construcción de la imagen: pipeline { agent any environment { CONTAINER_REGISTRY = 'gcr.io' GOOGLE_CLOUD_PROJECT = 'cnsa-2022' CREDENTIALS_ID = 'cnsa-2022-gcr' } tools { // In Global tools configuration, install Node configured as \"nodejs\" nodejs \"nodejs\" } stages { stage(\"Git Checkout\") { steps { // checkout scm git 'https://github.com/ualcnsa/nodeapp.git' } } stage('Install dependencies') { steps { sh 'npm install' } } stage('Test') { steps { sh 'npm run test-jenkins' } post { success { junit '**/test*.xml' } } } stage(\"Build image\") { steps { script { dockerImage = docker.build( \"${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/nodeapp:${env.BUILD_ID}\", \"-f Dockerfile .\" ) } } } } } Para probar que la imagen del contenedor se ha creado bien, añade la siguiente fase que hace un despliegue \"local\" en la propia máquina de Jenkins, es decir, ejecuta un contenedor basado en la imagen que acabamos de crear: stage(\"Run image locally\") { steps { sh \"docker stop nodeapp || true && docker rm nodeapp || true\" (1) sh \"docker run -d -p 8080:3000 -t --name nodeapp ${env.CONTAINER_REGISTRY}/${env.GOOGLE_CLOUD_PROJECT}/nodeapp:${env.BUILD_ID}\" (2) } } 1 Por si ya se ha ejecutado el pipeline anteriormente, es necesario comprobar si el contenedor nodeapp ya se está ejecutando, y en tal caso pararlo con docker stop y eliminarlo con docker rm 2 Con docker run ejecuta el contenedor nodeapp a partir de la imagen recién construida. Para que el pipeline pueda finalizar y el contenedor siga ejecutándose, se añade -d que indica modo detached que ejecuta el contenedor en background. Tras ello, la aplicación debe estar accesible en el puerto 8080 en tu máquina de Jenkins. Para asegurarnos que la aplicación se está ejecutando bien, debemos problarlo \"manualmente\". Para automatizar esta prueba, lo adecuado sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test image') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed\"' } } El siguiente paso es publicar la imagen en el registro. Primero, las credenciales en Jenkins para poder hacer push en Container Registry ya están creadas del ejemplo anterior (Si tienes algún problema, consulta la sección correspondiente del ejemplo de Java) Define la fase para publicar la imagen del contenedor: stage(\"Push image\") { steps { script { docker.withRegistry('https://'+ CONTAINER_REGISTRY, 'gcr:'+ GOOGLE_CLOUD_PROJECT) { dockerImage.push(\"latest\") dockerImage.push(\"${env.BUILD_ID}\") } } } } Comprueba que se ha publicado correctamente en el registro. Fig. 4. Imagen publicada en Container Registry, etiquetada con el número de build Por último, quedaría el paso de desplegar al entorno de producción: la máquina virtual de despliegue. Los pasos para el despliegue de la nueva imagen del contenedor consistirán en ejecutar los siguientes comandos sobre la máquina de despliegue: docker stop del contenedor por si estuviera ejecutándose docker rm para eliminar el contenedor existente, que puede estar basado en una imagen de una versión anterior docker run que primero hará un docker pull de la imagen actualizada del registro. Lo lanzaremos en el puerto 80 ya que el 8080 está ocupado por el despliegue que hicimos sin contenedor. Estas acciones debemos añadirlas a un stage del pipeline de Jenkins que se encargará de desplegar el nuevo contenedor automáticamente. En el siguiente código, sustituye DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia de despliegue. También puedes definirla como una variable de entorno al inicio del pipeline. stage('Deploy to Production') { steps{ sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -q --filter name=nodeapp | grep . ; then docker stop nodeapp ; fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"if docker ps -a -q --filter name=nodeapp | grep . ; then docker rm -fv nodeapp ; fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@DNS_DEPLOY_INSTANCE \"docker run -d -p 8080:3000 -t --name nodeapp ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/nodeapp:latest\" (2) ''' } } 1 Ejecuta en la instancia de despliegue el comando que detiene y elimina el contenedor nodeapp en caso de que ya se estuviera ejecutando 2 Ejecuta en la instancia de despliegue el comando para ejecutar el contenedor basado en la última versión de la imagen, lanzándolo en background y con -d para que el pipeline finalice y el contenedor permanezca en ejecución. La aplicación nodeapp debe estar accesible en producción, en el puerto 8080 en la instancia de despliegue. Para asegurarnos, debemos problarlo \"manualmente\". Para automatizar esta prueba en producción, lo adecuado de nuevo sería realizar unos tests end-to-end, con Selenium. Esto se explicará en otra actividad, dedicada al testing. stage('End-to-end Test on Production') { // Ideally, we would run some end-to-end tests against our running container. steps{ sh 'echo \"End-to-end Tests passed on Production\"' } } Por último, es una buena práctica eliminar las imágenes que se van generando en cada build, para liberar espacio en la máquina de Jenkins. Primero paramos y eliminamos el contenedor local, luego eliminamos la imagen. stage('Remove Unused docker image') { steps{ // input message:\"Proceed with removing image locally?\" (1) sh 'if docker ps -q --filter name=nodeapp | grep . ; then docker stop nodeapp && docker rm -fv nodeapp; fi' (2) sh 'docker rmi ${CONTAINER_REGISTRY}/${GOOGLE_CLOUD_PROJECT}/nodeapp:$BUILD_NUMBER' (3) } } 1 Pide confirmación al usuario, que tendrán que pulsar un botón de Proceed para continuar la ejecución del pipeline 2 Para y elimina el contenedor local 3 Elimina la imagen de contenedor en local con docker rmi para liberar espacio. El pipeline completo, con todas sus fases, debe quedar así: Fig. 5. Pipeline completo Referencias Dockerizing a Node.js web app @ Node.js Docs A simple docker setup for hello world nodejs application @ Medium Dockerizing a Node.js Web Application @ SemaphoreCI Top 4 Tactics To Keep Node.js Rockin’ in Docker","title":"Hola mundo en Node.js con Docker","component":"despliegue-continuo","version":"0.25.0","name":"node-hello-docker","url":"/despliegue-continuo/0.25.0/node-app/node-hello-docker.html","titles":[{"text":"Creación del Dockerfile","hash":"_creación_del_dockerfile","id":1},{"text":"Publicación de la imagen en el registro","hash":"_publicación_de_la_imagen_en_el_registro","id":2},{"text":"Despliegue en VM","hash":"_despliegue_en_vm","id":3},{"text":"Integración y despliegue continuos con Jenkins","hash":"_integración_y_despliegue_continuos_con_jenkins","id":4}]},"35":{"id":35,"text":"A continuación se muestra un ejemplo de integración y despliegue continuos en Jenkins de un proyecto Node.js. Los pasos a realizar son similares al ejemplo anterior con Java, el decir, el pipeline tendrá las mismas fases; eso si, adaptaremos las ordenes o comandos a ejecutar a la tecnología Node.js. Al igual con el ejemplo anterior en Java, en primer lugar trabajaremos con la aplicación Node.js sin dockerizar, y después dockerizaremos la aplicación. La mayoría de los pasos siempre los ejecutaremos primero en local, y tras comprobar que funcionan correctamente, los automatizaremos en Jenkins. La implementación de la integración y despliegue continuos permitirá que, para cada cambio de código en el repositorio, Jenkins será notificado y descargará los cambios, instalará las dependencias y ejecutará los tests. Si los tests pasan correctamente, Jenkins desplegará la aplicación en el servidor de despliegue. Y si fallan, se notificará al desarrollador. Nos vamos a basar en el proyecto HelloWorld en Node.js, disponible en https://github.com/ualcnsa/nodeapp. Necesitarás poder hacer cambios sobre el mismo, así que crea un fork y trabaja con tu fork a partir de ahora. Al realizar el fork, no olvides quitar la marca copy the master branch only Fig. 1. Fork del repo nodeapp Tras clonar tu fork a local, haz checkout del tag v0.1 en una nueva rama cuyo nombre sea tu usuario de la UAL, para que tus archivos estén en el estado inicial de este tutorial: git checkout tags/v0.1 -b <branch> (1) 1 Usa tu nombre de usuario de la UAL como nombre de la rama. Veamos los archivos que componen la aplicación: El archivo package.json contienen información básica de la aplicación y las dependencias: express: Node framework jest: framework de testing para Node.js (existen numerosos framework de testing en Node.js, como Jasmine, Mocha, Tape, etc.) supertest: proporciona abstracción a alto nivel para testing HTTP package.json { \"name\": \"nodeapp\", \"version\": \"1.0.0\", \"description\": \"\", \"main\": \"src/main.js\", \"scripts\": { \"start\": \"node src/main\", \"test\": \"jest\" }, \"author\": \"\", \"license\": \"ISC\", \"dependencies\": { \"express\": \"^4.17.3\" }, \"devDependencies\": { \"jest\": \"^27.5.1\", \"supertest\": \"^6.2.2\" } } Comprueba que los archivos main.js, app.js y app.test.js, así como la carpeta services, estén dentro de una carpeta src. Si no es así, crea la carpeta src y muevelos dentro. Revisa el conetenido de package.json para que sea idéntico al mostrado aquí. Fig. 2. Archivos y carpetas en el estado inicial Para instalar las dependencias ejecuta npm install. El archivo principal del proyecto src/main.js se encarga de arrancar la aplicación en el puerto 3000. src/main.js const app = require(\"./app\"); const port = 3000 app.listen(port, () => { console.log(`Example app listening on port ${port}`) }) El archivo src/app.js es un sencillo hola mundo con dos rutas: / devuelve \"Hello World!\" /:nameToSalute devuelve \"Hello \" + nameToSalute + \"!\" mediante el servicio HelloWordService src/app.js const express = require('express') const HelloWordService = require( \"./services/hello-world\" ); const app = express() app.get('/', (req, res) => { res.send('Hello World!') }) app.get('/:nameToSalute', (req, res) => { res.send(new HelloWordService().greet(req.params.nameToSalute)); }) module.exports = app El archivo src/services/hello-world.js es un servicio de hola mundo. src/services/hello-world.js class HelloWordService { /** * @description Create an instance of HelloWordService */ constructor () { } /** * @description Says Hello to a given name * @param nameToHello {string} Name to greet * greet name * @returns a string that starts with Hello */ greet ( nameToHello ) { return \"Hello \" + nameToHello+\"!\"; } } module.exports = HelloWordService; Para ejecutar la aplicación, ejecuta: npm start Puedes ver la aplicación en el navegador accediendo a http://localhost:3000 o a http://localhost:3000/nombre Test unitarios y end2end En primer lugar tenemos un test unitario para probar el servicio HelloWorldService que comprueba que la salida sea la esperada. Se guardará en la carpeta src/services/ con el nombre hello-world.test.js. src/services/hello-world.test.js const HelloWordService = require(\"./hello-world\"); describe(\"HelloWordService Test\", () => { const helloWordService = new HelloWordService(); it(\"says 'Hello John!' to greet John\", () => { expect(helloWordService.greet(\"John\")).toBe(\"Hello John!\"); }); }); En segundo lugar tenemos varios test end2end. El primer test va a navegar a la raiz de la aplicación (/) y verificar que la página responde con el texto esperado Hello World!. El segundo test navega a /John y comprueba que la página responde con Hello John!. src/app.test.js const request = require(\"supertest\"); const app = require(\"./app\"); describe(\"GET /\", () => { //navigate to root and check the the response is \"Hello World!\" it('responds with \"Hello World!\"', (done) => { request(app).get('/').expect('Hello World!', done); }); }); describe(\"GET /John\", () => { //navigate to /John and check the the response is \"Hello John!\" it('responds with \"Hello John!\"', (done) => { request(app).get('/John').expect('Hello John!', done); }); }); Para ejecutar los tests: npm test Fig. 3. npm test Si todo funciona correctamenente, haz commit y push de tu rama. Definimos un nuevo proyecto tipo Pipeline. Añadimos la descripción del pipeline: pipeline { agent any tools { // In Global tools configuration, install Node configured as \"Node.js\" Node.js \"Node.js\" } stages { stage('Cloning Git') { steps { git branch: 'MI_RAMA', url: 'https://github.com/MI_USUARIO/nodeapp' (1) } } stage('Install dependencies') { steps { sh 'npm install' } } stage('Test') { steps { sh 'npm test' } } } } 1 Cambia el nombre de la rama y la URL del repositorio por las tuyas. El resultado sera: Fig. 4. Nodeapp pipeline La evolución de las métricas del proyecto es uno de los indicadores que habitualmente muestra Jenkins como feedback para los desarrolladores. Vamos a publicar los resultados de los test en un gráfico. Editamos package.json y añadimos el script test-jenkins para generar los resultados de los test en formato xml que usará Jenkins para generar el gráfico, y la dependencia necesaria para ello: package.json: jenkins-test y dependencia mocha-junit-reporter ... \"scripts\": { \"start\": \"node src/main\", \"test\": \"jest\", \"test-jenkins\": \"jest --reporters=default --reporters=jest-junit\", (1) }, \"jest-junit\": { (2) \"outputDirectory\": \"./coverage/\", \"outputName\": \"test.results.xml\", \"usePathForSuiteName\": \"true\" }, ... \"devDependencies\": { \"jest\": \"^27.5.1\", \"jest-junit\": \"^13.0.0\", (3) \"supertest\": \"^6.2.2\" } 1 Añadimos el script test-jenkins que define los formatos de salida de los test: el normal y usando el plugin jest-junit para formato xml. 2 Configuración para jest-junit que genera los resultados de los test en el archivo ./coverage/test.results.xml 3 Dependencia a jest-junit que permite generar los resultados de los test en xml. Podemos probar en local, llamamos a la ejecución de los test y generación del xml: npm run test-jenkins. Añade al .gitignore la carpeta /coverage, ya que su contenido se generará al lanzar los tests y no se debe guardar en el repositorio. Guarda los cambios en el repositorio, para que estén actualizados cuando los lea Jenkins. Actualizamos el pipeline, la fase Test: stage('Test') { steps { sh 'npm run test-jenkins' } post { success { junit '**/test*.xml' } } } Guardamos los cambios. Tras un par de ejecuciones del build, se visualiza el gráfico Test Result Trend: Fig. 5. Publicado el gráfico de tendencia de los test Configura en GitHub un nuevo Webhook para que tras cada cambio de código en el repositorio, Jenkins sea notificado y lance automáticamente la construcción del pipeline: En GitHub, seleccionamos el repositorio sobre el que queremos activar la construcción en Jenkins y hacemos clic en: Settings > WebHooks > Add webhook En Payload URL: http://{YOUR_JENKINS_URL}/github-webhook/ Fig. 6. Nuevo Webhook Finalmente, en la configuración del proyecto en Jenkins, en la sección Build Trigers, marca la opción GitHub hook tirigger from GITScm polling Fig. 7. Activar el Webhook en build trigers A partir de ahora, cuando el repositorio en GitHub reciba un push notificará a Jenkins para que lance la construcción automáticamente. Como ya sabemos, la cobertura de código nos va a ofrecer un valor directamente relacionado con la calidad de los juegos de prueba. Para obtener la cobertura y publicarla en Jenkins, debemos hacer: Añadir a package.json un script para cobertura que permite obtener la cobertura con Jest. Modificar la fase Test de Jenkins para que llame al script de cobertura y publique, en el bloque post, el informe de cobertura generado. 1.Modifica package.json, añadiendo el nuevo script y la dependencia: package.json: cobertura ... \"scripts\": { ... \"coverage-jenkins\": \"jest --reporters=default --reporters=jest-junit --coverage --coverageReporters=text --coverageReporters=html --coverageDirectory=./coverage/\" }, ... Podemos probar en local, llamamos a la ejecución del script: npm run coverage-jenkins. Fig. 8. Ejecución de cobertura Como resultado, en la carpeta coverage del proyecto se ha generado el informe de cobertura. Fig. 9. Informe de cobertura Fig. 10. Informe de cobertura en html Modifica el pipeline de Jenkins, la fase Test: stage('Test') { steps { sh 'npm run coverage-jenkins' (1) } post { success { junit '**/test*.xml' publishHTML target: [ (2) allowMissing : false, alwaysLinkToLastBuild : false, keepAll : true, reportDir : './coverage/', reportFiles : 'index.html', reportName : 'Coverage Report' ] } } } 1 Llama al nuevo script que calcula la cobertura 2 Publica el informe de cobertura Instala el HTML Publisher plugin en Jenkins El resultado en Jenkins, debe aparece un enlace nuevo en el menú de la izquierda: Fig. 11. Enlace al informe de cobertura en html Para poder visualizar correctamente el Coverage Report, hay que cambiar la configuración de seguridad de Jenkins predeterminada, que es muy restrictiva para prevenir de archivos HTML/JS maliciosos que podrían instalarse como parte de un Plugin. Para modificar la configuración, abre la consola de scritps (Manage Jenkins / Script Console), y ejecuta estas líneas: System.setProperty(\"hudson.model.DirectoryBrowserSupport.CSP\", \"sandbox; default-src 'none'; img-src 'self'; style-src 'self' 'unsafe-inline'; \") System.getProperty(\"hudson.model.DirectoryBrowserSupport.CSP\") Fig. 12. Script Console: permisos para visualizar el informe de cobertura Tras ello ya podrás visualizar correctamente el informe de cobertura. Pero ten en cuenta que cada vez que reinicies Jenkins esta configuración se pierde y vuelve a la configuración predeterminada. El código JavaScript es dinámicamente tipado, por lo que en lugar de usar el compilador para realizar el análisis estático de código, como ocurre en lenguajes como Java, las formas más comunes de análisis estático en JavaScript son formatters y linters. Formatters o formateadores, escanean y reformatean rápidamente los archivos de código. Uno de los más populares es Prettier, que como cualquier buen formateador, corregirá automaticamente las inconsistencias que encuentre. Linters pueden trabajar en aspectos de formato pero también otros problemas más complejos. Se basan en una serie de reglas para escanear el código, o descripciones de comportamientos a vigilar, y muestran todas las violaciones que encuentran. El más popular para JavaScript es ESLint. Vamos a probar ESLint. Instala con npm: npm install eslint eslint-config-prettier eslint-plugin-prettier --save-dev A continuación, inicializa un archivo de configuración: npx eslint --init Y responde a las preguntas: Fig. 13. ESLint init Se habrá creado un archivo .eslintrc.json, que incluirá esta línea: { \"extends\": \"eslint:recommended\" (1) } 1 Habilita las reglas predeterminadas En lugar del anterior fichero, puedes utilizar un fichero .eslintrc.js como el siguiente, que contiene recomendaciones para express: module.exports = { env: { es6: true, node: true }, extends: ['prettier'], plugins: ['prettier'], globals: { Atomics: 'readonly', SharedArrayBuffer: 'readonly' }, parserOptions: { ecmaVersion: 2018, sourceType: 'module' }, rules: { 'prettier/prettier': 'error', 'class-methods-use-this': 'off', 'no-param-reassign': 'off', camelcase: 'off', 'no-unused-vars': ['error', { argsIgnorePattern: 'next' }] } }; Añade a package.json un script para lint y la dependencia a ESLint, y comprueba el resto de dependencias: package.json: lint y dependencia a ESLint \"scripts\": { ... \"lint\": \"eslint src/**/*.js -f checkstyle -o coverage/eslint-result.xml\" }, ... \"devDependencies\": { ... \"eslint\": \"^8.57.0\", \"eslint-config-prettier\": \"^9.1.0\", \"eslint-plugin-prettier\": \"^5.1.3\", \"prettier\": \"^3.2.5\", } ... Lánzalo en local: npm run lint -s El parámetro -s se utiliza para que no muestre mensajes de error. Habrá generado el archivo coverage/eslint-result.xml en formato similar al informe de CheckStyle para poder importarlo correctamente en Jenkins. En Jenkins, añade una nueva fase Analysis en el pipeline, en la que llames a lint y publiques el informe generado por ESLint con el formato CheckStyle. stage('Analysis'){ steps{ sh 'npm run lint -s' } post { always{ // record lint issues found, also, fail the build if there are ANY NEW issues found recordIssues enabledForFailure: true, // blameDisabled: true, tools: [esLint(pattern: '**/eslint-result.xml')], qualityGates: [[threshold: 1, type: 'NEW']] } } } El enlace al informe de ESLint no aparece en la página principal del proyecto, en el menú de enlaces, sino que tienes que hacer clic en el número del último build, y en la nueva página ya aparece el enlace: Fig. 14. Enlace al informe ESLint No te preocupes si la fase de análisis que acabas de añadir falla (está en rojo). Es así porque cuando ESLint detecta un error, finaliza con error (EXIT 1). Para evitarlo, añade ` || true` al comando sh que se ejecuta en la fase de análisis: sh 'npm run lint -s' || true Tras ello, la nueva ejecución del pipeline se ejecutará correctamente. Fig. 15. Fase ESLint Para desplegar la aplicación hello world en la instancia de despliegue vamos a clonar el repositorio y a continuación ejecutaremos en ella la orden de Node para ponerla en marcha. Recuerda que ya he hemos realizado una configuración previa sobre la instancia de despliegue, que constituyen los prerrequisitos para esta sección: Con anterioridad ya instalamos Node.js en la instancia de despliegue. También habíamos copiado la clave pública de despliegue para que Jenkins, que tiene la clave privada asociada, pueda hacer ssh y ejecutar comandos sobre ella. Como requisito adicional, para ayudarnos a lanzar npm start desde Jenkins, como un proceso demonio en background, usaremos forever. Debes instalar forever en la instancia de despliegue: npm install forever -g Una vez revisados los prerrequisitos, añade la fase de despliegue al pipeline en Jenkins: Copia este nueva fase en tu pipeline, sustituyendo DNS_DEPLOY_INSTANCE por el nombre DNS de tu instancia (también puedes definirla como una variable de entorno), y usa el nombre del repositorio git adecuado: environment { DNS_DEPLOY_INSTANCE = \"deploy.jenkinscnsa2024.tech\" // \"your-deploy-instance DNS\" } ... stage('Deploy'){ steps { sh ''' ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"if [ ! -d 'nodeapp' ] ; then git clone https://github.com/MI_CUENTA/nodeapp.git else cd nodeapp git pull origin master git checkout MI_RAMA fi\" (1) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.11.1/bin/ && if pgrep node; then forever stopall; fi\" (2) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.11.1/bin/ && cd nodeapp && npm install\" (3) ssh -i ~/.ssh/id_rsa_deploy ubuntu@${DNS_DEPLOY_INSTANCE} \"export PATH=$PATH:/home/ubuntu/.nvm/versions/node/v20.11.1/bin/ && cd nodeapp && PORT=8080 forever start index.js\" (4) ''' } } 1 Clona el repositorio (tu fork) si no existe en la máquina de despliegue, si existe hace un pull y checkout de tu rama de trabajo. 2 Detiene la ejecución de forever si existe de un despliegue anterior, usando forever stop. 3 Instala las dependencias 4 Ejecuta la aplicación con forever start en el puerto 8080, que ejecuta el proceso en background como demonio. Revisa en la máquina de despliegue la ruta de node y npm con el comando whereis node y whereis npm, y modifica la ruta del PATH en el script si es necesario. Referencias Running Node.js on a Virtual Machine codelab How to set up CI/CD Pipeline for a node.js app with Jenkins","title":"Hola mundo en Node.js","component":"despliegue-continuo","version":"0.25.0","name":"node-hello","url":"/despliegue-continuo/0.25.0/node-app/node-hello.html","titles":[{"text":"Construcción y ejecución en local","hash":"_construcción_y_ejecución_en_local","id":1},{"text":"Creación del pipeline en Jenkins","hash":"_creación_del_pipeline_en_jenkins","id":2},{"text":"Webhook para construcción automática","hash":"_webhook_para_construcción_automática","id":3},{"text":"Informe de cobertura","hash":"_informe_de_cobertura","id":4},{"text":"Análisis estático de código","hash":"_análisis_estático_de_código","id":5},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":6}]},"36":{"id":36,"text":"Existen distintas opciones respecto al entorno en el que realizar las actividades propuestas. Tendrás que conectar a las instancias en GCP, lanzar Terraform, lanzar contenedores Docker, etc. Dependiendo del sistema operativo de tu máquina local y de tus gustos personales, te recomiendo alguna las siguientes alternativas: Windows: es recomendable usar un terminal basado en Linux, por ejemplo Git Bash (https://git-scm.com). Linux y Mac: el terminal del S.O incluye todas las herramientas básicas necesarias (git, ssh, etc). Cloud Shell de Google Cloud: la consola web de Google Cloud proporciona la herramienta Cloud Shell que permite trabajar cómodamente contra GCP desde cualquier navegador web y cualquier S.O. Recuerda que Cloud Shell tiene una cuota de uso, con un límite de número de horas semanales (168h): Fig. 1. Cuota de Cloud Shell Para ver tu cuota semanal, haz clic en Información de la sesión y, luego, en Cuota de uso. Aparecerá un cuadro de diálogo en el que se mostrarán las horas restantes en tu cuota, la cantidad total de horas en ella y la fecha y hora en que se restablecerá la cuota. A continuación se explican las herramientas que debes configurar si estás usando tu máquina local, aunque probablemente algunas ya las tendrás instaladas. Si optas por trabajar en Cloud Shell, seguramente también estarán ya instaladas. En general evita usar el usuario root salvo que sea estrictamente necesario, para no generar problemas de permisos sobre los archivos y carpetas cuando estés usando un usuario distinto de root. Utiliza sudo delante de los comandos estrictamente cuando requieras permisos de administrador, pero evita hacerlo de forma predeterminada (evita sudo su). Para comenzar a trabajar, será necesario tener instalados en la máquina local las siguientes herramientas: Terraform, Google Cloud CLI. Se presupone que ya se tiene instalado un entorno de desarrollo como Visual Studio Code, y una pareja de claves SSH personal en la carpeta HOME del usuario (~). ~/.ssh/ ├── id_rsa (1) └── id_rsa.pub (2) 1 clave privada 2 clave pública Recuerda que ~/ hace referencia la carpeta HOME del usuario en la máquina local: En Windows: C:\\Users\\USUARIO En Mac: /Users/USUARIO En Linux: /home/USUARIO Creación de pareja de claves SSH Si aun no tienes pareja de claves SSH, ejecuta el siguiente comando en tu terminal para crear una nueva pareja de claves SSH, usando el email como etiqueta: ssh-keygen -t rsa -b 4096 -C \"your_email@inlumine.ual.es\" Cuando te pregunte Enter a file in which to save the key presiona Enter para aceptar el nombre de archivo predeterminado (id_rsa) Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter] A continuación te pedirá una contraseña o passphrase, de nuevo presiona Enter. Enter passphrase (empty for no passphrase): [Press enter] Presiona Enter de nuevo: Type passphrase again: [Press enter] Consulta si la pareja de claves se ha creado correctamente: ls -al ~/.ssh Además, se debe disponer de crédito en GCP, proporcionado por el profesor, y darse de alta en Github Student Education Pack. A continuación se describen en detalle estos requisitos previos. Si ya dispones de crédito en GCP, podrás usarlo ahora. En cualquier caso, para esta asignatura disponemos de un nuevo cupón educativo de 50$ por estudiante, que no necesita tarjeta de crédito para su activación. Actívalo en la dirección que encontrarás en el Aula Virtual de la asignatura, en la sección Area de Contenido > Cupones de GCP, usando tu email @inlumine.ual.es. Accede a la Consola de Google Cloud y crea un nuevo proyecto GCP con el nombre cnsa2024-abc123 (indicando el año correcto y sustituyendo abc123 por tu nombre de usuario), y dale permisos al profesor. Para ello, revisa las instrucciones que vimos en la asignatura del primer cuatrimestre. El crédito del cada cupón dura 12 meses, así que este nuevo proyecto asígnalo a la cuenta de facturación de la asignatura del primer cuatrimestre, ya que es mejor consumir ese crédito porque caduca antes. Si se consume el crédito del primer cupón, simplemente tendrás que cambiar tu proyecto cnsa2024-abc123 a la nueva cuenta de facturación del nuevo cupón. Terraform es una aplicación que se distribuye en un único archivo ejecutable. Las instrucciones de instalación de Terraform está disponibles aquí. En Windows se recomienda instalarlo con Chocolatey. Así que si previamente has instalado Chocolatey, simplemente abre una ventana de comandos (cmd) con permiso de administrador y ejecuta: choco install terraform -y Cierra el terminal o la ventana de comandos, abre una nueva con permisos normales y comprueba que se ha instalado correctamente: terraform -v La salida debe mostrar la version instalada: $ terraform -v Terraform v1.1.6 on windows_amd64 Google Cloud Command Line Interface está disponible para su instalación aquí. En Windows se recomienda instalarlo con Chocolatey: abre una ventana de comandos (cmd) con permiso de administrador y ejecuta: choco install gcloudsdk -y Para poder usar servicios adicionales, como DNS gratuito, debes darte de alta en Github Student Education Pack. Si ya dispones de una cuenta de GitHub, y no quieres crear una cuenta nueva, simplemente debes añadir tu email @inlumine.ual.es a la lista de emails de tu cuenta actual. Para ello, sigue las instrucciones. Tras añadir tu email, haz clic en el enlace Get the pack.","title":"Prerrequisitos","component":"despliegue-continuo","version":"0.25.0","name":"index","url":"/despliegue-continuo/0.25.0/prerrequisitos/index.html","titles":[{"text":"1. Entorno de desarrollo","hash":"_entorno_de_desarrollo","id":1},{"text":"2. Cupones educativos Google Cloud","hash":"_cupones_educativos_google_cloud","id":2},{"text":"3. Terraform","hash":"_terraform","id":3},{"text":"4. GCloud CLI para GCP","hash":"_gcloud_cli_para_gcp","id":4},{"text":"5. Github Student Education Pack","hash":"_github_student_education_pack","id":5}]},"37":{"id":37,"text":"Computación en la Nube, Servicios y Aplicaciones. Joaquín Cañadas <jjcanada@ual.es>, Francisco García <paco.garcia@ual.es> Version 0.22.0-beta.1 Introducción a los tests de aceptación de aplicaciones web con Selenium. Objetivos Comenzar a crear tests de aceptación de aplicaciones web con Selenium IDE. Crear y desplegar una plantilla de aplicación web que implemente un Login y Registro de usuario. Exportar los test de Selenium IDE a Selenium Webdriver y ejecutar en Eclipse con distintos navegadores web (cross-browser testing). Ejecutar los test de Selenium en Jenkins utilizando el navegador en modo headless.","title":"Pruebas de aceptación con Selenium","component":"selenium-testing","version":"0.22.0","name":"index","url":"/selenium-testing/0.22.0/index.html","titles":[]},"38":{"id":38,"text":"Objetivos Comenzar a crear tests de aceptación de aplicaciones web con Selenium IDE. Probar una aplicación funcional que implemente la autenticación y registro de usuarios. Diseñar los casos de prueba para los escenarios de éxito y los escenarios de error. Realización y entrega La realización de estas actividades se realizará en equipo. La entrega será mediante el envío de un informe y el acceso al profesor a los repositorios y servicios configurados, para la revisión y evaluación de los mismos. Para comenzar a realizar las pruebas necesitamos una aplicación web funcional. En este caso práctico vamos a probar una aplicación que implemente la autenticación y registro de usuarios, así que vamos a comenzar por implementar esta funcionalidad. Tenemos dos alternativas: elegir una plantilla de proyecto que ya implemente la funcionalidad deseada, o bien hacerlo nosotros mismos. Aquí tienes una (o varias) plantilla(s) de aplicación web, en distintas tecnologías, que implementan un login y registro de usuarios. Proyecto Autenticación de usuarios - Opciones SailsJs Web App. Extensible project with auth, login, & password recovery. Node JS + Sails JS framework Elege una de las plantillas. Si lo deseas puedes usar alguna otra plantilla en otra tecnología, así que toma una decisión y comentalo con el profesor antes para validar que implemente la funcionalidad básica requerida. En local, crear el proyecto basado en la plantilla. Probar que funciona. Algunos fallos típicos en los tutoriales de web de autenticación (login) Como alternativa, si ya has desarrollado o estás desarrollando un proyecto similar en alguna tecnología que conozcas, y que implemente: un login de usuario, un registro de usuario, y una modificación del perfil del usuario logueado puedes usarlo en lugar de alguna de alguna de las plantillas propuestas. Pero asegúrate de que tu proyecto es funcional, es decir, implementa las 3 características indicadas y estas funcionan, ya que el objetivo es probarlas. Y además tu proyecto debe implementar los casos de error mediante los mensajes de validación oportunos. Si tu proyecto no es funcional, o no implementa esas 3 características o los casos de error, entonces mejor usa una plantilla de las propuestas. Crear en Selenium los test cases necesarios para probar, tanto escenarios correctos como escenarios de error, de las siguientes funcionalidades: Registro de usuario (Caso correcto) Registro de usuario (Casos incorrectos) Login de usuario (Caso correcto) Login de usuario (Casos incorrectos) Editar el perfil de usuario logueado (caso correcto) Editar el perfil de usuario logueado (casos incorrectos) Cambio de contraseña de usuario logueado (Caso correcto) Cambio de contraseña de usuario logueado (Casos incorrectos) Guardar los test cases en una test suite (formato .side). Puesto que para realizar una prueba exhaustiva, cubriendo todos los posibles escenarios, el número de casos de prueba es elevado, la forma de trabajar es dividir las funcionalidades entre los miembros del equipo y así repartir el trabajo: Una persona que haga los tests de Registro de usuario + Editar perfil, y otra los de login de usuario + cambio de contraseña. Para que el test de registro de usuario lo podamos ejecutar repetidamente sin que nos de el error de \"usuario ya existe\", tenemos que usar un email aleatorio en cada ejecución del test. Eso se consigue definiendo una variable en Selenium, llamado al comando execute script, escribiendo la función de JavaScript que genere ese email aleatorio, y guardándolo en una variable que luego usaremos en en paso que escribe el valor en el campo email del registro. El paso sería del test case de Selenium IDE es: Command: execute script Target: return \"ual-\" + Math.floor(Math.random()*1500000)+\"@ual.es\"` Value: emailramdon Fig. 1. Generación de un email aleatorio En aquellos formularios en los que se debe introducir una dirección de email y el campo está definido como tal en HTML5 mediante <input type=\"email\" …​>, el valor introducido se valida en el navegador de manera que cuando el valor introducido no es un email válido muestra un pop-up con el texto \"Introduzca una dirección de correo.\" Este tipo de pop-ups no se pueden capturar con el menú contextual de Selenium IDE (botón derecho sobre el texto a validar), por lo que debemos usar un método alternativo. Fig. 2. Pop-up de validación en HTML5: email incorrecto Para ello, tras hacer click sobre el botón de enviar, debemos usar el comando execute script de Selenium IDE para que guarde el valor del atributo validationMessage del campo tipo email en una variable, y a continuación comprobamos el valor almacenado en esa variable. El resultado sería tal que así: Fig. 3. Comandos en Selenium IDE para validar el mensaje de email incorrecto. 1 Guarda el contenido del atributo validationMessage del campo con id email-address en la variable message: Command: execute script Target: return document.getElementById(\"email-address\").validationMessage Value: message. 2 Muestra la variable message en el log de Selenium IDE. 3 Validación de que el valor de message es el esperado. El comando execute script permite acceder a los elementos y propiedades del DOM del documento HTML, y llamar a los métodos del mismo, en concreto en el ejemplo llama a getElementById(\"fieldId\"). En caso de que el elemento no se pueda identificar por su id, como alternativa se usar el método getElementsByName(\"fieldName\"), pero ten en cuenta que getElementsByName devuelve una colección de objetos HTMLCollection en lugar de un único objeto, por lo que si queremos acceder al primer elemento de la colección simplemente tenemos que añadir la posición entre corchetes: getElementsByName(\"fieldName\")[0]. Otras alternativas son getElementsByClassName(), y getElementsByTagName(). Esta solución también se puede aplicar a otros campos de HTML5 que también crean este tipo de pop-ups para la validación, por ejemplo los campos que se establecen como requeridos, o con una longitud mínima y máxima, definidos por ejemplo así: <input type=\"password\" required minlength=\"6\" maxlength=\"10\"/> Fig. 4. Pop-up de validación en HTML5: contraseña requerida Fig. 5. Comandos en Selenium IDE para validar contraseña vacía. Fig. 6. Pop-up de validación en HTML5: contraseña demasiado corta Otro ejemplo son los campos de fecha definidos como <input type=\"date\" …​> Fig. 7. Pop-up de validación en HTML5: fecha incorrecta Los mensajes de validación son distintos en cada navegador (Firefox, Chrome), tenlo en cuenta a la hora de definir el assert. También hay que considerar el idioma en el que esté configurado el navegador (En Firefox, en su repostorio selecciona el idioma deseado y busca el archivo dom/chrome/dom/dom.properties, y en Chrome lo encontrarás en el archivo del idioma, en español content_strings_es.xtb). Table 1. Validación de email incorrecto en Firefox y Chrome Como acabamos de ver en el punto anterior, puede ser necesario que en función del navegador que estemos usando o del idioma en que esté configurado dicho navegador, nuestro assert deba validar un mensaje u otro. Selenium IDE permite añadir sentencias de control de flujo como condicionales y bucles. El siguiente ejemplo usa de la propiedad navigator.userAgent que incluye información del navegador que se está utilizando en la ejecución del test. execute script | return navigator.userAgent | valor_navigatoruserAgent if | ${navigatoruserAgent}.includes(\"Firefox\") assert | message | Ajústese al formato solicitado: 8 character password. end | if | ${navigatoruserAgent}.includes(\"Chrome\") assert | message | Utiliza un formato que coincida con el solicitado end | Fig. 8. Uso de condicional para distinguir entre navegadores De igual forma, la propiedad navigator.language puede ayudarnos a identificar el idioma del navegador: es_ES para español, en_GB para inglés. La aplicación que hemos probado localmente, debemos ponerla \"en producción\", es decir, desplegarla en la nuve para que esté disponible por nuestros usuarios (ficticios). Dependiendo de la plantilla elegida, el despliegue será distinto. Puedes desplegar en un servicio de contenedores, o bien en una máquina virtual. Los test que hemos creado en el entorno de desarrollo, es decir, en nuestro equipo local, deben adaptarse para que funcionen en entorno de (pre)producción es decir, deben atacar a la aplicación desplegada. Para ello simplemente tendrás que cambiar la URL base. EJERCICIOS (Optativos) Crea los tests necesarios para probar la navegación del primer ejercicio de la asignatura Desarrollo de Aplicaciones Híbridas desplegada en local y/o en la nube.","title":"Caso práctico","component":"selenium-testing","version":"0.22.0","name":"selenium-ide-ejercicios","url":"/selenium-testing/0.22.0/selenium-ide-ejercicios.html","titles":[{"text":"Autenticación y registro de usuarios","hash":"_autenticación_y_registro_de_usuarios","id":1},{"text":"Elige una plantilla","hash":"_elige_una_plantilla","id":2},{"text":"Usa tu propio proyecto","hash":"_usa_tu_propio_proyecto","id":3},{"text":"Creación de los tests Selenium","hash":"_creación_de_los_tests_selenium","id":4},{"text":"Implementación del test Registro de usuario (Caso correcto)","hash":"_implementación_del_test_registro_de_usuario_caso_correcto","id":5},{"text":"Implementación del test de email incorrecto","hash":"_implementación_del_test_de_email_incorrecto","id":6},{"text":"Control de flujo en Selenium IDE","hash":"_control_de_flujo_en_selenium_ide","id":7},{"text":"Desplegar la aplicación en la nube","hash":"_desplegar_la_aplicación_en_la_nube","id":8},{"text":"Adaptar los test a la URL de despliegue","hash":"_adaptar_los_test_a_la_url_de_despliegue","id":9}]},"39":{"id":39,"text":"Selenium es un conjunto de herramientas para llevar a cabo pruebas automatizadas de aplicaciones web. Selenium consta de varias herramientas. Selenium IDE es una extensión para Firefox y para Chrome que registra nuestra actividad en el navegador durante un período determinado; esta actividad se traduce en una serie de comandos que podremos repetir cuantas veces queramos. Cuando sea conveniente, incluiremos aserciones para realizar comprobaciones de que lo que se muestra en la web es realmente lo esperado. Con Selenium IDE podemos grabar casos de prueba o test cases, y agruparlos en juegos de prueba o test suites. Selenium IDE permite exportar los test cases en forma de scripts en muy diversos lenguajes, como Python, Ruby, Java (JUnit), C#, NodeJS (JavaScript), y algunos más, para ser usados en los entornos de prueba habituales usando el siguiente componente de Selenium, llamado Selenium WebDriver. Selenium WebDriver, implementa una API cliente lista para ser usada con tu entorno de testing favorito, que se ejecutará sobre un servidor que gestiona los principales navegadores que tengas instalados para realizar en ellos las pruebas. Es decir, podrás ejecutar las pruebas automáticamente desde tu IDE favorito, por ejemplo Eclipse, en todos los navegadores relevantes, de forma que no se te escape ningún detalle de tu aplicación. Para ello, necesitarás descargar del driver del navegador sobre el que quieres ejecutar las pruebas (además de, por supuesto, tener instalado dicho navegador en tu sistema). Un tercer componentes es Selenium Grid, que permite ejecutar varias instancias del WebDriver de forma paralela, en distintas máquinas con distintas plataformas o sistemas operativos, gestionándolas centralizadamente, lo que acelerará drásticamente los tiempos de prueba. Instala en tu equipo Selenium IDE en Firefox o Chrome. Tras ello, aparecerá el icono en tu navegador. Fig. 1. Icono de Selenium IDE en el navegador Al hacer clic sobre el icono, se abrirá Selenium IDE. Empieza por crear un nuevo proyecto: Fig. 2. Selenium IDE inicio Escribe un nombre al nuevo proyecto de pruebas: Fig. 3. Selenium IDE inicio Introduce la URL base a probar: Fig. 4. Selenium IDE URL base Directamente empieza a grabar las acciones que vayas realizando sobre el navegador: Fig. 5. Selenium IDE grabando Durante tu interacción con la web que estés probando SIEMPRE es necesario ir añadiendo asserts o verificaciones para comprobar que lo que muestra la aplicación corresponde con lo esperado. Para ello utiliza el menú contextual para añadir verificaciones y/o asserts. Fig. 6. Selenium IDE assert text En la ventana de Selenium IDE, puedes ver que se van grabando en los comandos de Selenium los pasos realizados sobre el navegador (clics, entradas de texto, asserts, etc). Fig. 7. Selenium IDE pasos guardados Finaliza la grabación del test en el botón de detener, y dale un nombre al test case creado: Fig. 8. Selenium IDE guardar test case A continuación, dale al play para volver a ejecutar el test: Fig. 9. Selenium IDE detener grabación Siguiendo estos sencillos pasos, puedes grabar tantos casos de prueba como sean necesarios para ejercitar tu aplicación web y verificar que todos escenarios de los casos de uso funcionan correctamente. Recuerda que es necesario crear casos de prueba para: Los escenarios correctos, en los que la aplicación realiza el caso de uso correctamente, tal y como se espera. Los escenarios de error o incorrectos, donde el funcionamiento del caso de uso no es el caso correcto, bien porque los datos introducidos no son adecuados, o faltan, o por cualquier otro motivo. La aplicación en ese caso debería mostrar un mensaje de error de algún tipo y comportarse de manera estable, es decir, que se queda en un estado aceptable y \"no peta\" en esos escenarios incorrectos. Puedes organizar los tests en test suites. Por último, guarda los test en un archivo .side, que está basado en formato JSON.","title":"Comenzando con Selenium","component":"selenium-testing","version":"0.22.0","name":"selenium-ide-intro","url":"/selenium-testing/0.22.0/selenium-ide-intro.html","titles":[{"text":"Introducción a Selenium","hash":"_introducción_a_selenium","id":1},{"text":"Selenium IDE","hash":"_selenium_ide","id":2}]},"40":{"id":40,"text":"Objetivos Ejecutar los test de Selenium JUnit Webdriver en Jenkins utilizando el navegador en modo headless. Diseñar un pipeline con fases en paralelo para la ejecución de los test en cada navegador. Realización y entrega La realización de estas actividades se realizará en equipo. La entrega será mediante el envío de un informe y el acceso al profesor a los servicios configurados, para la revisión y evaluación de los mismos. Selenium WebDriver permite ejecutar los tests de Selenium como tests de JUnit, permitiendo así su ejecución en Eclipse y Jenkins. La ejecución de los tests de Selenium en Jenkins debe hacerse en modo headless ya que la máquina Jenkins no tiene instalada una interfaz gráfica, más comúnmente conocida como X o X11 en Linux. A pesar de ello, podremos hacerlo instalando un entorno de visualización simulado (xvfb). Veamos los pasos necesarios. Lo primero es descargar los drivers de los navegadores en la máquina de Jenkins. En la carpeta JENKINS_HOME (si no recuerdas cual es, la predeterminada es /var/jenkins_home, puedes verla en http://mi-jenkins-url/systemInfo) crea una carpeta selenium-drivers y descarga ahí los drivers de los navegadores Firefox y Chrome para Ubuntu. Para ello, ejecuta los siguientes comandos en la máquina Jenkins. docker exec -it jenkins-docker bash (1) cd JENKINS_HOME=/var/jenkins_home (2) echo $JENKINS_HOME mkdir $JENKINS_HOME/selenium-drivers (3) cd /tmp curl -L https://github.com/mozilla/geckodriver/releases/download/v0.29.1/geckodriver-v0.29.1-linux64.tar.gz -o geckodriver-v0.29.1-linux64.tar.gz tar -C $JENKINS_HOME/selenium-drivers/ -xvf geckodriver-v0.29.1-linux64.tar.gz (4) curl -L https://chromedriver.storage.googleapis.com/90.0.4430.24/chromedriver_linux64.zip -o chromedriver_linux64.zip (5) unzip chromedriver_linux64.zip -d $JENKINS_HOME/selenium-drivers/ (6) ls -la $JENKINS_HOME/selenium-drivers/ (7) 1 Ejecuta una consola en tu contenedor jenkins-docker 2 Declara la variable de entorno JENKINS_HOME 3 Crea la carpeta donde guardar los drivers de los navegadores. Asegúrate que tienes permisos suficientes. Si necesitas usar sudo, deberás de cambiar los permisos y grupos de los archivos al usuario jenkins:jenkins (ver paso 7). 4 Con wget descarga geckodriver para linux en la carpeta home, y con tar -xvf descomprime en la carpeta deseada. 5 Con wget descarga chromedriver para linux en la carpeta home, pero antes revisa la última versión estable de Chrome para Ubuntu y usa la URL de descarga de chromedriver_linux64.zip adecuada para la versión estable de Chrome 6 Con unzip descomprime en la carpeta deseada. Además has tenido que instalar unzip 7 Lista los archivos en la carpeta selenium-drivers. Comprueba que los permisos no son adecuados para que Jenkins pueda lanzar los ejecutables de los drivers. Fig. 1. Permisos de los drivers Instala firefox en tu contenedor Jenkins. También deberás instalar xvfb que hace de entorno de visualización simulado para ejecutar los tests headeless de Selenium. Recuerda que la maquina Jenkins no tiene una interfaz gráfica, así que aunque firefox se va a ejecutar en modo headless, es necesario tener un entorno de visualización simulado, y esto lo proporciona xvfb. Dockerfile FROM jenkins/jenkins:lts USER root RUN apt-get update && \\ apt-get -y install apt-transport-https \\ ca-certificates \\ curl \\ gnupg2 \\ software-properties-common && \\ curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg > /tmp/dkey; apt-key add /tmp/dkey && \\ add-apt-repository \\ \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") \\ $(lsb_release -cs) \\ stable\" && \\ apt-get update && \\ apt-get -y install docker-ce RUN apt-get install -y docker-ce RUN usermod -a -G docker jenkins RUN apt-get -y install xvfb firefox-esr (1) USER jenkins 1 Añadimos la instalación de xvfb y firefox Construimos la imagen a partir del Dockerfile: docker build --tag ualjjcanada/jenkins-docker:1.0 . (1) 1 Sustituye ualjjcanada/ por tu usuario de Dockerhub si estás registrado, si no simplemente no lo pongas. Reinicia el contenedor para aplicar los cambios: docker restart jenkins-docker Crea en Jenkins un nuevo proyecto pipeline. Incluye la fase (stage) con nombre Firefox tests, donde llames a maven. Utiliza xvfb-run que se encarga de iniciar y parar xvfb por ti. xvfb-run mvn test -Dwebdriver.gecko.driver=${JENKINS_HOME}/selenium-drivers/geckodriver El pipeline tendrá esta forma: Jenkinsfile pipeline { agent any environment { DRIVERS_LOC = \"$JENKINS_HOME/selenium-drivers/\" } tools { // Usa aquí el nombre de tu instalación de Maven en Jenkins Tools maven \"Default maven\" } stages { stage('Git clone') { steps{ // Update the URL to your repo git 'https://github.com/tu-usuario/tu-repo-selenium.git' } } stage('Firefox tests') { steps { // Run Maven on xvfb environment display. // Update the path/to/your/pom.xml as necessary sh \"xvfb-run mvn -f path/to/pom.xml clean test -Dwebdriver.gecko.driver=${DRIVERS_LOC}/geckodriver\" } post { // If Maven was able to run the tests, even if some of the test // failed, record the test results success { junit '**/target/surefire-reports/TEST-*.xml' } } } } } Comprueba que en el código de los tests Selenium en JUnit estás usando FirefoxDriver, y modo headless Recuerda que en el código debes comentar las lineas donde se definen las property con las rutas de los drivers. // System.setProperty(\"webdriver.gecko.driver\", \"drivers/geckodriver.exe\"); Publica la gráfica de los tests en un bloque post del pipeline. Fig. 2. Pipeline con la fase Firefox Test Para probar la ejecución con Chrome, debes instalar Chrome en la máquina Jenkins. Para ello sigue los pasos: Instalar Google Chrome en Ubuntu 18.04 LTS desde la línea de comandos (No instales al versión beta, tampoco podrás ejecutarlo, simplemente instalarlo). Después, crea una nueva fase donde llames a los tests con el driver de Chrome. Tendrás que modificar el driver en el código, y llamar a maven con el siguiente parámetro para Chrome Driver: mvn test -Dwebdriver.chrome.driver=${DRIVERS_LOC}/chromedriver Habrás implementado dos alternativas de ejecución en Jenkins de los test de Selenium en modo headless. Sin embargo, el diseño de clases JUnit y uso de los distintos drivers tiene varias desventajas: Para ejecutar con un navegador u otro tenemos que tocar el código fuente y modificar el driver \"a mano\" Esto implica que no se puede lanzar la ejecución en los dos navegadores en el mismo pipeline: o ejecutamos con Firefox o ejecutamos con Chrome. Lo ideal es poder diseñar el pipeline para lanzar en paralelo la ejecución en estos dos, o cuantos navegadores sean necesarios, tal y como se muestra en la siguiente imagen: Fig. 3. Pipeline con ejecución de varios navegadores en paralelo EJERCICIOS (Optativos) Rediseña las clases JUnit con los test de Selenium para poder lanzar los tests bien con Firefox o bien con en Chrome, sin tener que modificar el código fuente, es decir, sin tener que cambiar el driver \"a mano\". Para ello revisa el ejemplo seleniumHMIS21 en su rama master (JUnit 4), y en la rama junit5. Crea dos fases en el pipeline, una para Firefox y otra para Chrome, y configura el pipeline para que se ejecuten en paralelo, usando el bloque parallel (Más info: Jenkins Pipeline Syntax) https://github.com/shailendravaichalkar/Selenium-Maven-Template Mas información sobre Maven con Selenium. Buenas prácticas: Selenium con Java","title":"Tests de Selenium en Jenkins","component":"selenium-testing","version":"0.22.0","name":"selenium-jenkins","url":"/selenium-testing/0.22.0/selenium-jenkins.html","titles":[{"text":"Selenium WebDriver y Jenkins","hash":"_selenium_webdriver_y_jenkins","id":1},{"text":"Configuración","hash":"_configuración","id":2},{"text":"Creación del pipeline en Jenkins","hash":"_creación_del_pipeline_en_jenkins","id":3},{"text":"A partir de aquí es optativo","hash":"_a_partir_de_aquí_es_optativo","id":4},{"text":"Más info","hash":"_más_info","id":5}]},"41":{"id":41,"text":"Objetivos Exportar los test de Selenium IDE a Selenium Webdriver y ejecutarlos en un IDE como Eclipse, con distintos navegadores web (cross-browser testing). Ejecutar los test de Selenium utilizando el navegador en modo headless. Realización y entrega La realización de estas actividades se realizará en equipo. La entrega será mediante el envío de un informe y el acceso al profesor a los servicios configurados, para la revisión y evaluación de los mismos. Selenium WebDriver permite ejecutar los tests de Selenium como tests de JUnit, ofreciendo así la forma de ser ejecutados en Eclipse y Jenkins. Exporta a formato JUnit los tests grabados con Selenium IDE. Si has organizado tus tests en test suites, podrás exportar cada test suite a una clase .java en donde cada test case será un método de test de la clase. Si no, tendrás que hacerlo cada test case uno por uno, ya que por ahora Selenium IDE no permite exportarlos todos a la vez. Fig. 1. Exportar test case Fig. 2. Exportar formato JUnit Al exportar, marca las dos opciones que permiten que se guarde como comentarios el comando de Selenium IDE que da origen a cada instrucción de WebDriver. Guarda los archivos .java en una carpeta. A continuación los importaremos en Eclipse. En el momento de escribir este documento, Selenium IDE exporta los tests en formato JUnit 4. Veamos a continuación los pasos necesarios para su ejecución. En Eclipse, crea un nuevo proyecto Java. Crea la carpeta fuente test. Crea un nuevo paquete en la carpeta test de nombre org.ual.cnsa.nombreEquipo (sustituyendo nombreEquipo por el nombre de tu equipo). Ahí guarda los archivos .java exportados de Selenium IDE. Verás que aparecen muchos errores de compilación porque aun no hemos añadido las librerías necesarias de JUnit 4 y Selenium Webdriver. Para hacerlo, vamos a apoyarnos en Maven. A continuación, convierte el proyecto en un proyecto Maven: Sobre el nombre del proyecto, botón derecho, Configure > Convert to Maven project Fig. 3. Convertir proyecto a Maven Deja las opciones predeterminadas. Al mavenizar el proyecto se crea el archivo pom.xml que va a contener toda la configuración necesaria para la construcción automatizada del proyecto, así como las dependencias (librarías) necesarias. Para añadir las dependencias a JUnit 4 y a Selenium Webdriver, edita el archivo pom.xml seleccionando la pestaña para ver el código fuente xml. Fig. 4. Editar el pom.xml A continuación, añade las siguientes 4 dependencias en un nuevo bloque con la etiqueta <dependencies>, tras el bloque <build>…​</build>: ... </build> <dependencies> <dependency> (1) <groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.13.1</version> </dependency> <dependency> (2) <groupId>org.seleniumhq.selenium</groupId> <artifactId>selenium-java</artifactId> <version>3.141.59</version> </dependency> <dependency> (3) <groupId>org.seleniumhq.selenium</groupId> <artifactId>selenium-firefox-driver</artifactId> <version>3.141.59</version> </dependency> <dependency> (4) <groupId>org.seleniumhq.selenium</groupId> <artifactId>selenium-chrome-driver</artifactId> <version>3.141.59</version> </dependency> </dependencies> </project> 1 JUnit 4. 2 Selenium-Java, librería básica de Selenium Webdriver. 3 Selenium Firefox Driver, librería con el driver de Firefox para poder ejecutar los tests en este navegador. 4 Selenium Chrome Driver, librería con el driver de Chrome para poder ejecutar los tests en este navegador. Una vez guardados los cambios, los errores de compilación en tu clase .java con los test exportados de Selenium deberían desaparecer. En caso de dudas, utiliza como referencia el repositorio https://github.com/ualhmis/seleniumWebDriverJUnit que tiene ya configurado el pom.xml con las dependencias necesarias. Los test de JUnit exportados por Selenium IDE están en formato JUnit 4. Para reutilizar al máximo y no tener que hacer demasiadas modificaciones de los test exportados desde Selenium IDE, la dependencia en el pom.xml está configurada a JUnit 4. En el repositorio puedes encontrar la rama JUnit 5 donde se han adaptado los tests y las dependencias a JUnit 5. Cross-browser testing o prueba de navegadores cruzados es el proceso de probar aplicaciones y sitios web en los navegadores web más habituales que los usuarios utilizan en la actualidad. En esta sección, vamos a ejecutar los tests de Selenium en dos navegadores: Firefox y Chrome. Crea una carpeta drivers en el proyecto en Eclipse. Y añade la carpeta al .gitginore para que el contenido no se guarde en el repositorio. .gitignore **/bin **/target **/drivers Es importante que los drivers específicos de los navegadores no se guarden en el repositorio, ya que son archivos ejecutables (dependencias) específicos de la plataforma, que no deben versionarse. Cuando los necesites, tendrás que descargarlos. En esa carpeta descarga los drivers de los navegadores Firefox y Chrome. Para ello: Descarga y descomprime Firefox driver (Gecko Driver) de https://github.com/mozilla/geckodriver/releases eligiendo la versión adecuada para tu sistema. Descarga y descomprime Chrome driver de https://sites.google.com/a/chromium.org/chromedriver/downloads eligiendo la versión adecuada para tu sistema y la versión de Chrome que tengas instalado. Con estos dos drivers es suficiente como prueba de concepto, pero puedes ver como descargar los drivers de otros navegadores aquí: Driver requirements. De la sección anterior, deberás tener el un paquete en la carpeta test de nombre org.ual.cnsa.nombreEquipo (sustituyendo nombreEquipo por el nombre de tu equipo), y ahí estarán archivos .java exportados de Selenium IDE. Si has forkeado el proyecto de referencia, elimina los paquetes que contienen tests de ejemplo. A continuación se indican unas mínimas modificaciones que hay que realizar a cada archivo fuente .java exportado de Selenium IDE: Añade el paquete a cada archivo .java En el método setUp(), añade justo al principio las sentencias para configurar la ruta a cada driver: @Before public void setUp() throws Exception { System.setProperty(\"webdriver.gecko.driver\", \"drivers/geckodriver.exe\"); (1) System.setProperty(\"webdriver.chrome.driver\", \"drivers/chromedriver.exe\"); (2) ... } 1 Son rutas relativas en el proyecto, dentro de drivers hemos descargado los drivers. Usa la ruta adecuada en tu caso. 2 Idem Ejecuta los tests como JUnit Test. Verás que automáticamente se abre Firefox y ejecuta los test. A continuación vamos a probar en otro navegador, haciendo así lo que se denomina cross-browser testing. En los archivos .java cambia el driver a Chrome: @Before public void setUp() throws Exception { ... // driver = new FirefoxDriver(); driver = new ChromeDriver(); ... } Vuelve a ejecutar y verás que se abre Chrome y ejecuta el mismo test. Por último, a continuación se muestra el código con una propuesta de diseño mejorado para el método setup(), en el que se define una variable int browser para elegir el navegador, y un booleano headless que permite establecer el modo headless (que se describe más adelante en este documento): @Before public void setUp() { // Browser selector int browser= 0; // 0: firefox, 1: chrome,... Boolean headless = false; switch (browser) { case 0: // firefox // Firefox // Descargar geckodriver de https://github.com/mozilla/geckodriver/releases // Descomprimir el archivo geckodriver.exe en la carpeta drivers System.setProperty(\"webdriver.gecko.driver\", \"drivers/geckodriver.exe\"); FirefoxOptions firefoxOptions = new FirefoxOptions(); if (headless) firefoxOptions.setHeadless(headless); driver = new FirefoxDriver(firefoxOptions); break; case 1: // chrome // Chrome // Descargar Chromedriver de https://chromedriver.chromium.org/downloads // Descomprimir el archivo chromedriver.exe en la carpeta drivers System.setProperty(\"webdriver.chrome.driver\", \"drivers/chromedriver.exe\"); ChromeOptions chromeOptions = new ChromeOptions(); if (headless) chromeOptions.setHeadless(headless); chromeOptions.addArguments(\"window-size=1920,1080\"); driver = new ChromeDriver(chromeOptions); break; default: fail(\"Please select a browser\"); break; } js = (JavascriptExecutor) driver; vars = new HashMap<String, Object>(); } Si un test falla al ejecutarlo con Webdriver, revisa el código y los pasos incluidos en el mismo. Puede haber pasos que sobren, ya que muchas veces Selenium IDE recoge acciones sobre el navegador que no son realmente necesarias, o tal vez haya pasos que que al exportarlos a JUnit tengas que adaptarlos a Java. A continuación se indican soluciones a los motivos de error más habituales: Uno de los principales motivos de fallo se debe al selector Selenium IDE que ha tomado automáticamente. El selector identifica el elemento dentro de la página web sobre el que se ha interactuado, y para ello utiliza bien la referencia por ID, NAME, CSS o XPATH. Ve a Selenium IDE y cambia el selector, en la propiedad target; es recomendable utilizar la opción que identifica el elemento id pero si no es posible porque el elemento de la página web sobre el que se desea interactuar no tiene id, utiliza el identificador por xpath y el texto que queremos seleccionar. Por ejemplo, en un comando click: Fig. 5. Cambiar el selector de un elemento de la página Más información sobre los tipos de selectores (locators) en Selenium IDE: Locators in Selenium IDE: CSS Selector, DOM, XPath, Link Text, ID, y como seleccionar elementos en Webdriver En numerosas ocasiones cuando se le indica al navegador que navegue a una página y a continuación se intenta encontrar un elemento en esa página, se obtiene un error indicando que no existe tal elemento. Esto es debido al tiempo necesario para que se cargue el contenido de la página, que ha sido superior al tiempo esperado por Selenium para ejecutar la acción. Es por ello que se hace necesario añadir un tiempo de espera en medio de determinadas acciones para permitir que se cargue el contenido del formulario, la página, etc. Por ejemplo, antes del primer sendKeys que escribe un texto en un campo de formulario, y también antes y después de click() en un botón de formulario. Selenium tiene varias estrategias de espera, principalmente esperas explícitas y esperas implícitas. Podemos añadir esperas explícitas de dos formas para que el código detenga la ejecución del programa, o congelar el hilo, hasta que la condición que le pases se resuelva: añadiendo un tiempo fijo (no recomendado) Añade una espera de tiempo fijo de 1 segundo (1000 mls) try { Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); } Alternativa a meter segundos de espera con Time.sleep(). En Selenium IDE existe el comando waitForElementVisible que permite esperar hasta que un elemento esté visible. Aunque al grabar el test con Selenium IDE no es necesario añadir este comando, porque ya lo tiene implícito, cuando exportamos a WebDriver sí necesitamos meter las esperas. Por tanto es recomendable este comando en todos los pasos del test que veas que tarda en cargar la página. Fig. 6. Comando waitForElementVisible En JUnit se convierte en: Fig. 7. Código JUnit para waitForElementVisible // 9 | waitForElementVisible | xpath=\"//h2[contains(.,\\'Ingeniería y Arquitectura\\')]\" | 30000 { WebDriverWait wait = new WebDriverWait(driver, 30); wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//h2[contains(.,\\'Ingeniería y Arquitectura\\')]\"))); } En caso de que siga sin funcionar, sustituye el método visibilityOfElementLocated por otro de la misma clase ExpectedConditions`, por ejemplo elementToBeClickable (RECOMENDADO!): // 9 | waitForElementVisible | xpath=\"//h2[contains(.,\\'Ingeniería y Arquitectura\\')]\" | 30000 { WebDriverWait wait = new WebDriverWait(driver, 30); wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//h2[contains(.,\\'Ingeniería y Arquitectura\\')]\"))); } Otro método de espera es la espera implícita, que aparece en la documentación de Selenium y en los ejemplos, sin embargo no dan el resultado esperado. Por ejemplo el método implicitlyWait: driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS); Se supone que establece la cantidad de tiempo que el driver debería esperar cuando busca un elemento si este no está presente inmediatamente. Sin embargo, no funciona como se espera y los errores no se solucionan. Así que la única forma es añadir manualmente esperas explícitas en cada paso que requiera tiempo de carga de los contenidos. Puesto que añadir un sleep() está desaconsejado, la mejor opción entonces es añadir comandos waitForElementVisible y su equivalente en Webdriver wait.until(ExpectedConditions.elementToBeClickable…​). Consulta en la sección FAQ el comando waitForElementVisible, una alternativa recomendada a añadir segundos de espera fijos con Time.sleep() Si un test se ejecuta correctamente en Firefox pero falla en Chrome realiza las siguientes comprobaciones: comprueba el tamaño de la ventana, agrándala por si es el problema: driver.manage().window().setSize(new Dimension(1080, 824)); modifica los selectores, en lugar de cssSelector utiliza xpath Añade un tiempo de espera a que se cargue el formulario, antes del primer sendKeys, y también después de click() en un botón de formulario. Revisa el idioma predeterminado en la configuración de cada navegador. Puede que uno navegador lo tengas configurado en español y otro en inglés, y por tanto los textos se visualicen en diferentes idiomas. El modo headless sirve para ejecutar los tests sin que se visualice la ventana del navegador. Esto hace que los tests se ejecuten más rápido y más eficientemente, y es especialmente adecuado en un entorno de Integración Continua como Jenkins. En local, para ejecutar Firefox en modo headless añade las siguientes sentencias: @Before public void setUp() throws Exception { ... FirefoxOptions firefoxOptions = new FirefoxOptions(); (1) firefoxOptions.setHeadless(true); (2) driver = new FirefoxDriver(firefoxOptions); ... } 1 Define un nuevo objeto de opciones 2 Establece la opción headless a true Además deberás añadir los imports necesarios (Eclipse te avisa de ello): import org.openqa.selenium.firefox.FirefoxOptions; Prueba a ejecutar los tests y verás que se ejecutan sin visualizar la ventana de Firefox. Lanza los tests tanto con Eclipse como con Maven. Aseguraté de que se ejecutan correctamente con maven test. ChromeDriver funciona de manera similar a Geckodriver de Firefox, e implementa la especificación W3C WebDriver. En local, para ejecutar Chrome en modo headless: @Before public void setUp() throws Exception { ... ChromeOptions chromeOptions = new ChromeOptions(); (1) chromeOptions.setHeadless(true); (2) driver = new ChromeDriver(chromeOptions); ... } 1 Define un nuevo objeto de opciones 2 Establece la opción headless a true Además deberás añadir los imports: import org.openqa.selenium.chrome.ChromeOptions; Durante la ejecución no se abrirá la ventana de Chrome y los tests se ejecutarán correctamente. Lanza los test tanto con Eclipse como con Maven. HtmlUnit Driver es un driver headless nativo para Selenium Webdriver. Se trata de una implementación en Java de Webdriver. En local, comenta los otros drivers y cambia el driver a HtmlUnitDriver(); @Before public void setUp() throws Exception { ... // simple case - javascript support enabled driver = new HtmlUnitDriver(BrowserVersion.FIREFOX_68, true) ... } Debes importar la librería: import org.openqa.selenium.htmlunit.HtmlUnitDriver; HtmlUnit Driver da muchos problemas, sobre todo con JavaScript. Es la versión reducida de un navegador, por lo que no soporta gran parte de la funcionalidad del mismo, y la mayoría de tests que funcionan para FirefoxDriver y ChromeDriver fallan con HtmlUnitDriver. Si te fallan los test HtmlUnitDriver no te preocupes. El modo headless de FirefoxDriver y ChromeDriver nos ayudará a nuestro objetivo. Problema al actualizar un campo de texto que ya contiene un valor. Cuando un test de Selenium trata de actualizar el valor de un campo de texto que ya contiene un valor, por ejemplo al modificar el email del perfil de usuario, el test grabado con Selenium IDE simplemente captura los eventos que guardan el nuevo valor mediante un comando type y el nuevo valor se guarda en la propiedad Value. Fig. 8. Comandos Selenium IDE para actualizar el email 1 Nuevo valor de email La siguiente imagen muestra la vista de la app web, antes de escribir el nuevo valor, muestra el valor antiguo. Fig. 9. Vista de la app web para actualizar el email (se muestra el valor antiguo) El problema se produce al exportar a JUnit el comando type, se traduce en una llamada al método sendkeys(\"nuevoValor\"). Por ejemplo: driver.findElement(By.Id(\"email-address\")).sendKeys(\"ualkk000@ual.es\"); Y el método sendkeys(\"nuevoValor\") no reemplaza el valor existente, sino que concatena el valor existente con el nuevo, algo asi: ual-744547@ual.esualkk000@ual.es Para solucionar este problema simplemente hay que llamar al método clear(), que limpia el contenido del campo de texto, y tras ello escribir el nuevo valor con sendKeys(…​) driver.findElement(By.Id(\"email-address\")).clear(); (1) driver.findElement(By.Id(\"email-address\")).sendKeys(\"ualkk000@ual.es\"); 1 Añadir manualmente la llamada a clear() para limpiar el contenido del campo de texto. La llamada a clear() también será útil si se quiere probar el caso de dejar en blanco el campo email. En el caso de que clear() no funcione, podemos probar la siguiente combinación de teclas, bien en una llamada o bien en dos: driver.findElement(By.Id(\"email-address\")).sendKeys(Keys.chord(Keys.CONTROL,\"a\", Keys.DELETE)); driver.findElement(By.Id(\"email-address\")).sendKeys(Keys.chord(Keys.CONTROL,\"a\")); driver.findElement(By.Id(\"email-address\")).sendKeys(Keys.chord(Keys.DELETE)); Navegador headless queda ejecutándose en background. Cuando falla la ejecución de un test de Selenium WebDriver en modo headless, el navegador puede quedar ejecutándose en background, pudiendo consumir recursos del sistema innecesariamente. Fig. 10. Decenas de procesos sin morir del navegador en modo headless Es necesario revisar los procesos tanto en nuestra máquina local como en Jenkins y matarlos para evitar que queden ejecutándose consumiendo recursos. Mas información sobre Maven con Selenium. Best Practices while writing Selenium tests with Java (sección al final de la página) Assert and Verify Methods in Selenium Webdriver","title":"Selenium WebDriver","component":"selenium-testing","version":"0.22.0","name":"selenium-webdriver","url":"/selenium-testing/0.22.0/selenium-webdriver.html","titles":[{"text":"¿Qué es WebDriver?","hash":"_qué_es_webdriver","id":1},{"text":"Exportar de Selenium IDE a JUnit","hash":"_exportar_de_selenium_ide_a_junit","id":2},{"text":"Creación del proyecto en Eclipse","hash":"_creación_del_proyecto_en_eclipse","id":3},{"text":"Cross-browser testing en Eclipse","hash":"_cross_browser_testing_en_eclipse","id":4},{"text":"Corrigiendo errores habituales","hash":"_corrigiendo_errores_habituales","id":5},{"text":"Selectores","hash":"_selectores","id":6},{"text":"Esperas","hash":"_esperas","id":7},{"text":"Otras comprobaciones","hash":"_otras_comprobaciones","id":8},{"text":"Configurar un driver headless","hash":"_configurar_un_driver_headless","id":9},{"text":"Firefox en modo headless","hash":"_firefox_en_modo_headless","id":10},{"text":"ChromeDriver en modo headless","hash":"_chromedriver_en_modo_headless","id":11},{"text":"HtmlUnit Driver: modo headless nativo","hash":"_htmlunit_driver_modo_headless_nativo","id":12},{"text":"FAQ y resolución de problemas (thoubleshouting)","hash":"_faq_y_resolución_de_problemas_thoubleshouting","id":13},{"text":"Más info","hash":"_más_info","id":14}]},"42":{"id":42,"text":"Computación en la Nube, Servicios y Aplicaciones. Francisco García <paco.garcia@ual.es>, Joaquín Cañadas <jjcanada@ual.es> Version 0.22-beta.1 Objetivos Crear una infraestructura de CI/CD en GitHub mediante el uso de GitHub Actions Diseñar flujos de trabajo para la construcción y despliegue automatizado de portales de documentación y aplicaciones NodeJs Realización y entrega La realización de estas actividades se realizará de forma individual. La entrega será mediante el envío de un informe y el acceso al profesor a los servicios configurados por cada estudiante, para la revisión y evaluación de los mismos. Esta es la versión 0.22-beta.1 de este documento.","title":"Despliegue continuo con GitHub Actions","component":"github-actions","version":"0.22","name":"index","url":"/github-actions/0.22/index.html","titles":[]},"43":{"id":43,"text":"Antora permite gestionar la documentación de un proyecto como si fuera código. Esto significa que el proceso de documentación se beneficia de las mismas prácticas utilizadas para producir software con éxito. Algunas de estas prácticas son: Almacenar el contenido en un sistema de control de versiones. Separar el contenido, la configuración y la presentación. Aprovechar la automatización para la compilación, validación, verificación y publicación. Reutilización de materiales compartidos (DRY). Antora ayuda a incorporar estas prácticas en el flujo de trabajo de documentación. Como resultado, la documentación es mucho más fácil de gestionar, mantener y mejorar. Para empezar a trabajar solo necesitas un repositorio alojado en GitHub de tipo público. Las GitHub Actions funcionan tanto con repositorios públicos como privados. Sin embargo, otras funciones como las GitHub Pages solo funcionan con los repositorios públicos. En este repositorio subiremos el contenido de un proyecto de documentación en Antora. Descomprimimos el archivo en un directorio Entramos al directorio y hacemos git init Creamos la rama principal git checkout -b main Hacemos commit de todos los archivos con git add -A && git commit Añadimos el remote de nuestro repositorio git remote add origin <dirección-repositorio> Subimos la rama local git push origin main` Nuestro repositorio tiene que tener la siguiente estructura: A continuación, vamos a añadir un workflow que construya nuestro proyecto en Antora. Al tratarse de un proyecto basado en NodeJS, utilizaremos una imagen Docker con éste instalado y seguiremos un proceso de construcción común a éste tipo de proyectos. Para más información sobre la construcción de proyectos Antora https://docs.antora.org/antora/latest/install-and-run-quickstart/ Crea un directorio .github/workflows. En este directorio, crea un fichero llamado build.yml. Copia el siguiente contenido YAML en el fichero anterior. build.yml name: CI on: (1) push: branches: [ main ] pull_request: branches: [ main ] workflow_dispatch: (2) jobs: build: # The type of runner that the job will run on runs-on: ubuntu-latest container: node:16-alpine (3) steps: - uses: actions/checkout@v2 - name: Install dependencies (4) run: npm install - name: Build Antora project (5) run: | cp -R node_modules/@antora/lunr-extension/supplemental_ui/* supplemental-ui/ (6) npx antora local-antora-playbook.yml --fetch (7) 1 Se ejecuta al hacer push en la rama main o un pull request con destino main. 2 Podemos lanzar el workflow cuando queramos. 3 Utilizamos una imagen Docker con NodeJS 16 instalado. 4 Instalamos las dependencias del proyecto NodeJS. 5 Construimos el proyecto Antora. 6 Paso extra necesario al utilizar la extensión @antora/lunr-extension 7 Comando para construir la documentación Antora a partir del playbook. Hacemos commit de los cambios y hacemos push a la rama remota git add -A && git commit git push origin main Podemos comprobar que todo se ha realizado correctamente, viendo el resultado de la acción. Hemos conseguido configurar un workflow que permite compilar la documentación en Antora cada vez que se hace un pull request, un push a main o de forma manual. Sin embargo, no tenemos acceso a la página web que se construye. Si queremos asociar la documentación a cada ejecución tenemos que hacer uso de un action que suba artefactos (artifacts). Vamos al GitHub Actions Marketplace Buscamos la palabra artifact. Seleccionamos Upload a Build Artifact que es un action creado por GitHub. Buscamos como utilizar la action en su documentación. Modificamos nuestro flujo build.yml` con un paso extra. build.yml ... # Uploads the generated site - uses: actions/upload-artifact@v3 with: name: docs (1) path: docs/ (2) 1 Nombre del fichero zip que descargaremos. 2 Carpeta con la documentación. Por defecto Antora usa el directorio docs Tras hacer un push o una pull request, se ejecutará el workflow y podemos descargar la documentación en el zip del final de la página. Es un servicio de GitHub que ermite publicar páginas en HTML estático o en Jekyll. Además proporciona un dominio y url públicas: https://organización.github.io https://organización.github.io/repositorio Podemos desplegar un sitio web mediante un directorio en el repositorio o con una rama especial (gh-pages). Este servicio es usado normalmente para despliegue de frontends o portales de documentación de repositorios, como el caso que nos ocupa. Vamos a utilizar el action Deploy to GitHub Pages. Leemos la documentación. Si utilizamos un contenedor tenemos que tener instalado git y rsync para usar esta action. - name: Install rsync and git run: | apt-get update && apt-get install -y rsync git # apk update && apk add rsync git - name: Deploy uses: JamesIves/github-pages-deploy-action@v4.2.5 Modificamos los pasos de nuestro flujo build.yml como primer y último paso build.yml steps: - name: Install git and rsync 📚 run: | apk update && apk add git rsync ... - name: Deploy 🚀 uses: JamesIves/github-pages-deploy-action@v4.2.5 if: contains(github.ref,'refs/heads/main') (1) with: branch: gh-pages (2) folder: docs (3) clean: true (4) 1 Solo se ejecuta si hacemos push a la rama main. Evitamos modificar la rama gh-pages al construir una pull request. 2 La rama donde vamos a desplegar. 3 La carpeta que queremos desplegar. 4 Si queremos limpiar la rama para evitar que ficheros no existentes se queden en la rama. Hacemos commit y subimos los cambios. Una vez se ha ejecutado la acción, configuramos el soporte para GitHub Pages. Entramos en Settings > Pages y seleccionamos la rama gh-pages como origen. En esta página podemos consultar la url de la documentación desplegada. EJERCICIOS (Optativos) Añade un nuevo paso que permita crear un release a partir de la creación de un tag. Puedes basarte en el siguiente ejemplo.","title":"Primer ejemplo: Documentación en Antora","component":"github-actions","version":"0.22","name":"antora-doc","url":"/github-actions/0.22/first-steps/antora-doc.html","titles":[{"text":"Introducción a Antora","hash":"_introducción_a_antora","id":1},{"text":"Creación del repositorio","hash":"_creación_del_repositorio","id":2},{"text":"Creando el workflow para Antora","hash":"_creando_el_workflow_para_antora","id":3},{"text":"Descarga de los artefactos (artifacts)","hash":"_descarga_de_los_artefactos_artifacts","id":4},{"text":"Despliegue en GitHub Pages","hash":"_despliegue_en_github_pages","id":5}]},"44":{"id":44,"text":"Objetivos Comenzar a crear flujos de trabajo (workflows) de GitHub Actions. Probar un flujo de trabajo sencillo para familiarizarse con la plataforma. GitHub Actions es una plataforma de integración continua y despliegue continuo (CI/CD) que permite crear flujos de construcción, test y despliegue en GitHub. Estos flujos de trabajo permiten crear y probar cada solicitud de cambios en tu repositorio o desplegar solicitudes de cambios fusionadas a producción. Sus principales características son: Permite automatizar los flujos de trabajo proporcionando capacidades de CI/CD a GitHub. Construye, prueba y despliega tu código directamente desde GitHub. Permite integrar las revisiones de código, manejo de ramas, resolución de incidencias y creación de releases. Permite descubrir, crear y compartir actions para ejecutar cualquier trabajo que quieras. Para empezar a trabajar con GitHub Actions solo necesitas un repositorio alojado en GitHub. Para ello seguimos los siguientes pasos: Al lado de nuestro avatar de usuario, pulsamos en + > New Repository Creamos un repositorio llamado hello-action de tipo público. Las GitHub Actions funcionan tanto con repositorios públicos como privados. Sin embargo, otras funciones como las GitHub Pages solo funcionan con los repositorios públicos. A continuación, vamos a añadir un workflow que muestra las características esenciales de GitHub Actions. Este ejemplo muestra como los trabajos de GitHub Actions pueden ser ejecutados automáticamente, donde corren y como interactuan con el código de tu repositorio. Clona en tu equipo el repositorio creado anteriormente. Crea un directorio .github/workflows. En este directorio, crea un fichero llamado github-actions-demo.yml. Copia el siguiente contenido YAML en el fichero anterior. github-actions-demo.yml name: GitHub Actions Demo (1) on: [push] (2) jobs: Explore-GitHub-Actions: (3) runs-on: ubuntu-latest (4) steps: - run: echo \"🎉 The job was automatically triggered by a ${{ github.event_name }} event.\" (5) - run: echo \"🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!\" - run: echo \"🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}.\" - name: Check out repository code (6) uses: actions/checkout@v2 (7) - run: echo \"💡 The ${{ github.repository }} repository has been cloned to the runner.\" - run: echo \"🖥️ The workflow is now ready to test your code on the runner.\" - name: List files in the repository run: | ls ${{ github.workspace }} - run: echo \"🍏 This job's status is ${{ job.status }}.\" 1 Nombre del workflow. 2 Cuando se ejecuta el workflow. En este caso al hacer push en cualquier rama. 3 Nombre del trabajo. 4 Máquina donde se ejecuta el trabajo. 5 Comando de terminal bash. 6 Nombre del paso. 7 Reutilización de un action creada por otro usuario. En este caso es la que se utiliza para obtener el código del repositorio. Hacemos commit de los cambios y hacemos push a la rama remota git add -A && git commit git push origin main Es posible que la GitHub Actions no se ejecute instantaneamente y tarde un poco en aparecer. Los recursos son compartidos entre todos los usuarios de GitHub. En la página principal del repositorio, selecciona Actions en el menú principal En esta página podemos ver tanto el listado de workflows que tenemos en nuestro repositorio, como las ejecuciones de cada uno. Además podemos ver si ha habido éxito en la ejecución del workflow. Pulsamos en el nombre del commit (hello action en la imagen anterior) y accederemos a un resumen de la ejecución. En esta suelen aparecer las estadísticas de tiempo, los artefactos asociados y cada uno de los trabajos o jobs de nuestro workflow. Pulsamos en el nombre del trabajo (Explore-GitHub-Actions en la imagen anterior) y vemos una descripción de cada una de los pasos o steps del trabajo. Además podemos ver el log de ejecución de cada uno de los pasos.","title":"Comenzando con GitHub Actions","component":"github-actions","version":"0.22","name":"first-project","url":"/github-actions/0.22/first-steps/first-project.html","titles":[{"text":"Introducción a GitHub Actions","hash":"_introducción_a_github_actions","id":1},{"text":"Creación del repositorio","hash":"_creación_del_repositorio","id":2},{"text":"Creando tu primer workflow","hash":"_creando_tu_primer_workflow","id":3},{"text":"Comprobando el resultado","hash":"_comprobando_el_resultado","id":4}]},"45":{"id":45,"text":"Objetivos Vamos a crear un repositorio vacio donde crear nuestro primer flujo de trabajo con GitHub Actions. Después, con el repositorio con la documentación de la asignatura crearemos los primeros ejemplos de GitHub Actions que nos permitirán crear artefactos y desplegar la documentación en HTML en GitHub Pages.","title":"Primeros pasos con GitHub Actions","component":"github-actions","version":"0.22","name":"index","url":"/github-actions/0.22/first-steps/index.html","titles":[]},"46":{"id":46,"text":"Objetivos Como construir y desplegar apliaciones web NodeJS con GitHub Actions Definir un flujo de trabajo para automatizar las etapas más habituales en CI/CD Desplegar la aplicación NodeJS tanto de forma nativa como mediante contenedor","title":"Aplicación en NodeJS","component":"github-actions","version":"0.22","name":"index","url":"/github-actions/0.22/node-app/index.html","titles":[]},"47":{"id":47,"text":"A continuación se muestra un ejemplo de integración y despliegue continuos en GitHub Actions de un proyecto NodeJS. Los pasos a realizar son similares a los ejemplos anterior con Jenkins pero adaptaremos las ordenes o comandos a la forma de trabajar de GitHub Actions. La implementación de la integración y despliegue continuo permitirá que, para cada pull request en el repositorio, GitHub Actions instale las dependencias y ejecute los tests. Si los tests pasan correctamente, GitHub Actions desplegará la aplicación en el servidor de despliegue. Y si fallan, se notificará al desarrollador. Para empezar a trabajar solo necesitas un repositorio alojado en GitHub de tipo público. Las GitHub Actions funcionan tanto con repositorios públicos como privados. Sin embargo, otras funciones como las GitHub Pages solo funcionan con los repositorios públicos. En este repositorio subiremos el contenido de un proyecto HelloWorld en NodeJS. Descomprimimos el archivo en un directorio Entramos al directorio y hacemos git init Creamos la rama principal git checkout -b main Hacemos commit de todos los archivos con git add -A && git commit Añadimos el remote de nuestro repositorio git remote add origin <dirección-repositorio> Subimos la rama local git push origin main` Nuestro repositorio tiene que tener la siguiente estructura: Comprueba que los archivos main.js, app.js y app.test.js, así como la carpeta services, estén dentro de una carpeta src. Si no es así, crea la carpeta src y muevelos dentro. Fig. 1. Archivos y carpetas en el estado inicial Creamos un nuevo workflow .github/workflows/build.yml .github/workflows/build.yml name: CI on: push: branches: [ master ] (1) pull_request: branches: [ master ] workflow_dispatch: jobs: build: runs-on: ubuntu-latest container: node:16-alpine steps: - uses: actions/checkout@v2 - name: Install dependencies run: npm install - name: Test run: npm run test-jenkins (2) 1 El nombre de la rama master o main depende de cual es la rama principal. 2 Ejecuta los tests de igual forma a como los definimos para Jenkins. El resultado sera: Fig. 2. Nodeapp action Sin embargo nos interesaría verlo de una forma más visual e integrado en el entorno de GitHub utilizando el action Test Reporter. Esta acción permite anotar las pull requests con un test en formato junit. Editamos .github/workflows/build.yml y añadimos la acción para subir un artefacto con los resultados de los tests. .github/workflows/build.yml ... - uses: actions/upload-artifact@v2 if: success() || failure() (1) with: name: test-results (2) path: ./coverage/test.results.xml (3) 1 Ejecutamos el paso independiente de los fallos. 2 Nombre del artefacto. 3 Ruta del resultado de los tests. Además añadimos otro flujo que anote la pull request llamado .github/workflows/tests.yml .github/workflows/tests.yml name: 'Test Report' on: workflow_run: workflows: ['CI'] (1) types: - completed jobs: report: runs-on: ubuntu-latest (2) steps: - uses: dorny/test-reporter@v1 with: artifact: test-results (3) name: JEST Tests (4) path: 'test.results.xml' (5) reporter: jest-junit (6) 1 Se ejecuta cuando se completa el flujo llamado CI. 2 No hace falta contenedor. 3 Nombre del artefacto con los tests. 4 Nombre del check. 5 Nombre de los resultados dentro del zip. 6 Formato de los resultados. Subimos los cambios y podemos comprobar el resultado en los Checks. Como ya sabemos, la cobertura de código nos va a ofrecer un valor directamente relacionado con la calidad de los juegos de prueba. Para obtener la cobertura y publicarla en GitHub Actions, debemos hacer: Utilizar un action que se encarge de la publicación de la cobertura como Jest Github Action. Modificar el paso Test del flujo de GitHub Actions para que llame al script de cobertura y publique el informe de cobertura generado. Modifica .github/workflows/build.yml, cambiando el paso Test por la ejecución del action. Además pública todos los tests como artifact. .github/workflows/build.yml ... - name: Test uses: mattallty/jest-github-action@v1 env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: test-command: \"npm run coverage-jenkins\" (1) ... - uses: actions/upload-artifact@v2 if: success() || failure() with: name: test-results path: ./coverage/test.results.xml path: | ./coverage/ (2) 1 Genera los tests de cobertura. 2 Subimos la carpeta completa. Podemos probar realizando un pull request de prueba. Fig. 3. Ejecución de cobertura El código JavaScript es dinámicamente tipado, por lo que en lugar de usar el compilador para realizar el análisis estático de código, como ocurre en lenguajes como Java, las formas más comunes de análisis estático en JavaScript son formatters y linters. Formatters o formateadores, escanean y reformatean rápidamente los archivos de código. Uno de los más populares es Prettier, que como cualquier buen formateador, corregirá automaticamente las inconsistencias que encuentre. Linters pueden trabajar en aspectos de formato pero también otros problemas más complejos. Se basan en una serie de reglas para escanear el código, o descripciones de comportamientos a vigilar, y muestran todas las violaciones que encuentran. El más popular para JavaScript es ESLint. Vamos a probar ESLint con Prettier en GitHub Actions con la action ESLint Annotate from Report JSON. Para utilizarla, vamos a añadir al package.json un script para lint en formato json package.json: lint y dependencia a ESLint ... \"scripts\": { ... \"lint:json\": \"eslint src/**/*.js --format json -o coverage/eslint-result.json\" }, ... En nuestro flujo .github/workflows/build.yml, añade dos nuevos pasos: uno en el que llames a lint:json y otro que ejecute la action para anotar el código. .github/workflows/build.yml ... - name: Save Code Linting Report JSON run: npm run lint:json continue-on-error: true (1) - name: Annotate Code Linting Results uses: ataylorme/eslint-annotate-action@1.2.0 with: repo-token: \"${{ secrets.GITHUB_TOKEN }}\" (2) report-json: \"./coverage/eslint-result.json\" (3) ... 1 Continua ejecutando el flujo aunque se produzca un error. 2 Esta action necesita un token para poder anotar el código. Esta disponible sin realizar más acciones. 3 Ruta del informe de ESLint. Podemos probar realizando un pull request de prueba y viendo el resultado en la pestaña Files Changed. Fig. 4. Ejecución de ESLint Para desplegar la aplicación hello world en la instancia de despliegue vamos a clonar el repositorio y a continuación ejecutaremos en ella la orden de Node para ponerla en marcha. Recuerda que ya he hemos realizado una configuración previa sobre la instancia de despliegue, que constituyen los prerrequisitos para esta sección: Con anterioridad ya instalamos NodeJS en la instancia de despliegue. Tenemos creado un par de claves y hemos copiado la clave pública de despliegue al authorized_keys para que GitHub pueda ejecutar comandos sobre ella usando la clave privada. Como requisito adicional, para ayudarnos a lanzar npm start desde GitHub Actions, como un proceso demonio en background, usaremos forever. Debes instalar forever en la instancia de despliegue: sudo npm install forever -g Una vez revisados los prerrequisitos, vamos a configurar nuestro repositorio de GitHub para que pueda realizar el despliegue. Ve a tu repositorio en Github y entra en Settings > Secrets. Crea un nuevo secreto con New Repository Secret. Este secreto contiene dos cosas: un nombre y el valor. El nombre se utiliza para obtener el valor más tarde en un flujo de trabajo de Github Actions. Introduce como nombre SSH_PRIVATE_KEY. Copia y pega el contenido de la clave privada como el valor. Fig. 5. Nuevo secreto Ahora tenemos que añadir la clave privada a la máquina o contenedor de nuestro flujo de trabajo. Para simplificar el proceso podemos usar una action como Install SSH Key. Además, vamos a realizar el despliegue en un flujo nuevo .github/workflows/deploy.yml que solo se ejecute al hacer push sobre la rama principal. .github/workflows/deploy.yml name: Deploy on: push: branches: [ master ] workflow_dispatch: jobs: deploy: runs-on: ubuntu-latest steps: - name: Install SSH Key uses: shimataro/ssh-key-action@v2 with: key: ${{ secrets.SSH_PRIVATE_KEY }} (1) known_hosts: 'un-valor-para-que-no-de-error' (2) 1 Nombre del secreto con la clave privada. 2 Valor del known_hosts de la máquina a la que nos conectamos. Metemos un valor de ejemplo para calcularlo dinámicamente en pasos posteriores. Vamos a guardar como secreto la IP o nombre de dominio de la máquina de despliegue con el nombre de SSH_HOST. Con este valor, vamos a añadir un paso que obtenga el known_hosts y lo escriba. .github/workflows/deploy.yml ... - name: Adding Known Hosts run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts De forma similar a como lo haciamos con Jenkins, vamos a añadir un último paso que realize el despliegue mediante ssh. .github/workflows/deploy.yml - name: Deploy run: | ssh ubuntu@${{ secrets.SSH_HOST }} \"if [ ! -d 'nodeapp' ]; then \\ git clone https://github.com/ualcnsa/nodeapp.git; \\ (1) else \\ cd nodeapp && git stash && git fetch --all && git reset --hard origin/master && git pull origin master; \\ fi\" ssh ubuntu@${{ secrets.SSH_HOST }} \"if pgrep node; then forever stopall; fi\" ssh ubuntu@${{ secrets.SSH_HOST }} \"cd nodeapp && npm install\" ssh ubuntu@${{ secrets.SSH_HOST }} \"cd nodeapp && forever start src/main.js\" 1 Nombre del repositorio a desplegar. Podemos acceder a la aplicación mediante el puerto 3000. Si no se puede acceder, habrá que abrirlo en la consola de Google Cloud. Fig. 6. Resultado del despliegue EJERCICIOS (Optativos) Crea un nuevo flujo de despliegue, similar al creado en Jenkins, que utilize Docker. Puedes hacerlo de forma manual (mediante script) o busca actions que te ayuden a publicarlo en el registro de Google Cloud. Referencias Deploying to a server via SSH and Rsync in a Github Action","title":"Hola mundo en NodeJS","component":"github-actions","version":"0.22","name":"node-hello","url":"/github-actions/0.22/node-app/node-hello.html","titles":[{"text":"Creación del repositorio","hash":"_creación_del_repositorio","id":1},{"text":"Creación del workflow en GitHub Actions","hash":"_creación_del_workflow_en_github_actions","id":2},{"text":"Informe de cobertura","hash":"_informe_de_cobertura","id":3},{"text":"Análisis estático de código","hash":"_análisis_estático_de_código","id":4},{"text":"Despliegue en la VM","hash":"_despliegue_en_la_vm","id":5},{"text":"Añadir la clave privada a los secretos del repositorio.","hash":"_añadir_la_clave_privada_a_los_secretos_del_repositorio","id":6},{"text":"Añadir la clave privada al flujo de trabajo de Github Actions","hash":"_añadir_la_clave_privada_al_flujo_de_trabajo_de_github_actions","id":7},{"text":"Añadir un valor correcto de known_hosts","hash":"_añadir_un_valor_correcto_de_known_hosts","id":8},{"text":"Añadir el código de despliegue","hash":"_añadir_el_código_de_despliegue","id":9}]}},"components":{},"componentVersions":{"despliegue-continuo/0.25.0":{"displayVersion":"0.25.0","title":"Despliegue continuo con Jenkins","version":"0.25.0","name":"despliegue-continuo","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"CNSA","site-url":"https://ualcnsa.github.io/cicd","encoding":"utf-8","lang":"es","figure-caption":"Fig.","example-caption!":null,"page-component-sort-order":"despliegue-continuo, selenium-testing, github-actions"},"sourcemap":false},"url":"/despliegue-continuo/0.25.0/index.html","navigation":[{"items":[{"content":"Introducción","url":"/despliegue-continuo/0.25.0/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Prerrequisitos","url":"/despliegue-continuo/0.25.0/prerrequisitos/index.html","urlType":"internal"}],"root":true,"order":1},{"items":[{"content":"Creación de la infraestructura en Google Cloud","url":"/despliegue-continuo/0.25.0/infraestructura/index.html","urlType":"internal"}],"root":true,"order":2},{"items":[{"content":"Primeros pasos con Jenkins","url":"/despliegue-continuo/0.25.0/jenkinsdocker/index.html","urlType":"internal","items":[{"content":"Instalación y configuración de Jenkins","url":"/despliegue-continuo/0.25.0/jenkinsdocker/install-jenkins.html","urlType":"internal"},{"content":"Primeros ejemplos","url":"/despliegue-continuo/0.25.0/jenkinsdocker/first-projects.html","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"Aplicación Web Java","url":"/despliegue-continuo/0.25.0/java-web-app/index.html","urlType":"internal","items":[{"content":"PetClinic","url":"/despliegue-continuo/0.25.0/java-web-app/java-petclinic.html","urlType":"internal"},{"content":"PetClinic con Docker","url":"/despliegue-continuo/0.25.0/java-web-app/java-petclinic-docker.html","urlType":"internal"}]}],"root":true,"order":4},{"items":[{"content":"Aplicación en Node.js","url":"/despliegue-continuo/0.25.0/node-app/index.html","urlType":"internal","items":[{"content":"<em>Hola mundo</em> en Node.js","url":"/despliegue-continuo/0.25.0/node-app/node-hello.html","urlType":"internal"},{"content":"<em>Hola mundo</em> en Node.js con Docker","url":"/despliegue-continuo/0.25.0/node-app/node-hello-docker.html","urlType":"internal"}]}],"root":true,"order":5}]},"despliegue-continuo/0.24.0":{"displayVersion":"0.24.0","title":"Despliegue continuo con Jenkins","version":"0.24.0","name":"despliegue-continuo","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"CNSA","site-url":"https://ualcnsa.github.io/cicd","encoding":"utf-8","lang":"es","figure-caption":"Fig.","example-caption!":null,"page-component-sort-order":"despliegue-continuo, selenium-testing, github-actions"},"sourcemap":false},"url":"/despliegue-continuo/0.24.0/index.html","navigation":[{"items":[{"content":"Introducción","url":"/despliegue-continuo/0.24.0/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Prerrequisitos","url":"/despliegue-continuo/0.24.0/prerrequisitos/index.html","urlType":"internal"}],"root":true,"order":1},{"items":[{"content":"Creación de la infraestructura en Google Cloud","url":"/despliegue-continuo/0.24.0/infraestructura/index.html","urlType":"internal"}],"root":true,"order":2},{"items":[{"content":"Primeros pasos con Jenkins","url":"/despliegue-continuo/0.24.0/jenkinsdocker/index.html","urlType":"internal","items":[{"content":"Instalación y configuración de Jenkins","url":"/despliegue-continuo/0.24.0/jenkinsdocker/install-jenkins.html","urlType":"internal"},{"content":"Primeros ejemplos","url":"/despliegue-continuo/0.24.0/jenkinsdocker/first-projects.html","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"Aplicación Web Java","url":"/despliegue-continuo/0.24.0/java-web-app/index.html","urlType":"internal","items":[{"content":"PetClinic","url":"/despliegue-continuo/0.24.0/java-web-app/java-petclinic.html","urlType":"internal"},{"content":"PetClinic con Docker","url":"/despliegue-continuo/0.24.0/java-web-app/java-petclinic-docker.html","urlType":"internal"}]}],"root":true,"order":4},{"items":[{"content":"Aplicación en Node.js","url":"/despliegue-continuo/0.24.0/node-app/index.html","urlType":"internal","items":[{"content":"<em>Hola mundo</em> en Node.js","url":"/despliegue-continuo/0.24.0/node-app/node-hello.html","urlType":"internal"},{"content":"<em>Hola mundo</em> en Node.js con Docker","url":"/despliegue-continuo/0.24.0/node-app/node-hello-docker.html","urlType":"internal"}]}],"root":true,"order":5}]},"despliegue-continuo/0.22.2":{"displayVersion":"0.22.2","title":"Despliegue continuo con Jenkins","version":"0.22.2","name":"despliegue-continuo","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"CNSA","site-url":"https://ualcnsa.github.io/cicd","encoding":"utf-8","lang":"es","figure-caption":"Fig.","example-caption!":null,"page-component-sort-order":"despliegue-continuo, selenium-testing, github-actions"},"sourcemap":false},"url":"/despliegue-continuo/0.22.2/index.html","navigation":[{"items":[{"content":"Introducción","url":"/despliegue-continuo/0.22.2/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Prerrequisitos","url":"/despliegue-continuo/0.22.2/prerrequisitos/index.html","urlType":"internal"}],"root":true,"order":1},{"items":[{"content":"Creación de la infraestructura en Google Cloud","url":"/despliegue-continuo/0.22.2/infraestructura/index.html","urlType":"internal"}],"root":true,"order":2},{"items":[{"content":"Primeros pasos con Jenkins","url":"/despliegue-continuo/0.22.2/jenkinsdocker/index.html","urlType":"internal","items":[{"content":"Instalación y configuración de Jenkins","url":"/despliegue-continuo/0.22.2/jenkinsdocker/install-jenkins.html","urlType":"internal"},{"content":"Primeros ejemplos","url":"/despliegue-continuo/0.22.2/jenkinsdocker/first-projects.html","urlType":"internal"}]}],"root":true,"order":3},{"items":[{"content":"Aplicación Web Java","url":"/despliegue-continuo/0.22.2/java-web-app/index.html","urlType":"internal","items":[{"content":"PetClinic","url":"/despliegue-continuo/0.22.2/java-web-app/java-petclinic.html","urlType":"internal"},{"content":"PetClinic con Docker","url":"/despliegue-continuo/0.22.2/java-web-app/java-petclinic-docker.html","urlType":"internal"}]}],"root":true,"order":4},{"items":[{"content":"Aplicación en Node.js","url":"/despliegue-continuo/0.22.2/node-app/index.html","urlType":"internal","items":[{"content":"<em>Hola mundo</em> en Node.js","url":"/despliegue-continuo/0.22.2/node-app/node-hello.html","urlType":"internal"},{"content":"<em>Hola mundo</em> en Node.js con Docker","url":"/despliegue-continuo/0.22.2/node-app/node-hello-docker.html","urlType":"internal"}]}],"root":true,"order":5}]},"selenium-testing/0.22.0":{"displayVersion":"0.22.0-beta.1","title":"Pruebas de Aceptación (e2e) con Selenium","version":"0.22.0","name":"selenium-testing","prerelease":"-beta.1","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"CNSA","site-url":"https://ualcnsa.github.io/cicd","encoding":"utf-8","lang":"es","figure-caption":"Fig.","example-caption!":null,"page-component-sort-order":"despliegue-continuo, selenium-testing, github-actions"},"sourcemap":false},"url":"/selenium-testing/0.22.0/index.html","navigation":[{"items":[{"content":"Introducción","url":"/selenium-testing/0.22.0/index.html","urlType":"internal"},{"content":"Comenzando con Selenium","url":"/selenium-testing/0.22.0/selenium-ide-intro.html","urlType":"internal"},{"content":"Caso práctico","url":"/selenium-testing/0.22.0/selenium-ide-ejercicios.html","urlType":"internal"},{"content":"Selenium WebDriver","url":"/selenium-testing/0.22.0/selenium-webdriver.html","urlType":"internal"},{"content":"Tests de Selenium en Jenkins","url":"/selenium-testing/0.22.0/selenium-jenkins.html","urlType":"internal"}],"root":true,"order":0}]},"github-actions/0.22":{"displayVersion":"0.22-beta.1","title":"Despliegue continuo con GitHub Actions","version":"0.22","name":"github-actions","prerelease":"-beta.1","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"CNSA","site-url":"https://ualcnsa.github.io/cicd","encoding":"utf-8","lang":"es","figure-caption":"Fig.","example-caption!":null,"page-component-sort-order":"despliegue-continuo, selenium-testing, github-actions"},"sourcemap":false},"url":"/github-actions/0.22/index.html","navigation":[{"items":[{"content":"Introducción","url":"/github-actions/0.22/index.html","urlType":"internal"}],"root":true,"order":0},{"items":[{"content":"Primeros pasos con GitHub Actions","url":"/github-actions/0.22/first-steps/index.html","urlType":"internal","items":[{"content":"Comenzando con GitHub Actions","url":"/github-actions/0.22/first-steps/first-project.html","urlType":"internal"},{"content":"Primer ejemplo: Documentación en Antora","url":"/github-actions/0.22/first-steps/antora-doc.html","urlType":"internal"}]}],"root":true,"order":1},{"items":[{"content":"Aplicación en NodeJS","url":"/github-actions/0.22/node-app/index.html","urlType":"internal","items":[{"content":"<em>Hola mundo</em> en NodeJS","url":"/github-actions/0.22/node-app/node-hello.html","urlType":"internal"}]}],"root":true,"order":2}]}}}})